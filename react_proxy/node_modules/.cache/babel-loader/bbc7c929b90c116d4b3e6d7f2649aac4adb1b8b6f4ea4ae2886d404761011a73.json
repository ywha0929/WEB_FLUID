{"ast":null,"code":"var _jsxFileName = \"/home/ywha/WEB_FLUID/react_proxy/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport { StyleSheet, View, Text, TextInput, Button, ScrollView, SafeAreaView, Pressable } from 'react-native';\nimport TcpSocket from \"react-native-tcp-socket\";\nimport utf8 from 'utf8';\nimport { Buffer } from 'buffer';\nimport LinearLayout from \"./components/LinearLayout\";\nimport OtherLayout from \"./components/OtherLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar client;\nvar length_bitmap;\nvar buffer_cur;\nvar Acc_or_Han;\nvar cur_id;\nvar buffer;\nvar socket_buffer;\nvar UI_List_Buffer = new Array();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UIList: new Array(),\n      LayoutList: new Array()\n    };\n    this._Connect_to_Server = bufer => {\n      client = TcpSocket.createConnection({\n        host: \"192.168.0.2\",\n        port: 5673\n      }, () => {\n        console.log(\"connection established\");\n      });\n      client.on('data', data => this.checkData(data));\n    };\n    this.onPressInListener = e => {\n      var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n      //console.log(e.target._internalFiberInstanceHandleDEV.memoizedProps);\n      let tempArr = this.state.UIList;\n      let buffer = Buffer.alloc(1000);\n      let offset = 0;\n      buffer.writeUInt32BE(target_id, offset); //id\n      console.log(\"send target id : \", target_id);\n      offset += 4;\n      buffer.writeUInt32BE(1, offset); //typeEvent\n      offset += 4;\n      buffer.writeUInt32BE(0, offset); //down\n      offset += 4;\n      client.write(buffer);\n    };\n    this.onPressOutListener = e => {\n      var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n      let tempArr = this.state.UIList;\n      let buffer = Buffer.alloc(1000);\n      let offset = 0;\n      buffer.writeUInt32BE(target_id, offset); //id\n      console.log(\"send target id : \", target_id);\n      offset += 4;\n      buffer.writeUInt32BE(1, offset); //typeEvent\n      offset += 4;\n      buffer.writeUInt32BE(1, offset); //down\n      offset += 4;\n      client.write(buffer);\n    };\n    this.TextChangeListener = e => {\n      console.log(e.target.id);\n      const {\n        name,\n        type,\n        text\n      } = e.nativeEvent;\n      var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n      let tempArr = this.state.UIList;\n      tempArr.forEach(function (targetUI) {\n        if (targetUI.ID == target_id) {\n          console.log(target_id, text);\n          targetUI.Text = text;\n          let buffer = Buffer.alloc(1000);\n          let offset = 0;\n          buffer.writeUInt32BE(target_id, offset);\n          offset += 4;\n          buffer.writeUInt32BE(2, offset); //text event flag\n          offset += 4;\n\n          //let stringSize =  buffer.write(''+text+'',offset);\n          //offset += stringSize;\n          let buffer2 = Buffer.alloc(100);\n          let length = buffer2.write(text);\n          buffer.writeUInt32BE(length, offset);\n          offset += 4;\n          client.write(buffer);\n          client.write(buffer2);\n        }\n      });\n      this.setState({\n        UIList: tempArr\n      });\n    };\n    this._Connect_to_Server();\n    Acc_or_Han = 0;\n    buffer = null;\n    socket_buffer = null;\n  }\n  // accumulatedata(data) {\n  //     console.log(Date.now(),\" : \",\"this is accumulatedata\");\n  //     let tempArr = this.state.UIList;\n  //     tempArr.forEach(function (targetUI){\n  //         if(cur_id == targetUI.ID){\n  //             let cur_bitmap = data.toString('utf8',0,data.length);\n  //             //console.log(targetUI.Bitmap.length);\n  //             //console.log(\"cur bitmap = \",cur_bitmap);\n  //             var temp = targetUI.Bitmap.concat(cur_bitmap);\n  //             targetUI.Bitmap = temp;\n  //             //targetUI.Bitmap += cur_bitmap;\n  //             //console.log(targetUI.Bitmap.length);\n  //             buffer_cur += data.length;\n  //         }\n  //     });\n  //     // console.log(\"UIList \",this.state.UIList[0]);\n  //     this.setState({\n  //         UIList: tempArr\n  //     });\n  //     // console.log(\"UIList\", this.state.UIList[0]);\n  //     if(buffer_cur == length_bitmap)\n  //     {\n  //         Acc_or_Han = 0;\n  //     }\n  // }\n  checkData(data) {\n    console.log(Date.now(), \" : \", \"this is checkData\", data.length);\n    if (socket_buffer == null) {\n      //console.log(Date.now(),\" : \",\"checkData : socket_buffer empty\");\n      socket_buffer = Buffer.from(data);\n    } else {\n      //console.log(Date.now(),\" : \",\"checkData : socket_buffer not empty\");\n      //console.log(\"socket_buffer length : \",socket_buffer.length);\n      var temp_buffer = Buffer.concat([socket_buffer, data]);\n      //console.log(\"socket_buffer length : \",socket_buffer.length);\n      socket_buffer = Buffer.from(temp_buffer);\n      //console.log(\"socket_buffer length : \",socket_buffer.length);\n    }\n\n    if (socket_buffer.length < 4) {\n      // console.log(Date.now(),\" : \",\"checkData : data length below 4 byte\");\n      return;\n    } else {\n      var target_length = socket_buffer.readUInt32BE(0);\n      var rest_length = socket_buffer.length - 4;\n      console.log(Date.now(), \" : \", \"checkData : target_length : \", target_length);\n      // console.log(Date.now(),\" : \",\"checkData : rest_length : \", rest_length);\n      if (target_length == rest_length) {\n        // console.log(Date.now(),\" : \",\"checkData : target_length met\");\n        target_Data = socket_buffer.subarray(4, 4 + target_length);\n        this.handleData(target_Data);\n        socket_buffer = null;\n        return;\n      } else if (target_length > rest_length) {\n        // console.log(Date.now(),\" : \",\"checkData : target_length unmet\");\n\n        return;\n      } else\n        //target_length > rest_length\n        {\n          // console.log(Date.now(),\" : \",\"checkData : target_length exceed\");\n          var target_Data = socket_buffer.subarray(4, 4 + target_length);\n          var rest_Data = socket_buffer.subarray(4 + target_length, socket_buffer.length);\n          this.handleData(target_Data);\n          socket_buffer = Buffer.from(rest_Data);\n          this.checkData(Buffer.alloc(0));\n          return;\n        }\n    }\n  }\n  // parseData(data) {\n  //     console.log(\"this is parseData\");\n  //     console.log(\"data length : \",data.length);\n  //     // console.log(data);\n  //     if(data.length < 4)\n  //     {\n  //         buffer = new Buffer(data);\n  //     }\n  //     else\n  //     {\n  //         if(buffer != null)\n  //         {\n  //             console.log(\"parseData : append to buffer\");\n  //             var temp = Buffer.concat([buffer,data]);\n  //             buffer = null;\n  //             data = Buffer.from(temp);\n  //             console.log(data);\n  //         }\n\n  //         if(Acc_or_Han == 1)\n  //         {\n  //             console.log(\"parseData : accumulate data\");\n  //             this.accumulatedata(data);\n  //         }\n  //         else{\n  //             console.log(\"parseData : split and pass to handleData\");\n  //             var packet_length = data.readUInt32BE(0);\n  //             if(packet_length == data.length-4)\n  //             {\n  //                 var first_data = data.subarray(4,4+packet_length);\n  //                 this.handleData(first_data);\n  //             }\n  //             else if(packet_length < data.length-4) //data longer than expected\n  //             {\n  //                 console.log(\"packet length : \",packet_length);\n\n  //                 var first_data = data.subarray(4,4+packet_length);\n  //                 var second_data = data.subarray(8+packet_length,data.length);\n  //                 this.handleData(first_data);\n  //                 this.handleData(second_data);\n  //             }\n  //             else //data shorter than expected\n  //             {\n  //                 if(socket_buffer == null)\n  //                 {\n  //                     socket_buffer = Buffer.from(data);\n  //                 }\n  //                 else\n  //                 {\n  //                     var temp_buffer = Buffer.concat([socket_buffer,data]);\n  //                     socket_buffer = Buffer.from(temp_buffer);\n  //                 }\n  //             }\n  //         }\n  //     }\n\n  // }\n  handleData(data) {\n    console.log(Date.now(), \" : \", \"handle data invocated\");\n\n    // console.log(Date.now(),\" : \",\"data length : \",data.length);\n    //var this_data = data;\n    var offset = 0;\n\n    //console.log('message received',data);\n    console.log(Date.now(), \" : \", 'id : ', offset, data.readUInt32BE(offset));\n    var id = data.readUInt32BE(offset);\n    offset += 4;\n    var isUpdate = data.readUInt32BE(offset);\n    // console.log(Date.now(),\" : \",'isUpdate : ',isUpdate);\n    offset += 4;\n    if (isUpdate == 0)\n      //distribute mode\n      {\n        //read WidgetType\n        var layoutId = data.readUInt32BE(offset);\n        offset += 4;\n        var X = data.readFloatBE(offset);\n        offset += 4;\n        var Y = data.readFloatBE(offset);\n        offset += 4;\n\n        // console.log('String Length',offset,data.readUInt32BE(offset));\n        var stringSize = data.readUInt32BE(offset) + 2;\n        offset += 4;\n        // console.log('widgetType : ',offset,data.toString('utf8',offset,offset+stringSize));\n        var widgetType = data.toString('utf8', offset, offset + stringSize);\n        offset += stringSize;\n        // console.log(\"check : \",widgetType,widgetType.includes(\"EditText\"));\n        if (widgetType.includes(\"EditText\") == 1) {\n          console.log(\"handleData : creating EditText data\");\n          // console.log('String Length',offset,data.readUInt32BE(offset));\n          stringSize = data.readUInt32BE(offset) + 2;\n          offset += 4;\n          // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n          var temp_text = data.toString('utf8', offset, offset + stringSize);\n          var text = ('' + temp_text).slice(1);\n          offset += stringSize;\n          // console.log('TextSize : ',data.readFloatBE(offset));\n          var TextSize = data.readFloatBE(offset);\n          offset += 4;\n          var height = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          var width = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          let UIdata = {\n            \"WidgetType\": widgetType,\n            \"ID\": id,\n            \"Text\": text,\n            \"TextSize\": TextSize,\n            \"Color\": 'black',\n            \"Parent_ID\": layoutId,\n            \"X\": X,\n            \"Y\": Y,\n            \"Height\": height,\n            \"Width\": width\n          };\n          UI_List_Buffer.push(UIdata);\n          // let tempArr = this.state.UIList;\n          // tempArr.push(UIdata);\n          // console.log(\"UIdata : \",UIdata);\n\n          // UI_List_Buffer = tempArr;\n          // this.setState({\n          //     UIList: tempArr\n          // });\n        } else if (widgetType.includes(\"TextView\")) {\n          console.log(Date.now(), \" : \", \"handleData : creating TextView data\");\n          // console.log('String Length',offset,data.readUInt32BE(offset));\n          stringSize = data.readUInt32BE(offset) + 2;\n          offset += 4;\n          // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n          var temp_text = data.toString('utf8', offset, offset + stringSize);\n          var text = ('' + temp_text).slice(1);\n          offset += stringSize;\n          // console.log('TextSize : ',data.readFloatBE(offset));\n          var TextSize = data.readFloatBE(offset);\n          offset += 4;\n          var height = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          var width = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          var hasImage = data.readUInt32BE(offset);\n          offset += 4;\n          if (hasImage == 1) {\n            var length = data.readUInt32BE(offset) + 2;\n            length_bitmap = length;\n            // console.log(length);\n            offset += 4;\n            let temp = data.toString('utf8', offset, data.length);\n            var image = ('' + temp).slice(1);\n          } else {\n            var image = null;\n          }\n          let UIdata = {\n            \"WidgetType\": widgetType,\n            \"ID\": id,\n            \"Text\": text,\n            \"TextSize\": TextSize,\n            \"Parent_ID\": layoutId,\n            \"X\": X,\n            \"Y\": Y,\n            \"Height\": height,\n            \"Width\": width,\n            \"Image\": image\n          };\n          UI_List_Buffer.push(UIdata);\n          // let tempArr = this.state.UIList;\n          // tempArr.push(UIdata);\n          // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n\n          // UI_List_Buffer = tempArr\n          // this.setState({\n          //     UIList: tempArr\n          // });\n        } else if (widgetType.includes(\"ImageView\")) {\n          console.log(Date.now(), \" : \", \"handleData : creating ImageView data\");\n          //buffer 합치기\n          //bitmap data 받아오기 및 저장\n\n          // console.log('Buffer Length : ',data.length);\n          // const bufferbuffer = data.concat(bitmap);\n\n          var height = data.readUInt32BE(offset) * 0.75;\n          // console.log(\"Height : \",height);\n          offset += 4;\n          var width = data.readUInt32BE(offset) * 0.75;\n          offset += 4;\n          // console.log(\"Width : \",width);\n\n          var length = data.readUInt32BE(offset) + 2;\n          length_bitmap = length;\n          // console.log(length);\n          offset += 4;\n          var rest = data.length - offset;\n          buffer_cur = 0;\n          let temp = data.toString('utf8', offset, data.length);\n          let current_bitmap = ('' + temp).slice(1);\n          let UIdata = {\n            \"WidgetType\": widgetType,\n            \"ID\": id,\n            \"Length\": length,\n            \"Image\": current_bitmap,\n            \"Height\": height,\n            \"Width\": width,\n            \"Parent_ID\": layoutId,\n            \"X\": X,\n            \"Y\": Y\n          };\n          buffer_cur += rest;\n          //console.log('client , ',client);\n          cur_id = id;\n          //console.log(\"UIList \",this.state.UIList[0]);\n          UI_List_Buffer.push(UIdata);\n          // let tempArr = this.state.UIList;\n          // tempArr.push(UIdata);\n          // // console.log(\"UIdata : \",UIdata);\n          // //console.log(\"UIList \",this.state.UIList[0]);\n          // this.setState({\n          //     UIList: tempArr\n          // });\n          //Acc_or_Han = 1;\n        } else if (widgetType.includes(\"Button\")) {\n          console.log(Date.now(), \" : \", \"handleData : creating Button data\");\n          // console.log('String Length',offset,data.readUInt32BE(offset));\n          stringSize = data.readUInt32BE(offset) + 2;\n          offset += 4;\n          // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n          var temp_text = data.toString('utf8', offset, offset + stringSize);\n          var text = ('' + temp_text).slice(1);\n          offset += stringSize;\n          var height = data.readUInt32BE(offset) * 0.728;\n          // console.log(\"Height : \",height);\n          offset += 4;\n          var width = data.readUInt32BE(offset) * 0.728;\n          // console.log(\"Width : \",width);\n          offset += 4;\n          let UIdata = {\n            \"WidgetType\": widgetType,\n            \"ID\": id,\n            \"Text\": text,\n            \"Height\": height,\n            \"Parent_ID\": layoutId,\n            \"Width\": width,\n            \"X\": X,\n            \"Y\": Y\n          };\n          UI_List_Buffer.push(UIdata);\n          // let tempArr = this.state.UIList;\n          // tempArr.push(UIdata);\n          // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n          // this.setState({\n          //     UIList: tempArr\n          // });\n        } else if (widgetType.includes(\"OtherView\")) {\n          console.log(Date.now(), \" : \", \"handleData : creating OtherView data\");\n          var height = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          var width = data.readUInt32BE(offset) * 0.728;\n          offset += 4;\n          let UIdata = {\n            \"WidgetType\": widgetType,\n            \"ID\": id,\n            \"Text\": 'others',\n            \"Height\": height,\n            \"Width\": width,\n            \"Parent_ID\": layoutId,\n            \"X\": X,\n            \"Y\": Y\n          };\n          UI_List_Buffer.push(UIdata);\n          // let tempArr = this.state.UIList;\n          // tempArr.push(UIdata);\n          // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n          // this.setState({\n          //     UIList: tempArr\n          // });\n        }\n      } else if (isUpdate == 1) {\n      //update mode\n      let tempArr = this.state.UIList;\n      tempArr.forEach(function (targetUI) {\n        if (id == targetUI.ID) {\n          let stringSize = data.readUInt32BE(offset) + 2;\n          // console.log(Date.now(),\" : \",\"stringSize: \",offset, stringSize);\n          offset += 4;\n          let method = data.toString('utf8', offset, offset + stringSize);\n          offset += stringSize;\n          let typeFlag = data.readUInt32BE(offset);\n          offset += 4;\n          //get parameters\n          console.log(\"typeFlag : \" + typeFlag);\n          if (typeFlag == 1) {\n            var param = data.readFloatBE(offset);\n            offset += 4;\n          }\n          if (typeFlag == 2) {\n            var param = data.readUInt32BE(offset);\n            offset += 4;\n          }\n          if (typeFlag == 3) {\n            stringSize = data.readUInt32BE(offset) + 2;\n            offset += 4;\n            let param_temp = data.toString('utf8', offset, offset + stringSize);\n            var param = ('' + param_temp).slice(1);\n            offset += stringSize;\n            console.log(\"string : \", param);\n          }\n\n          //UI update\n          if (method.includes(\"setTextColor\")) {\n            // console.log(Date.now(),\" : \",\"color : \",param);\n            let bb = param & 0x000000FF;\n            let gg = param & 0x0000FF00;\n            let rr = param & 0x00FF0000;\n            let aa = param & 0xFF000000;\n            rr = rr << 8;\n            bb = bb << 8;\n            gg = gg << 8;\n            aa = aa >>> 24;\n            // console.log(Date.now(),\" : \",rr,bb,gg,aa)\n            var newColor = rr | bb | gg | aa; //android native in aarrggbb react-native in rrggbbaa\n            targetUI.Color = newColor >>> 0;\n            // if(param == 4278190335)\n            // {\n            //     targetUI.Color= newColor>>>0;\n            // }\n            // else if(param == 4294901760){\n            //     targetUI.Color = newColor>>>0; //shift operator to make it unsigned\n            // }\n          }\n          // else if(method.includes(\"setTextSize\")){\n          //     targetUI.TextSize = param;\n          // }\n          else if (method.includes(\"setImage\")) {\n            targetUI.Image = param;\n          } else if (method.includes(\"setText\")) {\n            targetUI.Text = param;\n          }\n        }\n        console.log(targetUI);\n      });\n      // console.log(Date.now(),\" : \",\"UIList \",this.state.UIList[0]);\n      this.setState({\n        UIList: tempArr\n      });\n      // console.log(Date.now(),\" : \",\"UIList\", this.state.UIList[0]);\n    } else if (isUpdate == 2) {\n      //distribute layout\n\n      var layout_type = data.readUInt32BE(offset);\n      offset += 4;\n      if (layout_type == 0) {\n        console.log(Date.now(), \" : \", \"handleData : creating LinearLayout data\");\n        //Linear layout\n        var orientation = data.readUInt32BE(offset);\n        offset += 4;\n        var width = data.readUInt32BE(offset) * 0.728;\n        offset += 4;\n        var height = data.readUInt32BE(offset) * 0.728;\n        var layout_Data = {\n          \"ID\": id,\n          \"Layout_Type\": layout_type,\n          \"Orientation\": orientation,\n          \"Height\": height,\n          \"Width\": width\n        };\n      } else if (layout_type == 1) {\n        //other layout\n        console.log(Date.now(), \" : \", \"handleData : creating OtherLayout data\");\n        var width = data.readUInt32BE(offset) * 0.728;\n        offset += 4;\n        var height = data.readUInt32BE(offset) * 0.728;\n        offset += 4;\n        var X = data.readFloatBE(offset);\n        offset += 4;\n        var Y = data.readFloatBE(offset);\n        offset += 4;\n        var layout_Data = {\n          \"ID\": id,\n          \"Layout_Type\": layout_type,\n          \"Height\": height,\n          \"Width\": width,\n          \"X\": X,\n          \"Y\": Y\n        };\n      }\n      tempArr = this.state.LayoutList;\n      tempArr.push(layout_Data);\n      this.setState({\n        LayoutList: tempArr\n      });\n      console.log(Date.now(), \" : \", layout_Data);\n    } else if (isUpdate == 3) {\n      console.log(Date.now(), \" : \", \"handleData : endOf Distribution\");\n      let tempArr = this.state.UIList;\n      UI_List_Buffer.forEach(function (item) {\n        tempArr.push(item);\n      });\n      UI_List_Buffer = new Array();\n      this.setState({\n        UIList: tempArr\n      });\n    }\n  }\n  render() {\n    const utf8 = require('utf8');\n    let Layout = this.state.LayoutList.map((item, index) => {\n      if (item.Layout_Type == 0) {\n        //LinearLayout\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(LinearLayout, {\n            UIList: this.state.UIList,\n            setLinearLayout: item,\n            TextChangeListener: this.TextChangeListener,\n            onPressInListener: this.onPressInListener,\n            onPressOutListener: this.onPressOutListener\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this)\n        }, item.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this);\n      } else if (item.Layout_Type == 1) {\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(OtherLayout, {\n            UIList: this.state.UIList,\n            setOtherLayout: item,\n            TextChangeListener: this.TextChangeListener,\n            onPressInListener: this.onPressInListener,\n            onPressOutListener: this.onPressOutListener\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this)\n        }, item.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this);\n      }\n    });\n\n    // let Arr = this.state.UIList.map((item,index)=>{\n    //     console.log(item.WidgetType.includes(\"EditText\"));\n    //     if(item.WidgetType.includes(\"EditText\")){\n    //         console.log(\"App : pass to EditText\");\n    //         return (\n    //             <View key={item.ID} style={{alignItems:'flex-start', backgroundColor: 'blue', borderBottonWidth : StyleSheet.hairlineWidth}}>\n    //                 <TextInput style={{fontSize: item.TextSize,  textAlign: 'left', padding: 2, color: item.Color}} \n    //                     value={item.Text}\n    //                     id={item.ID}\n    //                     onChange={this.TextChangeListener}>\n    //                 </TextInput>\n    //             </View>\n    //         );\n    //     }\n    //     if(item.WidgetType.includes(\"TextView\")){\n    //         console.log(\"App : pass to TextView\");\n    //         return (\n    //             <View key={item.ID} style={{alignItems:'flex-start'}}>\n    //                 <Text  style={{fontSize: item.TextSize, textAlign: 'left', fontWeight: '500', width: 350}}>\n    //                     {item.Text}\n    //                 </Text>\n    //             </View>\n    //         );\n    //     }\n    //     if(item.WidgetType.includes(\"Button\")){\n    //         console.log(\"App : pass to Button\");\n    //         return(\n    //             <View key={item.ID} style={{height: item.Height, width: item.Width, alignContent: 'center', alignItems: \"center\",backgroundColor: 'black',borderBottomWidth: StyleSheet.hairlineWidth}}>\n    //                 <Pressable style={{height: item.Height, width: item.Width, alignContent: 'center',   justifyContent: 'center', alignItems: \"center\", backgroundColor: 'skyblue'}}\n    //                     id={item.ID}\n    //                     onPressIn={this.onPressInListener}\n    //                     onPressOut={this.onPressOutListener}>\n    //                     <Text \n    //                         style={{fontSize: 30, textAlign: 'center', alignContent: 'center', color: 'black'}}\n    //                         id={item.ID}> \n    //                             {item.Text} \n    //                     </Text>\n\n    //                 </Pressable>\n    //             </View>\n    //         )\n    //     }\n\n    //     return(\n    //         <Text> hi </Text>\n    //     );\n\n    // });\n    return /*#__PURE__*/_jsxDEV(SafeAreaView, {\n      Style: styles.container,\n      children: Layout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\"\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","Component","StyleSheet","View","Text","TextInput","Button","ScrollView","SafeAreaView","Pressable","TcpSocket","utf8","Buffer","LinearLayout","OtherLayout","jsxDEV","_jsxDEV","client","length_bitmap","buffer_cur","Acc_or_Han","cur_id","buffer","socket_buffer","UI_List_Buffer","Array","App","constructor","props","state","UIList","LayoutList","_Connect_to_Server","bufer","createConnection","host","port","console","log","on","data","checkData","onPressInListener","e","target_id","target","_internalFiberInstanceHandleDEV","memoizedProps","id","tempArr","alloc","offset","writeUInt32BE","write","onPressOutListener","TextChangeListener","name","type","text","nativeEvent","forEach","targetUI","ID","buffer2","length","setState","Date","now","from","temp_buffer","concat","target_length","readUInt32BE","rest_length","target_Data","subarray","handleData","rest_Data","isUpdate","layoutId","X","readFloatBE","Y","stringSize","widgetType","toString","includes","temp_text","slice","TextSize","height","width","UIdata","push","hasImage","temp","image","rest","current_bitmap","method","typeFlag","param","param_temp","bb","gg","rr","aa","newColor","Color","Image","layout_type","orientation","layout_Data","item","render","require","Layout","map","index","Layout_Type","children","setLinearLayout","fileName","_jsxFileName","lineNumber","columnNumber","setOtherLayout","Style","styles","container","create","alignItems"],"sources":["/home/ywha/WEB_FLUID/react_proxy/src/App.js"],"sourcesContent":["import React, {useState, Component} from 'react';\nimport {StyleSheet, View, Text,TextInput, Button, ScrollView, SafeAreaView, Pressable} from 'react-native';\nimport TcpSocket from \"react-native-tcp-socket\";\nimport utf8 from 'utf8';\nimport {Buffer} from 'buffer';\nimport LinearLayout from \"./components/LinearLayout\"\nimport OtherLayout from \"./components/OtherLayout\"\n\n\nvar client;\nvar length_bitmap;\nvar buffer_cur;\nvar Acc_or_Han;\nvar cur_id;\nvar buffer;\nvar socket_buffer;\nvar UI_List_Buffer = new Array();\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this._Connect_to_Server();\n        Acc_or_Han = 0;\n        buffer = null;\n        socket_buffer = null;\n    };\n    state = {\n        UIList: new Array(),\n        LayoutList : new Array()\n    };\n    _Connect_to_Server = (bufer) => {\n        client = TcpSocket.createConnection({host: \"192.168.0.2\", port: 5673}, ()=>{\n            console.log(\"connection established\");\n        });\n        client.on('data', (data) => this.checkData(data));\n        \n    };\n\n    // accumulatedata(data) {\n    //     console.log(Date.now(),\" : \",\"this is accumulatedata\");\n    //     let tempArr = this.state.UIList;\n    //     tempArr.forEach(function (targetUI){\n    //         if(cur_id == targetUI.ID){\n    //             let cur_bitmap = data.toString('utf8',0,data.length);\n    //             //console.log(targetUI.Bitmap.length);\n    //             //console.log(\"cur bitmap = \",cur_bitmap);\n    //             var temp = targetUI.Bitmap.concat(cur_bitmap);\n    //             targetUI.Bitmap = temp;\n    //             //targetUI.Bitmap += cur_bitmap;\n    //             //console.log(targetUI.Bitmap.length);\n    //             buffer_cur += data.length;\n    //         }\n    //     });\n    //     // console.log(\"UIList \",this.state.UIList[0]);\n    //     this.setState({\n    //         UIList: tempArr\n    //     });\n    //     // console.log(\"UIList\", this.state.UIList[0]);\n    //     if(buffer_cur == length_bitmap)\n    //     {\n    //         Acc_or_Han = 0;\n    //     }\n    // }\n    checkData(data) {\n        console.log(Date.now(),\" : \",\"this is checkData\",data.length);\n\n        if(socket_buffer == null)\n        {\n            //console.log(Date.now(),\" : \",\"checkData : socket_buffer empty\");\n            socket_buffer = Buffer.from(data);\n        }\n        else\n        {\n            //console.log(Date.now(),\" : \",\"checkData : socket_buffer not empty\");\n            //console.log(\"socket_buffer length : \",socket_buffer.length);\n            var temp_buffer = Buffer.concat([socket_buffer,data]);\n            //console.log(\"socket_buffer length : \",socket_buffer.length);\n            socket_buffer = Buffer.from(temp_buffer);\n            //console.log(\"socket_buffer length : \",socket_buffer.length);\n        }\n\n        if(socket_buffer.length < 4)\n        {\n            // console.log(Date.now(),\" : \",\"checkData : data length below 4 byte\");\n            return;\n        }\n        else\n        {\n            var target_length = socket_buffer.readUInt32BE(0);\n            var rest_length = socket_buffer.length - 4;\n            console.log(Date.now(),\" : \",\"checkData : target_length : \", target_length);\n            // console.log(Date.now(),\" : \",\"checkData : rest_length : \", rest_length);\n            if(target_length == rest_length)\n            {\n                // console.log(Date.now(),\" : \",\"checkData : target_length met\");\n                target_Data = socket_buffer.subarray(4,4+target_length);\n                this.handleData(target_Data);\n                socket_buffer = null;\n                return;\n            }\n            else if(target_length > rest_length)\n            {\n                // console.log(Date.now(),\" : \",\"checkData : target_length unmet\");\n\n                return;\n            }\n            else //target_length > rest_length\n            {\n                // console.log(Date.now(),\" : \",\"checkData : target_length exceed\");\n                var target_Data = socket_buffer.subarray(4,4+target_length);\n                var rest_Data = socket_buffer.subarray(4+target_length,socket_buffer.length);\n                this.handleData(target_Data);\n                socket_buffer = Buffer.from(rest_Data);\n                this.checkData(Buffer.alloc(0));\n                return;\n            }\n        }\n    }\n    // parseData(data) {\n    //     console.log(\"this is parseData\");\n    //     console.log(\"data length : \",data.length);\n    //     // console.log(data);\n    //     if(data.length < 4)\n    //     {\n    //         buffer = new Buffer(data);\n    //     }\n    //     else\n    //     {\n    //         if(buffer != null)\n    //         {\n    //             console.log(\"parseData : append to buffer\");\n    //             var temp = Buffer.concat([buffer,data]);\n    //             buffer = null;\n    //             data = Buffer.from(temp);\n    //             console.log(data);\n    //         }\n           \n    //         if(Acc_or_Han == 1)\n    //         {\n    //             console.log(\"parseData : accumulate data\");\n    //             this.accumulatedata(data);\n    //         }\n    //         else{\n    //             console.log(\"parseData : split and pass to handleData\");\n    //             var packet_length = data.readUInt32BE(0);\n    //             if(packet_length == data.length-4)\n    //             {\n    //                 var first_data = data.subarray(4,4+packet_length);\n    //                 this.handleData(first_data);\n    //             }\n    //             else if(packet_length < data.length-4) //data longer than expected\n    //             {\n    //                 console.log(\"packet length : \",packet_length);\n                \n    //                 var first_data = data.subarray(4,4+packet_length);\n    //                 var second_data = data.subarray(8+packet_length,data.length);\n    //                 this.handleData(first_data);\n    //                 this.handleData(second_data);\n    //             }\n    //             else //data shorter than expected\n    //             {\n    //                 if(socket_buffer == null)\n    //                 {\n    //                     socket_buffer = Buffer.from(data);\n    //                 }\n    //                 else\n    //                 {\n    //                     var temp_buffer = Buffer.concat([socket_buffer,data]);\n    //                     socket_buffer = Buffer.from(temp_buffer);\n    //                 }\n    //             }\n    //         }\n    //     }\n        \n    // }\n    handleData(data) {\n        console.log(Date.now(),\" : \",\"handle data invocated\");\n        \n        // console.log(Date.now(),\" : \",\"data length : \",data.length);\n        //var this_data = data;\n        var offset = 0;\n    \n        //console.log('message received',data);\n        console.log(Date.now(),\" : \",'id : ',offset, data.readUInt32BE(offset));\n        var id = data.readUInt32BE(offset);\n        offset += 4;\n        var isUpdate = data.readUInt32BE(offset);\n        // console.log(Date.now(),\" : \",'isUpdate : ',isUpdate);\n        offset +=4;\n        if(isUpdate == 0) //distribute mode\n        {\n            //read WidgetType\n            var layoutId = data.readUInt32BE(offset);\n            offset+=4;\n\n            var X = data.readFloatBE(offset);\n            offset+=4;\n            var Y = data.readFloatBE(offset);\n            offset+=4;\n\n            // console.log('String Length',offset,data.readUInt32BE(offset));\n            var stringSize = data.readUInt32BE(offset)+2;\n            offset += 4;\n            // console.log('widgetType : ',offset,data.toString('utf8',offset,offset+stringSize));\n            var widgetType = data.toString('utf8',offset,offset+stringSize);\n            offset += stringSize;\n            // console.log(\"check : \",widgetType,widgetType.includes(\"EditText\"));\n            if(widgetType.includes(\"EditText\")==1)\n            {\n                console.log(\"handleData : creating EditText data\");\n                // console.log('String Length',offset,data.readUInt32BE(offset));\n                stringSize = data.readUInt32BE(offset)+2;\n                offset += 4;\n                // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n                var temp_text = data.toString('utf8',offset,offset+stringSize);\n                var text = (''+temp_text).slice(1);\n                offset += stringSize;\n                // console.log('TextSize : ',data.readFloatBE(offset));\n                var TextSize = data.readFloatBE(offset);\n                offset += 4;\n                var height = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                var width = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                let UIdata = {\n                    \"WidgetType\": widgetType,\n                    \"ID\": id,\n                    \"Text\": text,\n                    \"TextSize\": TextSize,\n                    \"Color\": 'black',\n                    \"Parent_ID\": layoutId,\n                    \"X\": X,\n                    \"Y\": Y,\n                    \"Height\": height,\n                    \"Width\": width,\n                };\n\n                UI_List_Buffer.push(UIdata);\n                // let tempArr = this.state.UIList;\n                // tempArr.push(UIdata);\n                // console.log(\"UIdata : \",UIdata);\n\n                // UI_List_Buffer = tempArr;\n                // this.setState({\n                //     UIList: tempArr\n                // });\n            }\n            else if (widgetType.includes(\"TextView\"))\n            {\n                console.log(Date.now(),\" : \",\"handleData : creating TextView data\");\n                // console.log('String Length',offset,data.readUInt32BE(offset));\n                stringSize = data.readUInt32BE(offset)+2;\n                offset += 4;\n                // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n                var temp_text = data.toString('utf8',offset,offset+stringSize);\n                var text = (''+temp_text).slice(1);\n                offset += stringSize;\n                // console.log('TextSize : ',data.readFloatBE(offset));\n                var TextSize = data.readFloatBE(offset);\n                offset += 4\n                var height = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                var width = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                var hasImage = data.readUInt32BE(offset);\n                offset +=4;\n                if(hasImage == 1)\n                {\n                    var length = data.readUInt32BE(offset) + 2;\n                    length_bitmap = length;\n                    // console.log(length);\n                    offset += 4;\n                    let temp = data.toString('utf8',offset,data.length);\n                    var image = (''+temp).slice(1);\n                }\n                else\n                {\n                    var image = null;\n                }\n                let UIdata = {\n                    \"WidgetType\": widgetType,\n                    \"ID\": id,\n                    \"Text\": text,\n                    \"TextSize\": TextSize,\n                    \"Parent_ID\": layoutId,\n                    \"X\": X,\n                    \"Y\": Y,\n                    \"Height\": height,\n                    \"Width\": width,\n                    \"Image\": image,\n                };\n\n                UI_List_Buffer.push(UIdata);\n                // let tempArr = this.state.UIList;\n                // tempArr.push(UIdata);\n                // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n                \n                // UI_List_Buffer = tempArr\n                // this.setState({\n                //     UIList: tempArr\n                // });\n            }\n            else if(widgetType.includes(\"ImageView\"))\n            {\n\n                console.log(Date.now(),\" : \",\"handleData : creating ImageView data\");\n                //buffer 합치기\n                //bitmap data 받아오기 및 저장\n                \n                // console.log('Buffer Length : ',data.length);\n                // const bufferbuffer = data.concat(bitmap);\n                \n                var height = data.readUInt32BE(offset)* 0.75;\n                // console.log(\"Height : \",height);\n                offset +=4;\n                var width = data.readUInt32BE(offset)* 0.75;\n                offset +=4;\n                // console.log(\"Width : \",width);\n\n                var length = data.readUInt32BE(offset) + 2;\n                length_bitmap = length;\n                // console.log(length);\n                offset += 4;\n                \n                \n                \n                var rest = data.length - offset;\n                \n                buffer_cur = 0;\n                let temp = data.toString('utf8',offset,data.length);\n                let current_bitmap = (''+temp).slice(1);\n                let UIdata = {\n                    \"WidgetType\": widgetType,\n                    \"ID\": id,\n                    \"Length\": length,\n                    \"Image\": current_bitmap,\n                    \"Height\": height,\n                    \"Width\": width,\n                    \"Parent_ID\": layoutId,\n                    \"X\": X,\n                    \"Y\": Y,\n                };\n                buffer_cur += rest;\n                //console.log('client , ',client);\n                cur_id = id;\n                //console.log(\"UIList \",this.state.UIList[0]);\n                UI_List_Buffer.push(UIdata);\n                // let tempArr = this.state.UIList;\n                // tempArr.push(UIdata);\n                // // console.log(\"UIdata : \",UIdata);\n                // //console.log(\"UIList \",this.state.UIList[0]);\n                // this.setState({\n                //     UIList: tempArr\n                // });\n                //Acc_or_Han = 1;\n            }\n            else if(widgetType.includes(\"Button\"))\n            {\n                console.log(Date.now(),\" : \",\"handleData : creating Button data\");\n                // console.log('String Length',offset,data.readUInt32BE(offset));\n                stringSize = data.readUInt32BE(offset)+2;\n                offset += 4;\n                // console.log('Text : ',data.toString('utf8',offset,offset+stringSize));\n                var temp_text = data.toString('utf8',offset,offset+stringSize);\n                var text = (''+temp_text).slice(1);\n                offset += stringSize;\n                var height = data.readUInt32BE(offset)* 0.728;\n                // console.log(\"Height : \",height);\n                offset +=4;\n                var width = data.readUInt32BE(offset)* 0.728;\n                // console.log(\"Width : \",width);\n                offset += 4;\n                let UIdata = {\n                    \"WidgetType\": widgetType,\n                    \"ID\": id,\n                    \"Text\": text,\n                    \"Height\": height,\n                    \"Parent_ID\": layoutId,\n                    \"Width\": width,\n                    \"X\": X,\n                    \"Y\": Y,\n                };\n                UI_List_Buffer.push(UIdata);\n                // let tempArr = this.state.UIList;\n                // tempArr.push(UIdata);\n                // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n                // this.setState({\n                //     UIList: tempArr\n                // });\n            }\n            else if(widgetType.includes(\"OtherView\"))\n            {\n                console.log(Date.now(),\" : \",\"handleData : creating OtherView data\");\n                var height = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                var width = data.readUInt32BE(offset)*0.728;\n                offset +=4;\n                let UIdata = {\n                    \"WidgetType\": widgetType,\n                    \"ID\": id,\n                    \"Text\": 'others',\n                    \"Height\": height,\n                    \"Width\": width,\n                    \"Parent_ID\":layoutId,\n                    \"X\": X,\n                    \"Y\": Y,\n                };\n                UI_List_Buffer.push(UIdata);\n                // let tempArr = this.state.UIList;\n                // tempArr.push(UIdata);\n                // // console.log(Date.now(),\" : \",\"UIdata : \",UIdata);\n                // this.setState({\n                //     UIList: tempArr\n                // });\n            }\n            \n            \n        }\n\n        else if(isUpdate == 1){//update mode\n            let tempArr = this.state.UIList;\n            tempArr.forEach(function (targetUI){\n                if(id == targetUI.ID){\n                    let stringSize = data.readUInt32BE(offset)+2;\n                    // console.log(Date.now(),\" : \",\"stringSize: \",offset, stringSize);\n                    offset += 4;\n                    let method = data.toString('utf8',offset,offset+stringSize);\n                    offset +=stringSize;\n                    let typeFlag = data.readUInt32BE(offset);\n                    offset += 4;\n                    //get parameters\n                    console.log(\"typeFlag : \" + typeFlag);\n                    if(typeFlag == 1){\n                        var param = data.readFloatBE(offset);\n                        offset+=4;\n                    }\n                    if(typeFlag == 2){\n                        var param = data.readUInt32BE(offset);\n                        offset +=4;\n                    }\n                    if(typeFlag == 3){\n                        stringSize = data.readUInt32BE(offset)+2;\n                        offset +=4;\n                        let param_temp = data.toString('utf8',offset,offset+stringSize);\n                        var param = (''+param_temp).slice(1);\n                        offset +=stringSize;\n                        console.log(\"string : \", param);\n                    }\n\n                    //UI update\n                    if(method.includes(\"setTextColor\")){\n                        // console.log(Date.now(),\" : \",\"color : \",param);\n                        let bb = param & 0x000000FF;\n                        let gg = param & 0x0000FF00;\n                        let rr = param & 0x00FF0000;\n                        let aa = param & 0xFF000000;\n                        rr = rr<<8;\n                        bb = bb<<8;\n                        gg = gg<<8;\n                        aa = aa>>>24;\n                        // console.log(Date.now(),\" : \",rr,bb,gg,aa)\n                        var newColor = rr|bb|gg|aa; //android native in aarrggbb react-native in rrggbbaa\n                        targetUI.Color = newColor>>>0;\n                        // if(param == 4278190335)\n                        // {\n                        //     targetUI.Color= newColor>>>0;\n                        // }\n                        // else if(param == 4294901760){\n                        //     targetUI.Color = newColor>>>0; //shift operator to make it unsigned\n                        // }\n                    }\n                    // else if(method.includes(\"setTextSize\")){\n                    //     targetUI.TextSize = param;\n                    // }\n                    else if(method.includes(\"setImage\")){\n                        targetUI.Image = param;\n                    }\n                    else if(method.includes(\"setText\")){\n                        targetUI.Text = param;\n                    }\n                }\n                console.log(targetUI);\n            });\n            // console.log(Date.now(),\" : \",\"UIList \",this.state.UIList[0]);\n            this.setState({\n                UIList: tempArr\n            });\n            // console.log(Date.now(),\" : \",\"UIList\", this.state.UIList[0]);\n        }\n        else if(isUpdate ==2) {//distribute layout\n            \n            var layout_type = data.readUInt32BE(offset);\n            offset+=4;\n            if(layout_type == 0){\n                console.log(Date.now(),\" : \",\"handleData : creating LinearLayout data\");\n                //Linear layout\n                var orientation = data.readUInt32BE(offset);\n                offset+=4;\n                var width = data.readUInt32BE(offset)* 0.728;\n                offset +=4;\n                var height = data.readUInt32BE(offset)* 0.728;\n                var layout_Data = {\n                    \"ID\": id,\n                    \"Layout_Type\": layout_type,\n                    \"Orientation\": orientation,\n                    \"Height\": height,\n                    \"Width\": width,\n                }\n\n            }\n            else if(layout_type == 1) { //other layout\n                console.log(Date.now(),\" : \",\"handleData : creating OtherLayout data\");\n                var width = data.readUInt32BE(offset)* 0.728;\n                offset +=4;\n                var height = data.readUInt32BE(offset)* 0.728;\n                offset +=4;\n                var X = data.readFloatBE(offset);\n                offset +=4;\n                var Y = data.readFloatBE(offset);\n                offset +=4;\n                var layout_Data = {\n                    \"ID\": id,\n                    \"Layout_Type\": layout_type,\n                    \"Height\": height,\n                    \"Width\": width,\n                    \"X\": X,\n                    \"Y\": Y,\n                }\n            }\n            tempArr = this.state.LayoutList;\n            tempArr.push(layout_Data);\n            this.setState({\n                LayoutList: tempArr\n            });\n            console.log(Date.now(),\" : \",layout_Data);\n            \n        }\n        else if(isUpdate == 3)\n        {\n            console.log(Date.now(),\" : \", \"handleData : endOf Distribution\");\n            let tempArr = this.state.UIList;\n            UI_List_Buffer.forEach( function(item) {\n                tempArr.push(item);\n            } )\n            UI_List_Buffer = new Array();\n            this.setState({\n                    UIList: tempArr\n                });\n        }\n    \n        \n        \n    };\n    onPressInListener = (e) => {\n        var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n        //console.log(e.target._internalFiberInstanceHandleDEV.memoizedProps);\n        let tempArr = this.state.UIList;\n\n            let buffer = Buffer.alloc(1000);\n            let offset = 0;\n            buffer.writeUInt32BE(target_id,offset); //id\n            console.log(\"send target id : \",target_id);\n            offset +=4;\n            buffer.writeUInt32BE(1,offset); //typeEvent\n            offset +=4;\n            buffer.writeUInt32BE(0,offset); //down\n            offset +=4;\n            client.write(buffer); \n\n    }\n    onPressOutListener = (e) => {\n        var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n        let tempArr = this.state.UIList;\n        \n            let buffer = Buffer.alloc(1000);\n            let offset = 0;\n            buffer.writeUInt32BE(target_id,offset); //id\n            console.log(\"send target id : \",target_id);\n            offset +=4;\n            buffer.writeUInt32BE(1,offset); //typeEvent\n            offset +=4;\n            buffer.writeUInt32BE(1,offset); //down\n            offset +=4;\n            client.write(buffer);\n\n    }\n    TextChangeListener = (e) =>{\n        console.log(e.target.id);\n        const {name,type,text} = e.nativeEvent;\n        var target_id = e.target._internalFiberInstanceHandleDEV.memoizedProps.id;\n        let tempArr = this.state.UIList;\n        tempArr.forEach(function (targetUI) {\n            if(targetUI.ID == target_id){\n                console.log(target_id, text);\n                targetUI.Text = text;\n                let buffer = Buffer.alloc(1000);\n                let offset = 0;\n                buffer.writeUInt32BE(target_id,offset);\n                offset+=4;\n                buffer.writeUInt32BE(2,offset); //text event flag\n                offset+=4;\n\n                //let stringSize =  buffer.write(''+text+'',offset);\n                //offset += stringSize;\n                let buffer2 = Buffer.alloc(100);\n                let length = buffer2.write(text);\n                buffer.writeUInt32BE(length,offset);\n                offset+=4;\n                client.write(buffer);\n                client.write(buffer2);\n            }\n        });\n        this.setState({\n            UIList: tempArr\n        });\n    };\n    render() {\n        const utf8 = require('utf8');\n        let Layout = this.state.LayoutList.map((item,index)=> {\n            if(item.Layout_Type == 0) {\n                //LinearLayout\n                return (\n                    <View key={item.ID}>\n                        <LinearLayout \n                            UIList={this.state.UIList} \n                            setLinearLayout={item}\n                            TextChangeListener={this.TextChangeListener}\n                            onPressInListener={this.onPressInListener}\n                            onPressOutListener={this.onPressOutListener}/>\n                    </View>\n                )\n\n            }\n            else if(item.Layout_Type == 1) {\n                return (\n                    <View key={item.ID}>\n                        <OtherLayout\n                            UIList={this.state.UIList}\n                            setOtherLayout={item}\n                            TextChangeListener={this.TextChangeListener}\n                            onPressInListener={this.onPressInListener}\n                            onPressOutListener={this.onPressOutListener}/>\n                    </View>\n                )\n            }\n        });\n\n        // let Arr = this.state.UIList.map((item,index)=>{\n        //     console.log(item.WidgetType.includes(\"EditText\"));\n        //     if(item.WidgetType.includes(\"EditText\")){\n        //         console.log(\"App : pass to EditText\");\n        //         return (\n        //             <View key={item.ID} style={{alignItems:'flex-start', backgroundColor: 'blue', borderBottonWidth : StyleSheet.hairlineWidth}}>\n        //                 <TextInput style={{fontSize: item.TextSize,  textAlign: 'left', padding: 2, color: item.Color}} \n        //                     value={item.Text}\n        //                     id={item.ID}\n        //                     onChange={this.TextChangeListener}>\n        //                 </TextInput>\n        //             </View>\n        //         );\n        //     }\n        //     if(item.WidgetType.includes(\"TextView\")){\n        //         console.log(\"App : pass to TextView\");\n        //         return (\n        //             <View key={item.ID} style={{alignItems:'flex-start'}}>\n        //                 <Text  style={{fontSize: item.TextSize, textAlign: 'left', fontWeight: '500', width: 350}}>\n        //                     {item.Text}\n        //                 </Text>\n        //             </View>\n        //         );\n        //     }\n        //     if(item.WidgetType.includes(\"Button\")){\n        //         console.log(\"App : pass to Button\");\n        //         return(\n        //             <View key={item.ID} style={{height: item.Height, width: item.Width, alignContent: 'center', alignItems: \"center\",backgroundColor: 'black',borderBottomWidth: StyleSheet.hairlineWidth}}>\n        //                 <Pressable style={{height: item.Height, width: item.Width, alignContent: 'center',   justifyContent: 'center', alignItems: \"center\", backgroundColor: 'skyblue'}}\n        //                     id={item.ID}\n        //                     onPressIn={this.onPressInListener}\n        //                     onPressOut={this.onPressOutListener}>\n        //                     <Text \n        //                         style={{fontSize: 30, textAlign: 'center', alignContent: 'center', color: 'black'}}\n        //                         id={item.ID}> \n        //                             {item.Text} \n        //                     </Text>\n                            \n        //                 </Pressable>\n        //             </View>\n        //         )\n        //     }\n            \n        //     return(\n        //         <Text> hi </Text>\n        //     );\n            \n            \n        // });\n        return (\n            <SafeAreaView Style={styles.container}>\n                {Layout}\n            </SafeAreaView>\n        );\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"center\",\n    },\n});\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}