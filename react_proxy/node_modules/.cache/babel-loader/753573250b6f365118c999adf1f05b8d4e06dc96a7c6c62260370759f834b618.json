{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\n\nimport * as React from 'react';\nimport * as ResponderSystem from './ResponderSystem';\nvar emptyObject = {};\nvar idCounter = 0;\nfunction useStable(getInitialValue) {\n  _s();\n  var ref = React.useRef(null);\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\n_s(useStable, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\nexport default function useResponderEvents(hostRef, config) {\n  _s2();\n  if (config === void 0) {\n    config = emptyObject;\n  }\n  var id = useStable(() => idCounter++);\n  var isAttachedRef = React.useRef(false);\n\n  // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n  React.useEffect(() => {\n    ResponderSystem.attachListeners();\n    return () => {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]);\n\n  // Register and unregister with the Responder System as necessary\n  React.useEffect(() => {\n    var _config = config,\n      onMoveShouldSetResponder = _config.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = _config.onMoveShouldSetResponderCapture,\n      onScrollShouldSetResponder = _config.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = _config.onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder = _config.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = _config.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = _config.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = _config.onStartShouldSetResponderCapture;\n    var requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null;\n    var node = hostRef.current;\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}\n_s2(useResponderEvents, \"DGcHtLtlazs5FRMTwJ6n+Mo/OEI=\", false, function () {\n  return [useStable];\n});","map":{"version":3,"names":["React","ResponderSystem","emptyObject","idCounter","useStable","getInitialValue","_s","ref","useRef","current","useResponderEvents","hostRef","config","_s2","id","isAttachedRef","useEffect","attachListeners","removeNode","_config","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","requiresResponderSystem","node","addNode","useDebugValue","isResponder","getResponderNode"],"sources":["/home/ywha/WEB_FLUID/react_proxy/src/node_modules/react-native-web/dist/modules/useResponderEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\n\nimport * as React from 'react';\nimport * as ResponderSystem from './ResponderSystem';\nvar emptyObject = {};\nvar idCounter = 0;\nfunction useStable(getInitialValue) {\n  var ref = React.useRef(null);\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\nexport default function useResponderEvents(hostRef, config) {\n  if (config === void 0) {\n    config = emptyObject;\n  }\n  var id = useStable(() => idCounter++);\n  var isAttachedRef = React.useRef(false);\n\n  // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n  React.useEffect(() => {\n    ResponderSystem.attachListeners();\n    return () => {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]);\n\n  // Register and unregister with the Responder System as necessary\n  React.useEffect(() => {\n    var _config = config,\n      onMoveShouldSetResponder = _config.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = _config.onMoveShouldSetResponderCapture,\n      onScrollShouldSetResponder = _config.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = _config.onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder = _config.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = _config.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = _config.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = _config.onStartShouldSetResponderCapture;\n    var requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null;\n    var node = hostRef.current;\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,eAAe,MAAM,mBAAmB;AACpD,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,SAAS,GAAG,CAAC;AACjB,SAASC,SAASA,CAACC,eAAe,EAAE;EAAAC,EAAA;EAClC,IAAIC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAID,GAAG,CAACE,OAAO,IAAI,IAAI,EAAE;IACvBF,GAAG,CAACE,OAAO,GAAGJ,eAAe,EAAE;EACjC;EACA,OAAOE,GAAG,CAACE,OAAO;AACpB;AAACH,EAAA,CANQF,SAAS;AAOlB,eAAe,SAASM,kBAAkBA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAAAC,GAAA;EAC1D,IAAID,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBA,MAAM,GAAGV,WAAW;EACtB;EACA,IAAIY,EAAE,GAAGV,SAAS,CAAC,MAAMD,SAAS,EAAE,CAAC;EACrC,IAAIY,aAAa,GAAGf,KAAK,CAACQ,MAAM,CAAC,KAAK,CAAC;;EAEvC;EACA;EACA;EACAR,KAAK,CAACgB,SAAS,CAAC,MAAM;IACpBf,eAAe,CAACgB,eAAe,EAAE;IACjC,OAAO,MAAM;MACXhB,eAAe,CAACiB,UAAU,CAACJ,EAAE,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;;EAER;EACAd,KAAK,CAACgB,SAAS,CAAC,MAAM;IACpB,IAAIG,OAAO,GAAGP,MAAM;MAClBQ,wBAAwB,GAAGD,OAAO,CAACC,wBAAwB;MAC3DC,+BAA+B,GAAGF,OAAO,CAACE,+BAA+B;MACzEC,0BAA0B,GAAGH,OAAO,CAACG,0BAA0B;MAC/DC,iCAAiC,GAAGJ,OAAO,CAACI,iCAAiC;MAC7EC,mCAAmC,GAAGL,OAAO,CAACK,mCAAmC;MACjFC,0CAA0C,GAAGN,OAAO,CAACM,0CAA0C;MAC/FC,yBAAyB,GAAGP,OAAO,CAACO,yBAAyB;MAC7DC,gCAAgC,GAAGR,OAAO,CAACQ,gCAAgC;IAC7E,IAAIC,uBAAuB,GAAGR,wBAAwB,IAAI,IAAI,IAAIC,+BAA+B,IAAI,IAAI,IAAIC,0BAA0B,IAAI,IAAI,IAAIC,iCAAiC,IAAI,IAAI,IAAIC,mCAAmC,IAAI,IAAI,IAAIC,0CAA0C,IAAI,IAAI,IAAIC,yBAAyB,IAAI,IAAI,IAAIC,gCAAgC,IAAI,IAAI;IAClX,IAAIE,IAAI,GAAGlB,OAAO,CAACF,OAAO;IAC1B,IAAImB,uBAAuB,EAAE;MAC3B3B,eAAe,CAAC6B,OAAO,CAAChB,EAAE,EAAEe,IAAI,EAAEjB,MAAM,CAAC;MACzCG,aAAa,CAACN,OAAO,GAAG,IAAI;IAC9B,CAAC,MAAM,IAAIM,aAAa,CAACN,OAAO,EAAE;MAChCR,eAAe,CAACiB,UAAU,CAACJ,EAAE,CAAC;MAC9BC,aAAa,CAACN,OAAO,GAAG,KAAK;IAC/B;EACF,CAAC,EAAE,CAACG,MAAM,EAAED,OAAO,EAAEG,EAAE,CAAC,CAAC;EACzBd,KAAK,CAAC+B,aAAa,CAAC;IAClBC,WAAW,EAAErB,OAAO,CAACF,OAAO,KAAKR,eAAe,CAACgC,gBAAgB;EACnE,CAAC,CAAC;EACFjC,KAAK,CAAC+B,aAAa,CAACnB,MAAM,CAAC;AAC7B;AAACC,GAAA,CA1CuBH,kBAAkB;EAAA,QAI/BN,SAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}