{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\n\nvar initialURL = _canUseDom.default ? window.location.href : '';\n\nvar Linking = function () {\n  function Linking() {\n    (0, _classCallCheck2.default)(this, Linking);\n    this._eventCallbacks = {};\n  }\n\n  (0, _createClass2.default)(Linking, [{\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent(event) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      var listeners = this._eventCallbacks[event];\n\n      if (listeners != null && Array.isArray(listeners)) {\n        listeners.map(function (listener) {\n          listener.apply(void 0, data);\n        });\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(eventType, callback) {\n      var _this = this;\n\n      if (!_this._eventCallbacks[eventType]) {\n        _this._eventCallbacks[eventType] = [callback];\n      }\n\n      _this._eventCallbacks[eventType].push(callback);\n\n      return {\n        remove: function remove() {\n          var callbacks = _this._eventCallbacks[eventType];\n          var filteredCallbacks = callbacks.filter(function (c) {\n            return c.toString() !== callback.toString();\n          });\n          _this._eventCallbacks[eventType] = filteredCallbacks;\n        }\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(eventType, callback) {\n      console.error(\"Linking.removeEventListener('\" + eventType + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `Linking.addEventListener`.');\n      var callbacks = this._eventCallbacks[eventType];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      this._eventCallbacks[eventType] = filteredCallbacks;\n    }\n  }, {\n    key: \"canOpenURL\",\n    value: function canOpenURL() {\n      return Promise.resolve(true);\n    }\n  }, {\n    key: \"getInitialURL\",\n    value: function getInitialURL() {\n      return Promise.resolve(initialURL);\n    }\n  }, {\n    key: \"openURL\",\n    value: function openURL(url, target) {\n      if (arguments.length === 1) {\n        target = '_blank';\n      }\n\n      try {\n        open(url, target);\n\n        this._dispatchEvent('onOpen', url);\n\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }, {\n    key: \"_validateURL\",\n    value: function _validateURL(url) {\n      (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n      (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n    }\n  }]);\n  return Linking;\n}();\n\nvar open = function open(url, target) {\n  if (_canUseDom.default) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\n\nvar _default = new Linking();\n\nexports.default = _default;","map":{"version":3,"names":["initialURL","canUseDOM","window","location","href","Linking","_eventCallbacks","event","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","eventType","callback","_this","push","remove","callbacks","filteredCallbacks","filter","c","toString","console","error","Promise","resolve","url","target","open","_dispatchEvent","e","reject","invariant","urlToOpen","URL","indexOf"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n  }\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    var listeners = this._eventCallbacks[event];\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n  addEventListener(eventType, callback) {\n    var _this = this;\n    if (!_this._eventCallbacks[eventType]) {\n      _this._eventCallbacks[eventType] = [callback];\n    }\n    _this._eventCallbacks[eventType].push(callback);\n    return {\n      remove() {\n        var callbacks = _this._eventCallbacks[eventType];\n        var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n        _this._eventCallbacks[eventType] = filteredCallbacks;\n      }\n    };\n  }\n\n  /**\n   * Removes a previously added event listener for the specified event. The callback must\n   * be the same object as the one passed to `addEventListener`.\n   */\n  removeEventListener(eventType, callback) {\n    console.error(\"Linking.removeEventListener('\" + eventType + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `Linking.addEventListener`.');\n    var callbacks = this._eventCallbacks[eventType];\n    var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n    this._eventCallbacks[eventType] = filteredCallbacks;\n  }\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n    try {\n      open(url, target);\n      this._dispatchEvent('onOpen', url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();"],"mappings":"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"},"metadata":{},"sourceType":"script"}