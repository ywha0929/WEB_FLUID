{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Socket = _interopRequireDefault(require(\"./Socket\"));\n\nvar _Server = _interopRequireDefault(require(\"./Server\"));\n\nfunction createServer(connectionListener) {\n  return new _Server.default(connectionListener);\n}\n\nfunction createConnection(options, callback) {\n  var tcpSocket = new _Socket.default();\n  return tcpSocket.connect(options, callback);\n}\n\nvar v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar v4Str = \"(\" + v4Seg + \"[.]){3}\" + v4Seg;\nvar IPv4Reg = new RegExp(\"^\" + v4Str + \"$\");\nvar v6Seg = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6Reg = new RegExp('^(' + (\"(?:\" + v6Seg + \":){7}(?:\" + v6Seg + \"|:)|\") + (\"(?:\" + v6Seg + \":){6}(?:\" + v4Str + \"|:\" + v6Seg + \"|:)|\") + (\"(?:\" + v6Seg + \":){5}(?::\" + v4Str + \"|(:\" + v6Seg + \"){1,2}|:)|\") + (\"(?:\" + v6Seg + \":){4}(?:(:\" + v6Seg + \"){0,1}:\" + v4Str + \"|(:\" + v6Seg + \"){1,3}|:)|\") + (\"(?:\" + v6Seg + \":){3}(?:(:\" + v6Seg + \"){0,2}:\" + v4Str + \"|(:\" + v6Seg + \"){1,4}|:)|\") + (\"(?:\" + v6Seg + \":){2}(?:(:\" + v6Seg + \"){0,3}:\" + v4Str + \"|(:\" + v6Seg + \"){1,5}|:)|\") + (\"(?:\" + v6Seg + \":){1}(?:(:\" + v6Seg + \"){0,4}:\" + v4Str + \"|(:\" + v6Seg + \"){1,6}|:)|\") + (\"(?::((?::\" + v6Seg + \"){0,5}:\" + v4Str + \"|(?::\" + v6Seg + \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIPv4(input) {\n  return IPv4Reg.test(input);\n}\n\nfunction isIPv6(input) {\n  return IPv6Reg.test(input);\n}\n\nfunction isIP(input) {\n  if (isIPv4(input)) return 4;else if (isIPv6(input)) return 6;\n  return 0;\n}\n\nvar _default = {\n  createServer: createServer,\n  createConnection: createConnection,\n  isIP: isIP,\n  isIPv4: isIPv4,\n  isIPv6: isIPv6,\n  Server: _Server.default,\n  Socket: _Socket.default\n};\nexports.default = _default;\nmodule.exports = {\n  createServer: createServer,\n  createConnection: createConnection,\n  isIP: isIP,\n  isIPv4: isIPv4,\n  isIPv6: isIPv6,\n  Server: _Server.default,\n  Socket: _Socket.default\n};","map":{"version":3,"names":["createServer","connectionListener","Server","createConnection","options","callback","tcpSocket","Socket","connect","v4Seg","v4Str","IPv4Reg","RegExp","v6Seg","IPv6Reg","isIPv4","input","test","isIPv6","isIP","module","exports"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-tcp-socket/src/index.js"],"sourcesContent":["'use strict';\n\nimport Socket from './Socket';\nimport Server from './Server';\n\n/**\n * @param {(socket: Socket) => void} connectionListener\n * @returns {Server}\n */\nfunction createServer(connectionListener) {\n    return new Server(connectionListener);\n}\n\n/**\n * @param {import('./Socket').ConnectionOptions} options\n * @param {() => void} callback\n * @returns {Socket}\n */\nfunction createConnection(options, callback) {\n    const tcpSocket = new Socket();\n    return tcpSocket.connect(options, callback);\n}\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6Reg = new RegExp(\n    '^(' +\n        `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n        `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n        `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n        `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n        `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n        `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n        `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n        `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n        ')(%[0-9a-zA-Z-.:]{1,})?$'\n);\n\n/**\n * Returns `true` if input is a version 4 IP address, otherwise returns `false`.\n *\n * @param {string} input\n */\nfunction isIPv4(input) {\n    return IPv4Reg.test(input);\n}\n\n/**\n * Returns `true` if input is a version 6 IP address, otherwise returns `false`.\n *\n * @param {string} input\n */\nfunction isIPv6(input) {\n    return IPv6Reg.test(input);\n}\n\n/**\n * Tests if input is an IP address. Returns `0` for invalid strings, returns `4` for IP version 4 addresses, and returns `6` for IP version 6 addresses.\n *\n * @param {string} input\n */\nfunction isIP(input) {\n    if (isIPv4(input)) return 4;\n    else if (isIPv6(input)) return 6;\n    return 0;\n}\n\nexport default { createServer, createConnection, isIP, isIPv4, isIPv6, Server, Socket };\n\n// @ts-ignore\nmodule.exports = { createServer, createConnection, isIP, isIPv4, isIPv6, Server, Socket };\n"],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;AAMA,SAASA,YAAT,CAAsBC,kBAAtB,EAA0C;EACtC,OAAO,IAAIC,eAAJ,CAAWD,kBAAX,CAAP;AACH;;AAOD,SAASE,gBAAT,CAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;EACzC,IAAMC,SAAS,GAAG,IAAIC,eAAJ,EAAlB;EACA,OAAOD,SAAS,CAACE,OAAV,CAAkBJ,OAAlB,EAA2BC,QAA3B,CAAP;AACH;;AAGD,IAAMI,KAAK,GAAG,sDAAd;AACA,IAAMC,KAAK,SAAOD,KAAP,eAAsBA,KAAjC;AACA,IAAME,OAAO,GAAG,IAAIC,MAAJ,OAAeF,KAAf,OAAhB;AAGA,IAAMG,KAAK,GAAG,sBAAd;AACA,IAAMC,OAAO,GAAG,IAAIF,MAAJ,CACZ,gBACUC,KADV,gBAC0BA,KAD1B,sBAEUA,KAFV,gBAE0BH,KAF1B,UAEoCG,KAFpC,sBAGUA,KAHV,iBAG2BH,KAH3B,WAGsCG,KAHtC,4BAIUA,KAJV,kBAI4BA,KAJ5B,eAI2CH,KAJ3C,WAIsDG,KAJtD,4BAKUA,KALV,kBAK4BA,KAL5B,eAK2CH,KAL3C,WAKsDG,KALtD,4BAMUA,KANV,kBAM4BA,KAN5B,eAM2CH,KAN3C,WAMsDG,KANtD,4BAOUA,KAPV,kBAO4BA,KAP5B,eAO2CH,KAP3C,WAOsDG,KAPtD,kCAQgBA,KARhB,eAQ+BH,KAR/B,aAQ4CG,KAR5C,mBASI,0BAVQ,CAAhB;;AAkBA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;EACnB,OAAOL,OAAO,CAACM,IAAR,CAAaD,KAAb,CAAP;AACH;;AAOD,SAASE,MAAT,CAAgBF,KAAhB,EAAuB;EACnB,OAAOF,OAAO,CAACG,IAAR,CAAaD,KAAb,CAAP;AACH;;AAOD,SAASG,IAAT,CAAcH,KAAd,EAAqB;EACjB,IAAID,MAAM,CAACC,KAAD,CAAV,EAAmB,OAAO,CAAP,CAAnB,KACK,IAAIE,MAAM,CAACF,KAAD,CAAV,EAAmB,OAAO,CAAP;EACxB,OAAO,CAAP;AACH;;eAEc;EAAEhB,YAAY,EAAZA,YAAF;EAAgBG,gBAAgB,EAAhBA,gBAAhB;EAAkCgB,IAAI,EAAJA,IAAlC;EAAwCJ,MAAM,EAANA,MAAxC;EAAgDG,MAAM,EAANA,MAAhD;EAAwDhB,MAAM,EAANA,eAAxD;EAAgEK,MAAM,EAANA;AAAhE,C;;AAGfa,MAAM,CAACC,OAAP,GAAiB;EAAErB,YAAY,EAAZA,YAAF;EAAgBG,gBAAgB,EAAhBA,gBAAhB;EAAkCgB,IAAI,EAAJA,IAAlC;EAAwCJ,MAAM,EAANA,MAAxC;EAAgDG,MAAM,EAANA,MAAhD;EAAwDhB,MAAM,EAANA,eAAxD;EAAgEK,MAAM,EAANA;AAAhE,CAAjB"},"metadata":{},"sourceType":"script"}