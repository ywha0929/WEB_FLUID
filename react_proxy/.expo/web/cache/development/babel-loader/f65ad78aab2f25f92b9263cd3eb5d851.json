{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _dismissKeyboard = _interopRequireDefault(require(\"../../modules/dismissKeyboard\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _mergeRefs = _interopRequireDefault(require(\"../../modules/mergeRefs\"));\n\nvar _Platform = _interopRequireDefault(require(\"../Platform\"));\n\nvar _ScrollViewBase = _interopRequireDefault(require(\"./ScrollViewBase\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../UIManager\"));\n\nvar _View = _interopRequireDefault(require(\"../View\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"fbjs/lib/warning\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\n\nvar ScrollView = function (_React$Component) {\n  (0, _inherits2.default)(ScrollView, _React$Component);\n\n  var _super = _createSuper(ScrollView);\n\n  function ScrollView() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ScrollView);\n    _this = _super.apply(this, arguments);\n    _this._scrollNodeRef = null;\n    _this._innerViewRef = null;\n    _this.isTouching = false;\n    _this.lastMomentumScrollBeginTime = 0;\n    _this.lastMomentumScrollEndTime = 0;\n    _this.observedScrollSinceBecomingResponder = false;\n    _this.becameResponderWhileAnimating = false;\n\n    _this.scrollResponderHandleScrollShouldSetResponder = function () {\n      return _this.isTouching;\n    };\n\n    _this.scrollResponderHandleStartShouldSetResponderCapture = function (e) {\n      return _this.scrollResponderIsAnimating();\n    };\n\n    _this.scrollResponderHandleTerminationRequest = function () {\n      return !_this.observedScrollSinceBecomingResponder;\n    };\n\n    _this.scrollResponderHandleTouchEnd = function (e) {\n      var nativeEvent = e.nativeEvent;\n      _this.isTouching = nativeEvent.touches.length !== 0;\n      _this.props.onTouchEnd && _this.props.onTouchEnd(e);\n    };\n\n    _this.scrollResponderHandleResponderRelease = function (e) {\n      _this.props.onResponderRelease && _this.props.onResponderRelease(e);\n\n      var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedField();\n\n      if (!_this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !_this.observedScrollSinceBecomingResponder && !_this.becameResponderWhileAnimating) {\n        _this.props.onScrollResponderKeyboardDismissed && _this.props.onScrollResponderKeyboardDismissed(e);\n\n        _TextInputState.default.blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n\n    _this.scrollResponderHandleScroll = function (e) {\n      _this.observedScrollSinceBecomingResponder = true;\n      _this.props.onScroll && _this.props.onScroll(e);\n    };\n\n    _this.scrollResponderHandleResponderGrant = function (e) {\n      _this.observedScrollSinceBecomingResponder = false;\n      _this.props.onResponderGrant && _this.props.onResponderGrant(e);\n      _this.becameResponderWhileAnimating = _this.scrollResponderIsAnimating();\n    };\n\n    _this.scrollResponderHandleScrollBeginDrag = function (e) {\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this.scrollResponderHandleScrollEndDrag = function (e) {\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this.scrollResponderHandleMomentumScrollBegin = function (e) {\n      _this.lastMomentumScrollBeginTime = Date.now();\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n\n    _this.scrollResponderHandleMomentumScrollEnd = function (e) {\n      _this.lastMomentumScrollEndTime = Date.now();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this.scrollResponderHandleTouchStart = function (e) {\n      _this.isTouching = true;\n      _this.props.onTouchStart && _this.props.onTouchStart(e);\n    };\n\n    _this.scrollResponderHandleTouchMove = function (e) {\n      _this.props.onTouchMove && _this.props.onTouchMove(e);\n    };\n\n    _this.scrollResponderIsAnimating = function () {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - _this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || _this.lastMomentumScrollEndTime < _this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n\n    _this.scrollResponderScrollTo = function (x, y, animated) {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n\n      var node = _this.getScrollableNode();\n\n      var left = x || 0;\n      var top = y || 0;\n\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top: top,\n            left: left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n\n    _this.scrollResponderZoomTo = function (rect, animated) {\n      if (_Platform.default.OS !== 'ios') {\n        (0, _invariant.default)('zoomToRect is not implemented');\n      }\n    };\n\n    _this.scrollResponderScrollNativeHandleToKeyboard = function (nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n      _this.additionalScrollOffset = additionalOffset || 0;\n      _this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n\n      _UIManager.default.measureLayout(nodeHandle, _this.getInnerViewNode(), _this.scrollResponderTextInputFocusError, _this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n\n    _this.scrollResponderInputMeasureAndScrollToKeyboard = function (left, top, width, height) {\n      var keyboardScreenY = _Dimensions.default.get('window').height;\n\n      if (_this.keyboardWillOpenTo) {\n        keyboardScreenY = _this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n\n      var scrollOffsetY = top - keyboardScreenY + height + _this.additionalScrollOffset;\n\n      if (_this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n\n      _this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n\n      _this.additionalOffset = 0;\n      _this.preventNegativeScrollOffset = false;\n    };\n\n    _this.scrollResponderKeyboardWillShow = function (e) {\n      _this.keyboardWillOpenTo = e;\n      _this.props.onKeyboardWillShow && _this.props.onKeyboardWillShow(e);\n    };\n\n    _this.scrollResponderKeyboardWillHide = function (e) {\n      _this.keyboardWillOpenTo = null;\n      _this.props.onKeyboardWillHide && _this.props.onKeyboardWillHide(e);\n    };\n\n    _this.scrollResponderKeyboardDidShow = function (e) {\n      if (e) {\n        _this.keyboardWillOpenTo = e;\n      }\n\n      _this.props.onKeyboardDidShow && _this.props.onKeyboardDidShow(e);\n    };\n\n    _this.scrollResponderKeyboardDidHide = function (e) {\n      _this.keyboardWillOpenTo = null;\n      _this.props.onKeyboardDidHide && _this.props.onKeyboardDidHide(e);\n    };\n\n    _this.flashScrollIndicators = function () {\n      _this.scrollResponderFlashScrollIndicators();\n    };\n\n    _this.getScrollResponder = function () {\n      return (0, _assertThisInitialized2.default)(_this);\n    };\n\n    _this.getScrollableNode = function () {\n      return _this._scrollNodeRef;\n    };\n\n    _this.getInnerViewRef = function () {\n      return _this._innerViewRef;\n    };\n\n    _this.getInnerViewNode = function () {\n      return _this._innerViewRef;\n    };\n\n    _this.getNativeScrollRef = function () {\n      return _this._scrollNodeRef;\n    };\n\n    _this.scrollTo = function (y, x, animated) {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n\n      _this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n\n    _this.scrollToEnd = function (options) {\n      var animated = (options && options.animated) !== false;\n      var horizontal = _this.props.horizontal;\n\n      var scrollResponderNode = _this.getScrollableNode();\n\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n\n      _this.scrollResponderScrollTo({\n        x: x,\n        y: y,\n        animated: animated\n      });\n    };\n\n    _this._handleContentOnLayout = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n\n      _this.props.onContentSizeChange(width, height);\n    };\n\n    _this._handleScroll = function (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (_this.props.onScroll && _this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n\n      if (_this.props.keyboardDismissMode === 'on-drag') {\n        (0, _dismissKeyboard.default)();\n      }\n\n      _this.scrollResponderHandleScroll(e);\n    };\n\n    _this._setInnerViewRef = function (node) {\n      _this._innerViewRef = node;\n    };\n\n    _this._setScrollNodeRef = function (node) {\n      _this._scrollNodeRef = node;\n\n      if (node != null) {\n        node.getScrollResponder = _this.getScrollResponder;\n        node.getInnerViewNode = _this.getInnerViewNode;\n        node.getInnerViewRef = _this.getInnerViewRef;\n        node.getNativeScrollRef = _this.getNativeScrollRef;\n        node.getScrollableNode = _this.getScrollableNode;\n        node.scrollTo = _this.scrollTo;\n        node.scrollToEnd = _this.scrollToEnd;\n        node.flashScrollIndicators = _this.flashScrollIndicators;\n        node.scrollResponderZoomTo = _this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = _this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n\n      var ref = (0, _mergeRefs.default)(_this.props.forwardedRef);\n      ref(node);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ScrollView, [{\n    key: \"scrollResponderHandleStartShouldSetResponder\",\n    value: function scrollResponderHandleStartShouldSetResponder() {\n      return false;\n    }\n  }, {\n    key: \"scrollResponderHandleResponderReject\",\n    value: function scrollResponderHandleResponderReject() {\n      (0, _warning.default)(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n    }\n  }, {\n    key: \"scrollResponderFlashScrollIndicators\",\n    value: function scrollResponderFlashScrollIndicators() {}\n  }, {\n    key: \"scrollResponderTextInputFocusError\",\n    value: function scrollResponderTextInputFocusError(e) {\n      console.error('Error measuring text field: ', e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          horizontal = _this$props.horizontal,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          refreshControl = _this$props.refreshControl,\n          stickyHeaderIndices = _this$props.stickyHeaderIndices,\n          pagingEnabled = _this$props.pagingEnabled,\n          forwardedRef = _this$props.forwardedRef,\n          keyboardDismissMode = _this$props.keyboardDismissMode,\n          onScroll = _this$props.onScroll,\n          centerContent = _this$props.centerContent,\n          other = (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded);\n\n      if (process.env.NODE_ENV !== 'production' && this.props.style) {\n        var style = _StyleSheet.default.flatten(this.props.style);\n\n        var childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {\n          return style && style[prop] !== undefined;\n        });\n        (0, _invariant.default)(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n      }\n\n      var contentSizeChangeProps = {};\n\n      if (onContentSizeChange) {\n        contentSizeChangeProps = {\n          onLayout: this._handleContentOnLayout\n        };\n      }\n\n      var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n      var children = hasStickyHeaderIndices || pagingEnabled ? _react.default.Children.map(this.props.children, function (child, i) {\n        var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n\n        if (child != null && (isSticky || pagingEnabled)) {\n          return _react.default.createElement(_View.default, {\n            style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n          }, child);\n        } else {\n          return child;\n        }\n      }) : this.props.children;\n\n      var contentContainer = _react.default.createElement(_View.default, (0, _extends2.default)({}, contentSizeChangeProps, {\n        children: children,\n        collapsable: false,\n        ref: this._setInnerViewRef,\n        style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n      }));\n\n      var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n      var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n      var props = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, other), {}, {\n        style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n        onTouchStart: this.scrollResponderHandleTouchStart,\n        onTouchMove: this.scrollResponderHandleTouchMove,\n        onTouchEnd: this.scrollResponderHandleTouchEnd,\n        onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n        onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n        onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n        onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n        onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n        onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n        onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n        onScroll: this._handleScroll,\n        onResponderGrant: this.scrollResponderHandleResponderGrant,\n        onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n        onResponderTerminate: this.scrollResponderHandleTerminate,\n        onResponderRelease: this.scrollResponderHandleResponderRelease,\n        onResponderReject: this.scrollResponderHandleResponderReject\n      });\n      var ScrollViewClass = _ScrollViewBase.default;\n      (0, _invariant.default)(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n\n      var scrollView = _react.default.createElement(ScrollViewClass, (0, _extends2.default)({}, props, {\n        ref: this._setScrollNodeRef\n      }), contentContainer);\n\n      if (refreshControl) {\n        return _react.default.cloneElement(refreshControl, {\n          style: props.style\n        }, scrollView);\n      }\n\n      return scrollView;\n    }\n  }]);\n  return ScrollView;\n}(_react.default.Component);\n\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  transform: 'translateZ(0)',\n  WebkitOverflowScrolling: 'touch'\n};\n\nvar styles = _StyleSheet.default.create({\n  baseVertical: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\n\nvar ForwardedScrollView = _react.default.forwardRef(function (props, forwardedRef) {\n  return _react.default.createElement(ScrollView, (0, _extends2.default)({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\n\nForwardedScrollView.displayName = 'ScrollView';\nvar _default = ForwardedScrollView;\nexports.default = _default;","map":{"version":3,"names":["_excluded","emptyObject","IS_ANIMATING_TOUCH_START_THRESHOLD_MS","ScrollView","arguments","_scrollNodeRef","_innerViewRef","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","e","scrollResponderIsAnimating","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","nativeEvent","touches","length","props","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","TextInputState","currentlyFocusedField","keyboardShouldPersistTaps","target","onScrollResponderKeyboardDismissed","blurTextInput","scrollResponderHandleScroll","onScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","onScrollBeginDrag","scrollResponderHandleScrollEndDrag","onScrollEndDrag","scrollResponderHandleMomentumScrollBegin","Date","now","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","onMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","timeSinceLastMomentumScrollEnd","isAnimating","scrollResponderScrollTo","x","y","animated","console","warn","_ref","node","getScrollableNode","left","top","scroll","behavior","scrollLeft","scrollTop","scrollResponderZoomTo","rect","Platform","OS","invariant","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","UIManager","measureLayout","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","width","height","keyboardScreenY","Dimensions","get","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","Math","max","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","flashScrollIndicators","scrollResponderFlashScrollIndicators","getScrollResponder","getInnerViewRef","getNativeScrollRef","scrollTo","_ref2","scrollToEnd","options","horizontal","scrollResponderNode","scrollWidth","scrollHeight","_handleContentOnLayout","_e$nativeEvent$layout","layout","onContentSizeChange","_handleScroll","process","env","NODE_ENV","scrollEventThrottle","log","keyboardDismissMode","dismissKeyboard","_setInnerViewRef","_setScrollNodeRef","ref","mergeRefs","forwardedRef","warning","error","_this$props","contentContainerStyle","refreshControl","stickyHeaderIndices","pagingEnabled","centerContent","other","_objectWithoutPropertiesLoose","style","StyleSheet","flatten","childLayoutProps","filter","prop","undefined","JSON","stringify","contentSizeChangeProps","onLayout","hasStickyHeaderIndices","Array","isArray","children","React","Children","map","child","i","isSticky","indexOf","createElement","View","styles","stickyHeader","pagingEnabledChild","contentContainer","_extends","collapsable","contentContainerHorizontal","contentContainerCenterContent","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","_objectSpread","onStartShouldSetResponder","scrollResponderHandleStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","scrollResponderHandleResponderReject","ScrollViewClass","ScrollViewBase","scrollView","cloneElement","Component","commonStyle","flexGrow","flexShrink","transform","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","justifyContent","position","zIndex","scrollSnapType","scrollSnapAlign","ForwardedScrollView","forwardRef","displayName"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/exports/ScrollView/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../modules/mergeRefs';\nimport Platform from '../Platform';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport UIManager from '../UIManager';\nimport View from '../View';\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nclass ScrollView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this._scrollNodeRef = null;\n    this._innerViewRef = null;\n    this.isTouching = false;\n    this.lastMomentumScrollBeginTime = 0;\n    this.lastMomentumScrollEndTime = 0;\n    this.observedScrollSinceBecomingResponder = false;\n    this.becameResponderWhileAnimating = false;\n    this.scrollResponderHandleScrollShouldSetResponder = () => {\n      return this.isTouching;\n    };\n    this.scrollResponderHandleStartShouldSetResponderCapture = e => {\n      // First see if we want to eat taps while the keyboard is up\n      // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      // if (!this.props.keyboardShouldPersistTaps &&\n      //   currentlyFocusedTextInput != null &&\n      //   e.target !== currentlyFocusedTextInput) {\n      //   return true;\n      // }\n      return this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleTerminationRequest = () => {\n      return !this.observedScrollSinceBecomingResponder;\n    };\n    this.scrollResponderHandleTouchEnd = e => {\n      var nativeEvent = e.nativeEvent;\n      this.isTouching = nativeEvent.touches.length !== 0;\n      this.props.onTouchEnd && this.props.onTouchEnd(e);\n    };\n    this.scrollResponderHandleResponderRelease = e => {\n      this.props.onResponderRelease && this.props.onResponderRelease(e);\n\n      // By default scroll views will unfocus a textField\n      // if another touch occurs outside of it\n      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.observedScrollSinceBecomingResponder && !this.becameResponderWhileAnimating) {\n        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n        TextInputState.blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n    this.scrollResponderHandleScroll = e => {\n      this.observedScrollSinceBecomingResponder = true;\n      this.props.onScroll && this.props.onScroll(e);\n    };\n    this.scrollResponderHandleResponderGrant = e => {\n      this.observedScrollSinceBecomingResponder = false;\n      this.props.onResponderGrant && this.props.onResponderGrant(e);\n      this.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleScrollBeginDrag = e => {\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this.scrollResponderHandleScrollEndDrag = e => {\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this.scrollResponderHandleMomentumScrollBegin = e => {\n      this.lastMomentumScrollBeginTime = Date.now();\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this.scrollResponderHandleMomentumScrollEnd = e => {\n      this.lastMomentumScrollEndTime = Date.now();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this.scrollResponderHandleTouchStart = e => {\n      this.isTouching = true;\n      this.props.onTouchStart && this.props.onTouchStart(e);\n    };\n    this.scrollResponderHandleTouchMove = e => {\n      this.props.onTouchMove && this.props.onTouchMove(e);\n    };\n    this.scrollResponderIsAnimating = () => {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.lastMomentumScrollEndTime < this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n    this.scrollResponderScrollTo = (x, y, animated) => {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n      var node = this.getScrollableNode();\n      var left = x || 0;\n      var top = y || 0;\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top,\n            left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n    this.scrollResponderZoomTo = (rect, animated) => {\n      if (Platform.OS !== 'ios') {\n        invariant('zoomToRect is not implemented');\n      }\n    };\n    this.scrollResponderScrollNativeHandleToKeyboard = (nodeHandle, additionalOffset, preventNegativeScrollOffset) => {\n      this.additionalScrollOffset = additionalOffset || 0;\n      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n      UIManager.measureLayout(nodeHandle, this.getInnerViewNode(), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n    this.scrollResponderInputMeasureAndScrollToKeyboard = (left, top, width, height) => {\n      var keyboardScreenY = Dimensions.get('window').height;\n      if (this.keyboardWillOpenTo) {\n        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;\n\n      // By default, this can scroll with negative offset, pulling the content\n      // down so that the target component's bottom meets the keyboard's top.\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\n      // shifting down.\n      if (this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n      this.additionalOffset = 0;\n      this.preventNegativeScrollOffset = false;\n    };\n    this.scrollResponderKeyboardWillShow = e => {\n      this.keyboardWillOpenTo = e;\n      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n    };\n    this.scrollResponderKeyboardWillHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n    };\n    this.scrollResponderKeyboardDidShow = e => {\n      // TODO(7693961): The event for DidShow is not available on iOS yet.\n      // Use the one from WillShow and do not assign.\n      if (e) {\n        this.keyboardWillOpenTo = e;\n      }\n      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n    };\n    this.scrollResponderKeyboardDidHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n    };\n    this.flashScrollIndicators = () => {\n      this.scrollResponderFlashScrollIndicators();\n    };\n    this.getScrollResponder = () => {\n      return this;\n    };\n    this.getScrollableNode = () => {\n      return this._scrollNodeRef;\n    };\n    this.getInnerViewRef = () => {\n      return this._innerViewRef;\n    };\n    this.getInnerViewNode = () => {\n      return this._innerViewRef;\n    };\n    this.getNativeScrollRef = () => {\n      return this._scrollNodeRef;\n    };\n    this.scrollTo = (y, x, animated) => {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n      this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n    this.scrollToEnd = options => {\n      // Default to true\n      var animated = (options && options.animated) !== false;\n      var horizontal = this.props.horizontal;\n      var scrollResponderNode = this.getScrollableNode();\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n      this.scrollResponderScrollTo({\n        x,\n        y,\n        animated\n      });\n    };\n    this._handleContentOnLayout = e => {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      this.props.onContentSizeChange(width, height);\n    };\n    this._handleScroll = e => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        dismissKeyboard();\n      }\n      this.scrollResponderHandleScroll(e);\n    };\n    this._setInnerViewRef = node => {\n      this._innerViewRef = node;\n    };\n    this._setScrollNodeRef = node => {\n      this._scrollNodeRef = node;\n      // ScrollView needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\n      if (node != null) {\n        node.getScrollResponder = this.getScrollResponder;\n        node.getInnerViewNode = this.getInnerViewNode;\n        node.getInnerViewRef = this.getInnerViewRef;\n        node.getNativeScrollRef = this.getNativeScrollRef;\n        node.getScrollableNode = this.getScrollableNode;\n        node.scrollTo = this.scrollTo;\n        node.scrollToEnd = this.scrollToEnd;\n        node.flashScrollIndicators = this.flashScrollIndicators;\n        node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n      var ref = mergeRefs(this.props.forwardedRef);\n      ref(node);\n    };\n  }\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  }\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  }\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators() {}\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n\n  scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  }\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n\n  render() {\n    var _this$props = this.props,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      horizontal = _this$props.horizontal,\n      onContentSizeChange = _this$props.onContentSizeChange,\n      refreshControl = _this$props.refreshControl,\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\n      pagingEnabled = _this$props.pagingEnabled,\n      forwardedRef = _this$props.forwardedRef,\n      keyboardDismissMode = _this$props.keyboardDismissMode,\n      onScroll = _this$props.onScroll,\n      centerContent = _this$props.centerContent,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n    var contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n      if (child != null && (isSticky || pagingEnabled)) {\n        return /*#__PURE__*/React.createElement(View, {\n          style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n    if (refreshControl) {\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n    return scrollView;\n  }\n}\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: 'translateZ(0)',\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nexport default ForwardedScrollView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}