{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createResponderEvent;\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../../modules/getBoundingClientRect\"));\n\nvar emptyFunction = function emptyFunction() {};\n\nvar emptyObject = {};\nvar emptyArray = [];\n\nfunction normalizeIdentifier(identifier) {\n  return identifier > 20 ? identifier % 20 : identifier;\n}\n\nfunction createResponderEvent(domEvent, responderTouchHistoryStore) {\n  var rect;\n  var propagationWasStopped = false;\n  var changedTouches;\n  var touches;\n  var domEventChangedTouches = domEvent.changedTouches;\n  var domEventType = domEvent.type;\n  var metaKey = domEvent.metaKey === true;\n  var shiftKey = domEvent.shiftKey === true;\n  var force = domEventChangedTouches && domEventChangedTouches[0].force || 0;\n  var identifier = normalizeIdentifier(domEventChangedTouches && domEventChangedTouches[0].identifier || 0);\n  var clientX = domEventChangedTouches && domEventChangedTouches[0].clientX || domEvent.clientX;\n  var clientY = domEventChangedTouches && domEventChangedTouches[0].clientY || domEvent.clientY;\n  var pageX = domEventChangedTouches && domEventChangedTouches[0].pageX || domEvent.pageX;\n  var pageY = domEventChangedTouches && domEventChangedTouches[0].pageY || domEvent.pageY;\n  var preventDefault = typeof domEvent.preventDefault === 'function' ? domEvent.preventDefault.bind(domEvent) : emptyFunction;\n  var timestamp = domEvent.timeStamp;\n\n  function normalizeTouches(touches) {\n    return Array.prototype.slice.call(touches).map(function (touch) {\n      return {\n        force: touch.force,\n        identifier: normalizeIdentifier(touch.identifier),\n\n        get locationX() {\n          return locationX(touch.clientX);\n        },\n\n        get locationY() {\n          return locationY(touch.clientY);\n        },\n\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        target: touch.target,\n        timestamp: timestamp\n      };\n    });\n  }\n\n  if (domEventChangedTouches != null) {\n    changedTouches = normalizeTouches(domEventChangedTouches);\n    touches = normalizeTouches(domEvent.touches);\n  } else {\n    var emulatedTouches = [{\n      force: force,\n      identifier: identifier,\n\n      get locationX() {\n        return locationX(clientX);\n      },\n\n      get locationY() {\n        return locationY(clientY);\n      },\n\n      pageX: pageX,\n      pageY: pageY,\n      target: domEvent.target,\n      timestamp: timestamp\n    }];\n    changedTouches = emulatedTouches;\n    touches = domEventType === 'mouseup' || domEventType === 'dragstart' ? emptyArray : emulatedTouches;\n  }\n\n  var responderEvent = {\n    bubbles: true,\n    cancelable: true,\n    currentTarget: null,\n    defaultPrevented: domEvent.defaultPrevented,\n    dispatchConfig: emptyObject,\n    eventPhase: domEvent.eventPhase,\n    isDefaultPrevented: function isDefaultPrevented() {\n      return domEvent.defaultPrevented;\n    },\n    isPropagationStopped: function isPropagationStopped() {\n      return propagationWasStopped;\n    },\n    isTrusted: domEvent.isTrusted,\n    nativeEvent: {\n      altKey: false,\n      ctrlKey: false,\n      metaKey: metaKey,\n      shiftKey: shiftKey,\n      changedTouches: changedTouches,\n      force: force,\n      identifier: identifier,\n\n      get locationX() {\n        return locationX(clientX);\n      },\n\n      get locationY() {\n        return locationY(clientY);\n      },\n\n      pageX: pageX,\n      pageY: pageY,\n      target: domEvent.target,\n      timestamp: timestamp,\n      touches: touches,\n      type: domEventType\n    },\n    persist: emptyFunction,\n    preventDefault: preventDefault,\n    stopPropagation: function stopPropagation() {\n      propagationWasStopped = true;\n    },\n    target: domEvent.target,\n    timeStamp: timestamp,\n    touchHistory: responderTouchHistoryStore.touchHistory\n  };\n\n  function locationX(x) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n\n    if (rect) {\n      return x - rect.left;\n    }\n  }\n\n  function locationY(y) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n\n    if (rect) {\n      return y - rect.top;\n    }\n  }\n\n  return responderEvent;\n}","map":{"version":3,"names":["emptyFunction","emptyObject","emptyArray","normalizeIdentifier","identifier","createResponderEvent","domEvent","responderTouchHistoryStore","rect","propagationWasStopped","changedTouches","touches","domEventChangedTouches","domEventType","type","metaKey","shiftKey","force","clientX","clientY","pageX","pageY","preventDefault","bind","timestamp","timeStamp","normalizeTouches","Array","prototype","slice","call","map","touch","locationX","locationY","target","emulatedTouches","responderEvent","bubbles","cancelable","currentTarget","defaultPrevented","dispatchConfig","eventPhase","isDefaultPrevented","isPropagationStopped","isTrusted","nativeEvent","altKey","ctrlKey","persist","stopPropagation","touchHistory","x","getBoundingClientRect","left","y","top"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/modules/useResponderEvents/createResponderEvent.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport getBoundingClientRect from '../../modules/getBoundingClientRect';\nvar emptyFunction = () => {};\nvar emptyObject = {};\nvar emptyArray = [];\n\n/**\n * Safari produces very large identifiers that would cause the `touchBank` array\n * length to be so large as to crash the browser, if not normalized like this.\n * In the future the `touchBank` should use an object/map instead.\n */\nfunction normalizeIdentifier(identifier) {\n  return identifier > 20 ? identifier % 20 : identifier;\n}\n\n/**\n * Converts a native DOM event to a ResponderEvent.\n * Mouse events are transformed into fake touch events.\n */\nexport default function createResponderEvent(domEvent, responderTouchHistoryStore) {\n  var rect;\n  var propagationWasStopped = false;\n  var changedTouches;\n  var touches;\n  var domEventChangedTouches = domEvent.changedTouches;\n  var domEventType = domEvent.type;\n  var metaKey = domEvent.metaKey === true;\n  var shiftKey = domEvent.shiftKey === true;\n  var force = domEventChangedTouches && domEventChangedTouches[0].force || 0;\n  var identifier = normalizeIdentifier(domEventChangedTouches && domEventChangedTouches[0].identifier || 0);\n  var clientX = domEventChangedTouches && domEventChangedTouches[0].clientX || domEvent.clientX;\n  var clientY = domEventChangedTouches && domEventChangedTouches[0].clientY || domEvent.clientY;\n  var pageX = domEventChangedTouches && domEventChangedTouches[0].pageX || domEvent.pageX;\n  var pageY = domEventChangedTouches && domEventChangedTouches[0].pageY || domEvent.pageY;\n  var preventDefault = typeof domEvent.preventDefault === 'function' ? domEvent.preventDefault.bind(domEvent) : emptyFunction;\n  var timestamp = domEvent.timeStamp;\n  function normalizeTouches(touches) {\n    return Array.prototype.slice.call(touches).map(touch => {\n      return {\n        force: touch.force,\n        identifier: normalizeIdentifier(touch.identifier),\n        get locationX() {\n          return locationX(touch.clientX);\n        },\n        get locationY() {\n          return locationY(touch.clientY);\n        },\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        target: touch.target,\n        timestamp\n      };\n    });\n  }\n  if (domEventChangedTouches != null) {\n    changedTouches = normalizeTouches(domEventChangedTouches);\n    touches = normalizeTouches(domEvent.touches);\n  } else {\n    var emulatedTouches = [{\n      force,\n      identifier,\n      get locationX() {\n        return locationX(clientX);\n      },\n      get locationY() {\n        return locationY(clientY);\n      },\n      pageX,\n      pageY,\n      target: domEvent.target,\n      timestamp\n    }];\n    changedTouches = emulatedTouches;\n    touches = domEventType === 'mouseup' || domEventType === 'dragstart' ? emptyArray : emulatedTouches;\n  }\n  var responderEvent = {\n    bubbles: true,\n    cancelable: true,\n    // `currentTarget` is set before dispatch\n    currentTarget: null,\n    defaultPrevented: domEvent.defaultPrevented,\n    dispatchConfig: emptyObject,\n    eventPhase: domEvent.eventPhase,\n    isDefaultPrevented() {\n      return domEvent.defaultPrevented;\n    },\n    isPropagationStopped() {\n      return propagationWasStopped;\n    },\n    isTrusted: domEvent.isTrusted,\n    nativeEvent: {\n      altKey: false,\n      ctrlKey: false,\n      metaKey,\n      shiftKey,\n      changedTouches,\n      force,\n      identifier,\n      get locationX() {\n        return locationX(clientX);\n      },\n      get locationY() {\n        return locationY(clientY);\n      },\n      pageX,\n      pageY,\n      target: domEvent.target,\n      timestamp,\n      touches,\n      type: domEventType\n    },\n    persist: emptyFunction,\n    preventDefault,\n    stopPropagation() {\n      propagationWasStopped = true;\n    },\n    target: domEvent.target,\n    timeStamp: timestamp,\n    touchHistory: responderTouchHistoryStore.touchHistory\n  };\n\n  // Using getters and functions serves two purposes:\n  // 1) The value of `currentTarget` is not initially available.\n  // 2) Measuring the clientRect may cause layout jank and should only be done on-demand.\n  function locationX(x) {\n    rect = rect || getBoundingClientRect(responderEvent.currentTarget);\n    if (rect) {\n      return x - rect.left;\n    }\n  }\n  function locationY(y) {\n    rect = rect || getBoundingClientRect(responderEvent.currentTarget);\n    if (rect) {\n      return y - rect.top;\n    }\n  }\n  return responderEvent;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}