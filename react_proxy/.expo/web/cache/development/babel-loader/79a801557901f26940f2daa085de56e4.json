{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nvar TextInputState = {\n  _currentlyFocusedNode: null,\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        _UIManager.default.focus(textFieldNode);\n      }\n    }\n  },\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        _UIManager.default.blur(textFieldNode);\n      }\n    }\n  }\n};\nvar _default = TextInputState;\nexports.default = _default;","map":{"version":3,"names":["TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","UIManager","focus","blurTextInput","blur"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/modules/TextInputState/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport UIManager from '../../exports/UIManager';\n\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n    return this._currentlyFocusedNode;\n  },\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;"],"mappings":";;;;;;;AAUA;;AAOA,IAAIA,cAAc,GAAG;EAInBC,qBAAqB,EAAE,IAJJ;EASnBC,qBATmB,mCASK;IACtB,IAAIC,QAAQ,CAACC,aAAT,KAA2B,KAAKH,qBAApC,EAA2D;MACzD,KAAKA,qBAAL,GAA6B,IAA7B;IACD;;IACD,OAAO,KAAKA,qBAAZ;EACD,CAdkB;EAoBnBI,cApBmB,0BAoBJC,aApBI,EAoBW;IAC5B,IAAIA,aAAa,KAAK,IAAtB,EAA4B;MAC1B,KAAKL,qBAAL,GAA6BK,aAA7B;;MACA,IAAIH,QAAQ,CAACC,aAAT,KAA2BE,aAA/B,EAA8C;QAC5CC,kBAAA,CAAUC,KAAV,CAAgBF,aAAhB;MACD;IACF;EACF,CA3BkB;EAiCnBG,aAjCmB,yBAiCLH,aAjCK,EAiCU;IAC3B,IAAIA,aAAa,KAAK,IAAtB,EAA4B;MAC1B,KAAKL,qBAAL,GAA6B,IAA7B;;MACA,IAAIE,QAAQ,CAACC,aAAT,KAA2BE,aAA/B,EAA8C;QAC5CC,kBAAA,CAAUG,IAAV,CAAeJ,aAAf;MACD;IACF;EACF;AAxCkB,CAArB;eA0CeN,c"},"metadata":{},"sourceType":"script"}