{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n\nfunction _executeAsAnimatedBatch(id, operation) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  (0, _inherits2.default)(AnimatedValue, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedValue);\n\n  function AnimatedValue(value, config) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedValue);\n    _this = _super.call(this);\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n\n    if (config && config.useNativeDriver) {\n      _this.__makeNative();\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedValue, [{\n    key: \"__detach\",\n    value: function __detach() {\n      var _this2 = this;\n\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n          _this2._value = value - _this2._offset;\n        });\n      }\n\n      this.stopAnimation();\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedValue.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._value + this._offset;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _this3 = this;\n\n      if (this._animation) {\n        this._animation.stop();\n\n        this._animation = null;\n      }\n\n      this._updateValue(value, !this.__isNative);\n\n      if (this.__isNative) {\n        _executeAsAnimatedBatch(this.__getNativeTag().toString(), function () {\n          return NativeAnimatedAPI.setAnimatedNodeValue(_this3.__getNativeTag(), value);\n        });\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this._offset = offset;\n\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n\n      if (callback) {\n        if (this.__isNative) {\n          NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n        } else {\n          callback(this.__getValue());\n        }\n      }\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n      }\n    }\n  }, {\n    key: \"__onAnimatedValueUpdateReceived\",\n    value: function __onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new _AnimatedInterpolation.default(this, config);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(animation, callback) {\n      var _this4 = this;\n\n      var handle = null;\n\n      if (animation.__isInteraction) {\n        handle = _InteractionManager.default.createInteractionHandle();\n      }\n\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, function (value) {\n        _this4._updateValue(value, true);\n      }, function (result) {\n        _this4._animation = null;\n\n        if (handle !== null) {\n          _InteractionManager.default.clearInteractionHandle(handle);\n        }\n\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n  }, {\n    key: \"stopTracking\",\n    value: function stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n  }, {\n    key: \"track\",\n    value: function track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n      this._tracking && this._tracking.update();\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n\n      this._value = value;\n\n      if (flush) {\n        _flush(this);\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedValue.prototype), \"__callListeners\", this).call(this, this.__getValue());\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'value',\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }]);\n  return AnimatedValue;\n}(_AnimatedWithChildren2.default);\n\nvar _default = AnimatedValue;\nexports.default = _default;","map":{"version":3,"names":["NativeAnimatedAPI","NativeAnimatedHelper","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","_executeAsAnimatedBatch","id","operation","setWaitingForIdentifier","unsetWaitingForIdentifier","AnimatedValue","value","config","Error","_startingValue","_value","_offset","_animation","useNativeDriver","__makeNative","__isNative","getValue","__getNativeTag","stopAnimation","stop","_updateValue","toString","setAnimatedNodeValue","offset","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","callback","stopTracking","__getValue","AnimatedInterpolation","animation","handle","__isInteraction","InteractionManager","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","__detach","tracking","flush","undefined","type","AnimatedWithChildren"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValue.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport InteractionManager from '../../../../exports/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n  function findAnimatedStyles(node) {\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the error\n     * delete this comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  // $FlowFixMe[prop-missing]\n  animatedStyles.forEach(animatedStyle => animatedStyle.update());\n}\n\n/**\n * Some operations are executed only on batch end, which is _mostly_ scheduled when\n * Animated component props change. For some of the changes which require immediate execution\n * (e.g. setValue), we create a separate batch in case none is scheduled.\n */\nfunction _executeAsAnimatedBatch(id, operation) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue\n */\nclass AnimatedValue extends AnimatedWithChildren {\n  constructor(value, config) {\n    super();\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value - this._offset;\n      });\n    }\n    this.stopAnimation();\n    super.__detach();\n  }\n  __getValue() {\n    return this._value + this._offset;\n  }\n\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setvalue\n   */\n  setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation = null;\n    }\n    this._updateValue(value, !this.__isNative /* don't perform a flush for natively driven values */);\n\n    if (this.__isNative) {\n      _executeAsAnimatedBatch(this.__getNativeTag().toString(), () => NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value));\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setoffset\n   */\n  setOffset(offset) {\n    this._offset = offset;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n   */\n  flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#extractoffset\n   */\n  extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#stopanimation\n   */\n  stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    if (callback) {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n      } else {\n        callback(this.__getValue());\n      }\n    }\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#resetanimation\n   */\n  resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n    }\n  }\n  __onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false /*flush*/);\n  }\n\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#animate\n   */\n  animate(animation, callback) {\n    var handle = null;\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, value => {\n      // Natively driven animations will never call into that callback\n      this._updateValue(value, true /* flush */);\n    }, result => {\n      this._animation = null;\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n    // Make sure that the tracking animation starts executing\n    this._tracking && this._tracking.update();\n  }\n  _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._value = value;\n    if (flush) {\n      _flush(this);\n    }\n    super.__callListeners(this.__getValue());\n  }\n  __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  }\n}\nexport default AnimatedValue;"],"mappings":"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"},"metadata":{},"sourceType":"script"}