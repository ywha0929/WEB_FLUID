{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar ViewabilityHelper = function () {\n  function ViewabilityHelper(config) {\n    (0, _classCallCheck2.default)(this, ViewabilityHelper);\n\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  (0, _createClass2.default)(ViewabilityHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._timers.forEach(clearTimeout);\n    }\n  }, {\n    key: \"computeViewableItems\",\n    value: function computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n      var itemCount = props.getItemCount(props.data);\n      var _this$_config = this._config,\n          itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n          viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n      var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n      (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n      var viewableIndices = [];\n\n      if (itemCount === 0) {\n        return viewableIndices;\n      }\n\n      var firstVisible = -1;\n\n      var _ref = renderRange || {\n        first: 0,\n        last: itemCount - 1\n      },\n          first = _ref.first,\n          last = _ref.last;\n\n      if (last >= itemCount) {\n        console.warn('Invalid render range computing viewability ' + JSON.stringify({\n          renderRange: renderRange,\n          itemCount: itemCount\n        }));\n        return [];\n      }\n\n      for (var idx = first; idx <= last; idx++) {\n        var metrics = getFrameMetrics(idx, props);\n\n        if (!metrics) {\n          continue;\n        }\n\n        var top = metrics.offset - scrollOffset;\n        var bottom = top + metrics.length;\n\n        if (top < viewportHeight && bottom > 0) {\n          firstVisible = idx;\n\n          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n            viewableIndices.push(idx);\n          }\n        } else if (firstVisible >= 0) {\n          break;\n        }\n      }\n\n      return viewableIndices;\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate(props, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n      var _this = this;\n\n      var itemCount = props.getItemCount(props.data);\n\n      if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0, props)) {\n        return;\n      }\n\n      var viewableIndices = [];\n\n      if (itemCount) {\n        viewableIndices = this.computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n      }\n\n      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n        return v === viewableIndices[ii];\n      })) {\n        return;\n      }\n\n      this._viewableIndices = viewableIndices;\n\n      if (this._config.minimumViewTime) {\n        var handle = setTimeout(function () {\n          _this._timers.delete(handle);\n\n          _this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n        }, this._config.minimumViewTime);\n\n        this._timers.add(handle);\n      } else {\n        this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n      }\n    }\n  }, {\n    key: \"resetViewableIndices\",\n    value: function resetViewableIndices() {\n      this._viewableIndices = [];\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._hasInteracted = true;\n    }\n  }, {\n    key: \"_onUpdateSync\",\n    value: function _onUpdateSync(props, viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n      var _this2 = this;\n\n      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n        return _this2._viewableIndices.includes(ii);\n      });\n      var prevItems = this._viewableItems;\n      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n        var viewable = createViewToken(ii, true, props);\n        return [viewable.key, viewable];\n      }));\n      var changed = [];\n\n      for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(nextItems), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n            key = _step$value[0],\n            viewable = _step$value[1];\n\n        if (!prevItems.has(key)) {\n          changed.push(viewable);\n        }\n      }\n\n      for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n            _key = _step2$value[0],\n            _viewable = _step2$value[1];\n\n        if (!nextItems.has(_key)) {\n          changed.push((0, _objectSpread2.default)((0, _objectSpread2.default)({}, _viewable), {}, {\n            isViewable: false\n          }));\n        }\n      }\n\n      if (changed.length > 0) {\n        this._viewableItems = nextItems;\n        onViewableItemsChanged({\n          viewableItems: Array.from(nextItems.values()),\n          changed: changed,\n          viewabilityConfig: this._config\n        });\n      }\n    }\n  }]);\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nvar _default = ViewabilityHelper;\nexports.default = _default;","map":{"version":3,"names":["ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","forEach","clearTimeout","props","scrollOffset","viewportHeight","getFrameMetrics","renderRange","itemCount","getItemCount","data","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","invariant","viewableIndices","firstVisible","_ref","first","last","console","warn","JSON","stringify","idx","metrics","top","offset","bottom","length","_isViewable","push","createViewToken","onViewableItemsChanged","waitForInteraction","computeViewableItems","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","viewableIndicesToCheck","filter","includes","prevItems","nextItems","map","viewable","key","changed","_iterator","_createForOfIteratorHelperLoose","_step","done","_step$value","value","has","_iterator2","_step2","_step2$value","_key","_viewable","_objectSpread","isViewable","viewableItems","Array","from","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nclass ViewabilityHelper {\n  constructor(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n  dispose() {\n    /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.63 was deployed. To see\n     * the error delete this comment and run Flow. */\n    this._timers.forEach(clearTimeout);\n  }\n\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics,\n  // Optional optimization to reduce the scan size\n  renderRange) {\n    var itemCount = props.getItemCount(props.data);\n    var _this$_config = this._config,\n      itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n      viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n    var firstVisible = -1;\n    var _ref = renderRange || {\n        first: 0,\n        last: itemCount - 1\n      },\n      first = _ref.first,\n      last = _ref.last;\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange,\n        itemCount\n      }));\n      return [];\n    }\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx, props);\n      if (!metrics) {\n        continue;\n      }\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n    return viewableIndices;\n  }\n\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  onUpdate(props, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged,\n  // Optional optimization to reduce the scan size\n  renderRange) {\n    var itemCount = props.getItemCount(props.data);\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0, props)) {\n      return;\n    }\n    var viewableIndices = [];\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every((v, ii) => v === viewableIndices[ii])) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n    this._viewableIndices = viewableIndices;\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(() => {\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        this._timers.delete(handle);\n        this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.63 was deployed. To see\n       * the error delete this comment and run Flow. */\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  recordInteraction() {\n    this._hasInteracted = true;\n  }\n  _onUpdateSync(props, viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii => this._viewableIndices.includes(ii));\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(ii => {\n      var viewable = createViewToken(ii, true, props);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        key = _step$value[0],\n        viewable = _step$value[1];\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n        _key = _step2$value[0],\n        _viewable = _step2$value[1];\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n          isViewable: false\n        }));\n      }\n    }\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config\n      });\n    }\n  }\n}\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\nexport default ViewabilityHelper;"],"mappings":"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"},"metadata":{},"sourceType":"script"}