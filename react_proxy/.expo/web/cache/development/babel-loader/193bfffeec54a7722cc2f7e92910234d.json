{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLocaleRTL = isLocaleRTL;\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'far', 'glk', 'he', 'iw', 'khw', 'ks', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\nvar cache = new Map();\n\nfunction isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n\n  var isRTL = false;\n\n  if (Intl.Locale) {\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n\n  cache.set(locale, isRTL);\n  return isRTL;\n}","map":{"version":3,"names":["rtlScripts","Set","rtlLangs","cache","Map","isLocaleRTL","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/modules/useLocale/isLocaleRTL.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae',\n// Avestan\n'ar',\n// Arabic\n'arc',\n// Aramaic\n'bcc',\n// Southern Balochi\n'bqi',\n// Bakthiari\n'ckb',\n// Sorani\n'dv',\n// Dhivehi\n'fa', 'far',\n// Persian\n'glk',\n// Gilaki\n'he', 'iw',\n// Hebrew\n'khw',\n// Khowar\n'ks',\n// Kashmiri\n'ku',\n// Kurdish\n'mzn',\n// Mazanderani\n'nqo',\n// N'Ko\n'pnb',\n// Western Punjabi\n'ps',\n// Pashto\n'sd',\n// Sindhi\n'ug',\n// Uyghur\n'ur',\n// Urdu\n'yi' // Yiddish\n]);\n\nvar cache = new Map();\n\n/**\n * Determine the writing direction of a locale\n */\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  // $FlowFixMe\n  if (Intl.Locale) {\n    // $FlowFixMe\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    // Fallback to inferring from language\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}"],"mappings":";;;;AASA,IAAIA,UAAU,GAAG,IAAIC,GAAJ,CAAQ,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,CAAR,CAAjB;AACA,IAAIC,QAAQ,GAAG,IAAID,GAAJ,CAAQ,CAAC,IAAD,EAEvB,IAFuB,EAIvB,KAJuB,EAMvB,KANuB,EAQvB,KARuB,EAUvB,KAVuB,EAYvB,IAZuB,EAcvB,IAduB,EAcjB,KAdiB,EAgBvB,KAhBuB,EAkBvB,IAlBuB,EAkBjB,IAlBiB,EAoBvB,KApBuB,EAsBvB,IAtBuB,EAwBvB,IAxBuB,EA0BvB,KA1BuB,EA4BvB,KA5BuB,EA8BvB,KA9BuB,EAgCvB,IAhCuB,EAkCvB,IAlCuB,EAoCvB,IApCuB,EAsCvB,IAtCuB,EAwCvB,IAxCuB,CAAR,CAAf;AA2CA,IAAIE,KAAK,GAAG,IAAIC,GAAJ,EAAZ;;AAKO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAClC,IAAIC,SAAS,GAAGJ,KAAK,CAACK,GAAN,CAAUF,MAAV,CAAhB;;EACA,IAAIC,SAAJ,EAAe;IACb,OAAOA,SAAP;EACD;;EACD,IAAIE,KAAK,GAAG,KAAZ;;EAEA,IAAIC,IAAI,CAACC,MAAT,EAAiB;IAEf,IAAIC,MAAM,GAAG,IAAIF,IAAI,CAACC,MAAT,CAAgBL,MAAhB,EAAwBO,QAAxB,GAAmCD,MAAhD;IACAH,KAAK,GAAGT,UAAU,CAACc,GAAX,CAAeF,MAAf,CAAR;EACD,CAJD,MAIO;IAEL,IAAIG,IAAI,GAAGT,MAAM,CAACU,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX;IACAP,KAAK,GAAGP,QAAQ,CAACY,GAAT,CAAaC,IAAb,CAAR;EACD;;EACDZ,KAAK,CAACc,GAAN,CAAUX,MAAV,EAAkBG,KAAlB;EACA,OAAOA,KAAP;AACD"},"metadata":{},"sourceType":"script"}