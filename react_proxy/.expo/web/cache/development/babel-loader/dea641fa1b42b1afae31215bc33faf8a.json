{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _Animation2 = _interopRequireDefault(require(\"./Animation\"));\n\nvar _SpringConfig = _interopRequireDefault(require(\"../SpringConfig\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _NativeAnimatedHelper = require(\"../NativeAnimatedHelper\");\n\nvar _AnimatedColor = _interopRequireDefault(require(\"../nodes/AnimatedColor\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SpringAnimation = function (_Animation) {\n  (0, _inherits2.default)(SpringAnimation, _Animation);\n\n  var _super = _createSuper(SpringAnimation);\n\n  function SpringAnimation(config) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SpringAnimation);\n\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    _this = _super.call(this);\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = (0, _NativeAnimatedHelper.shouldUseNativeDriver)(config);\n    _this._platformConfig = config.platformConfig;\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      (0, _invariant.default)(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      (0, _invariant.default)(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n\n      var springConfig = _SpringConfig.default.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      var _springConfig = _SpringConfig.default.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    (0, _invariant.default)(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    (0, _invariant.default)(_this._damping > 0, 'Damping value must be greater than 0');\n    (0, _invariant.default)(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  (0, _createClass2.default)(SpringAnimation, [{\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      var _this$_initialVelocit;\n\n      return {\n        type: 'spring',\n        overshootClamping: this._overshootClamping,\n        restDisplacementThreshold: this._restDisplacementThreshold,\n        restSpeedThreshold: this._restSpeedThreshold,\n        stiffness: this._stiffness,\n        damping: this._damping,\n        mass: this._mass,\n        initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n        toValue: this._toValue,\n        iterations: this.__iterations,\n        platformConfig: this._platformConfig\n      };\n    }\n  }, {\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n      var _this2 = this;\n\n      this.__active = true;\n      this._startPosition = fromValue;\n      this._lastPosition = this._startPosition;\n      this._onUpdate = onUpdate;\n      this.__onEnd = onEnd;\n      this._lastTime = Date.now();\n      this._frameTime = 0.0;\n\n      if (previousAnimation instanceof SpringAnimation) {\n        var internalState = previousAnimation.getInternalState();\n        this._lastPosition = internalState.lastPosition;\n        this._lastVelocity = internalState.lastVelocity;\n        this._initialVelocity = this._lastVelocity;\n        this._lastTime = internalState.lastTime;\n      }\n\n      var start = function start() {\n        if (_this2._useNativeDriver) {\n          _this2.__startNativeAnimation(animatedValue);\n        } else {\n          _this2.onUpdate();\n        }\n      };\n\n      if (this._delay) {\n        this._timeout = setTimeout(start, this._delay);\n      } else {\n        start();\n      }\n    }\n  }, {\n    key: \"getInternalState\",\n    value: function getInternalState() {\n      return {\n        lastPosition: this._lastPosition,\n        lastVelocity: this._lastVelocity,\n        lastTime: this._lastTime\n      };\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate() {\n      var MAX_STEPS = 64;\n      var now = Date.now();\n\n      if (now > this._lastTime + MAX_STEPS) {\n        now = this._lastTime + MAX_STEPS;\n      }\n\n      var deltaTime = (now - this._lastTime) / 1000;\n      this._frameTime += deltaTime;\n      var c = this._damping;\n      var m = this._mass;\n      var k = this._stiffness;\n      var v0 = -this._initialVelocity;\n      var zeta = c / (2 * Math.sqrt(k * m));\n      var omega0 = Math.sqrt(k / m);\n      var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n      var x0 = this._toValue - this._startPosition;\n      var position = 0.0;\n      var velocity = 0.0;\n      var t = this._frameTime;\n\n      if (zeta < 1) {\n        var envelope = Math.exp(-zeta * omega0 * t);\n        position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n        velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n      } else {\n        var _envelope = Math.exp(-omega0 * t);\n\n        position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n        velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n      }\n\n      this._lastTime = now;\n      this._lastPosition = position;\n      this._lastVelocity = velocity;\n\n      this._onUpdate(position);\n\n      if (!this.__active) {\n        return;\n      }\n\n      var isOvershooting = false;\n\n      if (this._overshootClamping && this._stiffness !== 0) {\n        if (this._startPosition < this._toValue) {\n          isOvershooting = position > this._toValue;\n        } else {\n          isOvershooting = position < this._toValue;\n        }\n      }\n\n      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n      var isDisplacement = true;\n\n      if (this._stiffness !== 0) {\n        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n      }\n\n      if (isOvershooting || isVelocity && isDisplacement) {\n        if (this._stiffness !== 0) {\n          this._lastPosition = this._toValue;\n          this._lastVelocity = 0;\n\n          this._onUpdate(this._toValue);\n        }\n\n        this.__debouncedOnEnd({\n          finished: true\n        });\n\n        return;\n      }\n\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(SpringAnimation.prototype), \"stop\", this).call(this);\n      this.__active = false;\n      clearTimeout(this._timeout);\n      global.cancelAnimationFrame(this._animationFrame);\n\n      this.__debouncedOnEnd({\n        finished: false\n      });\n    }\n  }]);\n  return SpringAnimation;\n}(_Animation2.default);\n\nvar _default = SpringAnimation;\nexports.default = _default;","map":{"version":3,"names":["SpringAnimation","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","shouldUseNativeDriver","_platformConfig","platformConfig","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","invariant","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","SpringConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","_springConfig","fromOrigamiTensionAndFriction","_this$_initialVelocit","type","initialVelocity","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","start","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","clearTimeout","global","cancelAnimationFrame","Animation"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nclass SpringAnimation extends Animation {\n  constructor(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n    super();\n    this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    this._toValue = config.toValue;\n    this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this._platformConfig = config.platformConfig;\n    this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !this._useNativeDriver;\n    this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n      this._stiffness = _springConfig.stiffness;\n      this._damping = _springConfig.damping;\n      this._mass = 1;\n    }\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n  __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig\n    };\n  }\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n    var start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n  getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    var isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    var isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n      this.__debouncedOnEnd({\n        finished: true\n      });\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n  stop() {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  }\n}\nexport default SpringAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"script"}