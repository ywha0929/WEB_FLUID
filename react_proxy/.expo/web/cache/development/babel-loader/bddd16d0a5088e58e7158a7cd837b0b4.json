{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWindowDimensions;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _react = require(\"react\");\n\nfunction useWindowDimensions() {\n  var _useState = (0, _react.useState)(function () {\n    return _Dimensions.default.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  (0, _react.useEffect)(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    _Dimensions.default.addEventListener('change', handleChange);\n\n    setDims(_Dimensions.default.get('window'));\n    return function () {\n      _Dimensions.default.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}","map":{"version":3,"names":["useWindowDimensions","_useState","useState","Dimensions","get","dims","setDims","useEffect","handleChange","_ref","window","addEventListener","removeEventListener"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/exports/useWindowDimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(() => Dimensions.get('window')),\n    dims = _useState[0],\n    setDims = _useState[1];\n  useEffect(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n      if (window != null) {\n        setDims(window);\n      }\n    }\n    Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"],"mappings":"AAUA;;;;;;;;;AAEA;;AACA;;AACe,SAASA,mBAAT,GAA+B;EAC5C,IAAIC,SAAS,GAAG,IAAAC,eAAA,EAAS;IAAA,OAAMC,mBAAA,CAAWC,GAAX,CAAe,QAAf,CAAN;EAAA,CAAT,CAAhB;EAAA,IACEC,IAAI,GAAGJ,SAAS,CAAC,CAAD,CADlB;EAAA,IAEEK,OAAO,GAAGL,SAAS,CAAC,CAAD,CAFrB;;EAGA,IAAAM,gBAAA,EAAU,YAAM;IACd,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;MAC1B,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;MACA,IAAIA,MAAM,IAAI,IAAd,EAAoB;QAClBJ,OAAO,CAACI,MAAD,CAAP;MACD;IACF;;IACDP,mBAAA,CAAWQ,gBAAX,CAA4B,QAA5B,EAAsCH,YAAtC;;IAIAF,OAAO,CAACH,mBAAA,CAAWC,GAAX,CAAe,QAAf,CAAD,CAAP;IACA,OAAO,YAAM;MACXD,mBAAA,CAAWS,mBAAX,CAA+B,QAA/B,EAAyCJ,YAAzC;IACD,CAFD;EAGD,CAfD,EAeG,EAfH;EAgBA,OAAOH,IAAP;AACD"},"metadata":{},"sourceType":"script"}