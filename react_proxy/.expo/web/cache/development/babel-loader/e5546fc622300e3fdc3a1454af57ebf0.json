{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warnOnce = warnOnce;\nvar warnedKeys = {};\n\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (warnedKeys[key]) {\n      return;\n    }\n\n    console.warn(message);\n    warnedKeys[key] = true;\n  }\n}","map":{"version":3,"names":["warnedKeys","warnOnce","key","message","process","env","NODE_ENV","console","warn"],"sources":["/home/ywha/WEB_FLUID/react_proxy/node_modules/react-native-web/dist/modules/warnOnce/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar warnedKeys = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nexport function warnOnce(key, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (warnedKeys[key]) {\n      return;\n    }\n    console.warn(message);\n    warnedKeys[key] = true;\n  }\n}"],"mappings":";;;;AASA,IAAIA,UAAU,GAAG,EAAjB;;AASO,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;EACrC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAIN,UAAU,CAACE,GAAD,CAAd,EAAqB;MACnB;IACD;;IACDK,OAAO,CAACC,IAAR,CAAaL,OAAb;IACAH,UAAU,CAACE,GAAD,CAAV,GAAkB,IAAlB;EACD;AACF"},"metadata":{},"sourceType":"script"}