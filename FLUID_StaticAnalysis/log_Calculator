> Task :compileJava UP-TO-DATE
> Task :processResources NO-SOURCE
> Task :classes UP-TO-DATE

> Task :run
preparing listTargetMethod ... 
adding method to listTargetMethod : <android.widget.TextView: void setText(java.lang.CharSequence)>
adding method to listTargetMethod : <android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
adding method to listTargetMethod : <android.widget.TextView: void setText(char[],int,int)>
adding method to listTargetMethod : <android.widget.TextView: void setText(int)>
adding method to listTargetMethod : <android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageResource(int)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageURI(android.net.Uri)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
adding method to listTargetMethod : <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
preparing listTargetMethod ... done
---------------------------------------------------------------------

preparing listTargetClass ... 
adding class to to listTargetClass : r1.a
adding class to to listTargetClass : androidx.appcompat.widget.ContentFrameLayout
adding class to to listTargetClass : i.c$c
adding class to to listTargetClass : com.simplemobiletools.commons.views.RenamePatternTab
adding class to to listTargetClass : androidx.constraintlayout.widget.Barrier
adding class to to listTargetClass : com.simplemobiletools.commons.views.PinTab
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyAppCompatCheckbox
adding class to to listTargetClass : androidx.appcompat.widget.ViewStubCompat
adding class to to listTargetClass : com.andrognito.patternlockview.PatternLockView
adding class to to listTargetClass : androidx.appcompat.view.menu.ListMenuItemView
adding class to to listTargetClass : com.simplemobiletools.commons.views.MySeekBar
adding class to to listTargetClass : androidx.appcompat.app.AlertController$RecycleListView
adding class to to listTargetClass : com.google.android.material.timepicker.ChipTextInputComboView
adding class to to listTargetClass : androidx.appcompat.widget.DialogTitle
adding class to to listTargetClass : androidx.recyclerview.widget.RecyclerView
adding class to to listTargetClass : com.google.android.material.snackbar.Snackbar$SnackbarLayout
adding class to to listTargetClass : n.a
adding class to to listTargetClass : com.google.android.material.internal.BaselineLayout
adding class to to listTargetClass : com.google.android.material.chip.Chip
adding class to to listTargetClass : androidx.appcompat.widget.c$d
adding class to to listTargetClass : androidx.appcompat.widget.a0
adding class to to listTargetClass : com.google.android.material.internal.NavigationMenuView
adding class to to listTargetClass : androidx.appcompat.widget.c0
adding class to to listTargetClass : androidx.appcompat.widget.AlertDialogLayout
adding class to to listTargetClass : com.google.android.material.internal.NavigationMenuItemView
adding class to to listTargetClass : androidx.appcompat.widget.g0
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyTextView
adding class to to listTargetClass : androidx.appcompat.widget.j0
adding class to to listTargetClass : com.google.android.material.timepicker.ClockFaceView
adding class to to listTargetClass : com.google.android.material.textview.MaterialTextView
adding class to to listTargetClass : androidx.appcompat.widget.q0
adding class to to listTargetClass : androidx.appcompat.widget.q0$d
adding class to to listTargetClass : androidx.appcompat.widget.s0
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyTextInputLayout
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyRecyclerView
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyDialogViewPager
adding class to to listTargetClass : com.google.android.material.appbar.MaterialToolbar
adding class to to listTargetClass : com.google.android.material.timepicker.TimePickerView
adding class to to listTargetClass : com.google.android.material.snackbar.d
adding class to to listTargetClass : androidx.coordinatorlayout.widget.CoordinatorLayout
adding class to to listTargetClass : androidx.appcompat.widget.ActionMenuView
adding class to to listTargetClass : androidx.appcompat.widget.m0$a
adding class to to listTargetClass : androidx.constraintlayout.motion.widget.h
adding class to to listTargetClass : androidx.constraintlayout.motion.widget.j
adding class to to listTargetClass : androidx.appcompat.widget.FitWindowsFrameLayout
adding class to to listTargetClass : androidx.appcompat.widget.FitWindowsLinearLayout
adding class to to listTargetClass : com.google.android.material.datepicker.MaterialCalendarGridView
adding class to to listTargetClass : com.google.android.material.textfield.TextInputLayout
adding class to to listTargetClass : p1.a
adding class to to listTargetClass : com.simplemobiletools.commons.views.PatternTab
adding class to to listTargetClass : com.simplemobiletools.commons.views.LineColorPicker
adding class to to listTargetClass : com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller
adding class to to listTargetClass : com.google.android.material.timepicker.ClockHandView
adding class to to listTargetClass : androidx.constraintlayout.widget.k
adding class to to listTargetClass : androidx.constraintlayout.widget.g
adding class to to listTargetClass : androidx.constraintlayout.widget.e
adding class to to listTargetClass : androidx.constraintlayout.widget.b
adding class to to listTargetClass : com.google.android.material.textfield.TextInputEditText
adding class to to listTargetClass : com.google.android.material.button.MaterialButton
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyFloatingActionButton
adding class to to listTargetClass : com.google.android.material.internal.m
adding class to to listTargetClass : i1.b
adding class to to listTargetClass : com.google.android.material.internal.d
adding class to to listTargetClass : com.google.android.material.internal.c
adding class to to listTargetClass : com.google.android.material.card.a
adding class to to listTargetClass : com.google.android.material.bottomappbar.BottomAppBar
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyScrollView
adding class to to listTargetClass : androidx.constraintlayout.widget.ConstraintLayout
adding class to to listTargetClass : com.google.android.material.tabs.TabItem
adding class to to listTargetClass : androidx.viewpager.widget.b
adding class to to listTargetClass : com.google.android.material.timepicker.b
adding class to to listTargetClass : androidx.constraintlayout.helper.widget.Flow
adding class to to listTargetClass : androidx.appcompat.widget.ActionBarContextView
adding class to to listTargetClass : com.google.android.material.tabs.TabLayout$i
adding class to to listTargetClass : com.google.android.material.tabs.TabLayout$f
adding class to to listTargetClass : androidx.fragment.app.h
adding class to to listTargetClass : androidx.core.widget.NestedScrollView
adding class to to listTargetClass : com.google.android.material.tabs.TabLayout
adding class to to listTargetClass : androidx.appcompat.widget.ActivityChooserView$InnerLayout
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyCompatRadioButton
adding class to to listTargetClass : com.google.android.material.chip.ChipGroup
adding class to to listTargetClass : com.simplemobiletools.commons.views.FingerprintTab
adding class to to listTargetClass : androidx.constraintlayout.widget.Guideline
adding class to to listTargetClass : q1.b
adding class to to listTargetClass : androidx.appcompat.widget.ButtonBarLayout
adding class to to listTargetClass : androidx.appcompat.view.menu.ExpandedMenuView
adding class to to listTargetClass : com.google.android.material.snackbar.SnackbarContentLayout
adding class to to listTargetClass : androidx.appcompat.widget.SearchView
adding class to to listTargetClass : com.simplemobiletools.commons.views.BiometricIdTab
adding class to to listTargetClass : com.google.android.material.internal.CheckableImageButton
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyButton
adding class to to listTargetClass : com.google.android.material.floatingactionbutton.FloatingActionButton
adding class to to listTargetClass : com.simplemobiletools.commons.views.Breadcrumbs
adding class to to listTargetClass : androidx.appcompat.widget.SearchView$SearchAutoComplete
adding class to to listTargetClass : com.simplemobiletools.commons.views.ColorPickerSquare
adding class to to listTargetClass : com.google.android.material.button.MaterialButtonToggleGroup
adding class to to listTargetClass : androidx.appcompat.widget.ActionBarOverlayLayout
adding class to to listTargetClass : com.simplemobiletools.commons.views.RenameSimpleTab
adding class to to listTargetClass : x2.h
adding class to to listTargetClass : x2.g
adding class to to listTargetClass : androidx.appcompat.widget.a
adding class to to listTargetClass : x2.f
adding class to to listTargetClass : androidx.appcompat.widget.d
adding class to to listTargetClass : androidx.appcompat.widget.h
adding class to to listTargetClass : androidx.appcompat.widget.f
adding class to to listTargetClass : androidx.appcompat.widget.g
adding class to to listTargetClass : androidx.appcompat.widget.m
adding class to to listTargetClass : androidx.appcompat.widget.k
adding class to to listTargetClass : androidx.appcompat.widget.p
adding class to to listTargetClass : androidx.appcompat.widget.o
adding class to to listTargetClass : androidx.appcompat.widget.t
adding class to to listTargetClass : androidx.appcompat.widget.s
adding class to to listTargetClass : androidx.appcompat.widget.x
adding class to to listTargetClass : androidx.appcompat.widget.v
adding class to to listTargetClass : b1.z$a
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyEditText
adding class to to listTargetClass : androidx.appcompat.widget.Toolbar
adding class to to listTargetClass : androidx.appcompat.app.e$s
adding class to to listTargetClass : y1.a
adding class to to listTargetClass : com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
adding class to to listTargetClass : f2.a
adding class to to listTargetClass : com.google.android.material.appbar.AppBarLayout
adding class to to listTargetClass : androidx.appcompat.widget.ActionBarContainer
adding class to to listTargetClass : com.simplemobiletools.commons.views.MyViewPager
adding class to to listTargetClass : f2.b
adding class to to listTargetClass : com.google.android.material.textfield.g
adding class to to listTargetClass : androidx.appcompat.view.menu.ActionMenuItemView
preparing listTargetClass ... done
---------------------------------------------------------------------

CallGraph constructed 
-------------------------
-------------------------
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
Thread done
thread Execution complete
r1.a
------------------------------------------------------

<r1.a: void a()>
androidx.appcompat.widget.ContentFrameLayout
null to <r1.a: void a()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
------------------------------------------------------
i.c$c
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<i.c$c: android.view.View a()>
null to <i.c$c: android.view.View a()>
UI update?

<r1.a: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()>
------------------------------------------------------
null to <r1.a: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()>
UI update?
com.simplemobiletools.commons.views.RenamePatternTab

<r1.a: int getCircularRevealScrimColor()>
null to <r1.a: int getCircularRevealScrimColor()>
UI update?

<r1.a: boolean isOpaque()>
null to <r1.a: boolean isOpaque()>
UI update?

<r1.a: q1.d$e getRevealInfo()>
null to <r1.a: q1.d$e getRevealInfo()>
<r1.a: q1.d$e getRevealInfo()> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<r1.a: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
null to <r1.a: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
UI update?

<r1.a: void setCircularRevealScrimColor(int)>
null to <r1.a: void setCircularRevealScrimColor(int)>
<r1.a: void setCircularRevealScrimColor(int)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<r1.a: void setRevealInfo(q1.d$e)>
null to <r1.a: void setRevealInfo(q1.d$e)>
<r1.a: void setRevealInfo(q1.d$e)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setActivity(q2.o)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setActivity(q2.o)>
UI update?

<r1.a: void b()>
------------------------------------------------------
null to <r1.a: void b()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
androidx.constraintlayout.widget.Barrier
null to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void a(android.graphics.Rect)>
null to <androidx.appcompat.widget.ContentFrameLayout: void a(android.graphics.Rect)>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)>
null to <androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)>
<androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)> to <android.widget.FrameLayout: void requestLayout()>
<androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.appcompat.widget.ContentFrameLayout: void b(int,int,int,int)> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.Barrier: int getMargin()>
null to <androidx.constraintlayout.widget.Barrier: int getMargin()>
<androidx.constraintlayout.widget.Barrier: int getMargin()> to <s.a: int w1()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()>
null to <androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()>
UI update?

<androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)>
null to <androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)>
<androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)> to <s.a: void z1(boolean)>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$a)>
null to <androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$a)>
UI update?

<i.c$c: void <init>(android.view.View)>
null to <i.c$c: void <init>(android.view.View)>
<i.c$c: void <init>(android.view.View)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.FrameLayout: void addView(android.view.View)>
<i.c$c: void <init>(android.view.View)> to <android.widget.FrameLayout: void <init>(android.content.Context)>
<i.c$c: void <init>(android.view.View)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.ImageButton: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.ImageView: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.Spinner: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.view.View: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.view.ViewGroup: android.content.Context getContext()>
<i.c$c: void <init>(android.view.View)> to <android.widget.TextView: android.content.Context getContext()>
UI update?

<r1.a: void draw(android.graphics.Canvas)>
null to <r1.a: void draw(android.graphics.Canvas)>
<r1.a: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: void draw(android.graphics.Canvas)>
UI update?

<i.c$c: void c()>
------------------------------------------------------
null to <i.c$c: void c()>
UI update?
com.simplemobiletools.commons.views.PinTab

<i.c$c: void f()>
null to <i.c$c: void f()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View a(int)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: android.view.View a(int)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: int getCurrentIncrementalNumber()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: int getCurrentIncrementalNumber()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: q2.o getActivity()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: q2.o getActivity()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: boolean getIgnoreClicks()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: boolean getIgnoreClicks()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: int getNumbersCnt()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: int getNumbersCnt()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: java.util.ArrayList getPaths()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: java.util.ArrayList getPaths()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void onFinishInflate()>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: boolean getStopLooping()>
null to <com.simplemobiletools.commons.views.RenamePatternTab: boolean getStopLooping()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)>
null to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setCurrentIncrementalNumber(int)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setCurrentIncrementalNumber(int)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setIgnoreClicks(boolean)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setIgnoreClicks(boolean)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setNumbersCnt(int)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setNumbersCnt(int)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setPaths(java.util.ArrayList)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setPaths(java.util.ArrayList)>
UI update?

<com.simplemobiletools.commons.views.RenamePatternTab: void setStopLooping(boolean)>
null to <com.simplemobiletools.commons.views.RenamePatternTab: void setStopLooping(boolean)>
UI update?

<androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.Barrier: void u(s.e,int,boolean)>
null to <androidx.constraintlayout.widget.Barrier: void u(s.e,int,boolean)>
UI update?

<androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()>
null to <androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()>
<androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()> to <s.a: boolean u1()>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()>
null to <androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()>
<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()> to <android.util.TypedValue: void <init>()>
UI update?

<androidx.constraintlayout.widget.Barrier: int getType()>
null to <androidx.constraintlayout.widget.Barrier: int getType()>
UI update?

<androidx.constraintlayout.widget.Barrier: void o(s.e,boolean)>
null to <androidx.constraintlayout.widget.Barrier: void o(s.e,boolean)>
UI update?

<androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.widget.Barrier: void setDpMargin(int)>
null to <androidx.constraintlayout.widget.Barrier: void setDpMargin(int)>
UI update?

<androidx.constraintlayout.widget.Barrier: void setMargin(int)>
null to <androidx.constraintlayout.widget.Barrier: void setMargin(int)>
<androidx.constraintlayout.widget.Barrier: void setMargin(int)> to <s.a: void B1(int)>
UI update?

<androidx.constraintlayout.widget.Barrier: void setType(int)>
null to <androidx.constraintlayout.widget.Barrier: void setType(int)>
UI update?

<com.simplemobiletools.commons.views.PinTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.PinTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()>
null to <com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.math.BigInteger: void <clinit>()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.StringBuilder: java.lang.String toString()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.StringBuilder: void <init>()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.math.BigInteger: void <init>(int,byte[])>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <k3.p: void <clinit>()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.util.Locale: void <clinit>()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.String: void <clinit>()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <k3.k: void c(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.util.Locale: java.util.Locale getDefault()>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<com.simplemobiletools.commons.views.PinTab: java.lang.String getHashedPin()> to <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.p: void <clinit>()> to <k3.p: void <clinit>()>
<k3.p: void <clinit>()> to <k3.p: void <init>()>
<java.lang.String: void <clinit>()> to <java.lang.String: void <clinit>()>
<k3.k: void c(java.lang.Object,java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.p: void <init>()> to <java.lang.Object: void <init>()>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void B1(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void z1(boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void <init>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.Barrier: void setType(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<s.a: void <init>()> to <s.j: void <init>()>
<androidx.constraintlayout.widget.b: void t()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<s.j: void <init>()> to <s.e: void <clinit>()>
<s.j: void <init>()> to <s.e: void <init>()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<s.e: void <init>()> to <r.a: void <clinit>()>
<s.e: void <init>()> to <java.util.ArrayList: void <init>()>
<s.e: void <init>()> to <s.d: void <init>(s.e,s.d$b)>
<s.e: void <init>()> to <r.a: void <init>(s.e)>
<s.e: void <init>()> to <s.e: void d()>
<s.e: void <init>()> to <java.lang.Object: void <init>()>
<s.e: void <init>()> to <s.d$b: void <clinit>()>
<s.e: void <init>()> to <s.e$b: void <clinit>()>
<s.e: void <init>()> to <s.e: void <clinit>()>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<s.d: void <init>(s.e,s.d$b)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.util.HashMap: void <init>()>
<s.e: void d()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <clinit>()> to <s.d$b: void <clinit>()>
<s.d$b: void <clinit>()> to <s.d$b: void <init>(java.lang.String,int)>
<s.e$b: void <clinit>()> to <s.e$b: void <clinit>()>
<s.e$b: void <clinit>()> to <s.e$b: void <init>(java.lang.String,int)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<s.e$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context)>
null to <androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context)> to <androidx.constraintlayout.widget.b: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.Barrier: void <init>(android.content.Context)> to <android.view.View: void setVisibility(int)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <android.view.View: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void B1(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void z1(boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void <init>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.Barrier: void setType(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: float getFloat(int,float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void C2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void G2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void w2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void E2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void u2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void F2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void A2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void s2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void y2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void q2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void v2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void B2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void t2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void z2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void r2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void H2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void x2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void I2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void J1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void M1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void O1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void L1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void K1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void N1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void I1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void D2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void <init>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<s.a: void <init>()> to <s.j: void <init>()>
<androidx.constraintlayout.widget.b: void t()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<s.g: void <init>()> to <s.l: void <init>()>
<s.g: void <init>()> to <java.util.ArrayList: void <init>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<s.j: void <init>()> to <s.e: void <clinit>()>
<s.j: void <init>()> to <s.e: void <init>()>
<s.l: void <init>()> to <t.b$a: void <clinit>()>
<s.l: void <init>()> to <t.b$a: void <init>()>
<s.l: void <init>()> to <s.j: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.e: void <init>()> to <r.a: void <clinit>()>
<s.e: void <init>()> to <java.util.ArrayList: void <init>()>
<s.e: void <init>()> to <s.d: void <init>(s.e,s.d$b)>
<s.e: void <init>()> to <r.a: void <init>(s.e)>
<s.e: void <init>()> to <s.e: void d()>
<s.e: void <init>()> to <java.lang.Object: void <init>()>
<s.e: void <init>()> to <s.d$b: void <clinit>()>
<s.e: void <init>()> to <s.e$b: void <clinit>()>
<s.e: void <init>()> to <s.e: void <clinit>()>
<t.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<s.d: void <init>(s.e,s.d$b)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.util.HashMap: void <init>()>
<s.e: void d()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <clinit>()> to <s.d$b: void <clinit>()>
<s.d$b: void <clinit>()> to <s.d$b: void <init>(java.lang.String,int)>
<s.e$b: void <clinit>()> to <s.e$b: void <clinit>()>
<s.e$b: void <clinit>()> to <s.e$b: void <init>(java.lang.String,int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<s.e$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.PinTab: v2.b getHashListener()>
null to <com.simplemobiletools.commons.views.PinTab: v2.b getHashListener()>
<com.simplemobiletools.commons.views.PinTab: v2.b getHashListener()> to <k3.k: void m(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyAppCompatCheckbox

<com.simplemobiletools.commons.views.PinTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.PinTab: void onFinishInflate()>
UI update?

<com.simplemobiletools.commons.views.PinTab: void setHashListener(v2.b)>
null to <com.simplemobiletools.commons.views.PinTab: void setHashListener(v2.b)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ViewStubCompat

<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyAppCompatCheckbox: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ViewStubCompat: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.ViewStubCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: int getInflatedId()>
null to <androidx.appcompat.widget.ViewStubCompat: int getInflatedId()>
UI update?

<androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()>
null to <androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()>
null to <androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)>
null to <androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)>
null to <androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)>
UI update?

<androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)>
null to <androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)>
UI update?
------------------------------------------------------
com.andrognito.patternlockview.PatternLockView

<androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$a)>
null to <androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$a)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.andrognito.patternlockview.PatternLockView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void G()>
null to <com.andrognito.patternlockview.PatternLockView: void G()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <java.util.ArrayList: void clear()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <android.view.View: void invalidate()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <com.andrognito.patternlockview.PatternLockView: void m()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int H(int,int)>
null to <com.andrognito.patternlockview.PatternLockView: int H(int,int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void I(int)>
null to <com.andrognito.patternlockview.PatternLockView: void I(int)>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.os.Build$VERSION: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.content.Context: java.lang.String getString(int)>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.view.View: void announceForAccessibility(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.view.View: android.content.Context getContext()>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.view.View: void setContentDescription(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void I(int)> to <android.view.View: void sendAccessibilityEvent(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)>
null to <com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView: float q(int)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView: float p(int)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView$a: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView$f: int j(com.andrognito.patternlockview.PatternLockView$f)>
<com.andrognito.patternlockview.PatternLockView: void K(com.andrognito.patternlockview.PatternLockView$f)> to <com.andrognito.patternlockview.PatternLockView$f: int k(com.andrognito.patternlockview.PatternLockView$f)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f$a: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <com.andrognito.patternlockview.PatternLockView$c: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <com.andrognito.patternlockview.PatternLockView$b: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)>
<com.andrognito.patternlockview.PatternLockView: float q(int)> to <android.view.View: int getPaddingTop()>
<com.andrognito.patternlockview.PatternLockView: float p(int)> to <android.view.View: int getPaddingLeft()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView$a: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f$a: void <init>()> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void l(int,int)>
<com.andrognito.patternlockview.PatternLockView$c: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.andrognito.patternlockview.PatternLockView$b: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)>
null to <com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <com.andrognito.patternlockview.PatternLockView$c: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.andrognito.patternlockview.PatternLockView: void L(com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <com.andrognito.patternlockview.PatternLockView$b: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)>
<com.andrognito.patternlockview.PatternLockView$c: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.andrognito.patternlockview.PatternLockView$b: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g,float,float,float,float)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int a(com.andrognito.patternlockview.PatternLockView)>
null to <com.andrognito.patternlockview.PatternLockView: int a(com.andrognito.patternlockview.PatternLockView)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int b(com.andrognito.patternlockview.PatternLockView)>
null to <com.andrognito.patternlockview.PatternLockView: int b(com.andrognito.patternlockview.PatternLockView)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
null to <com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.andrognito.patternlockview.PatternLockView: android.view.animation.Interpolator d(com.andrognito.patternlockview.PatternLockView)>
null to <com.andrognito.patternlockview.PatternLockView: android.view.animation.Interpolator d(com.andrognito.patternlockview.PatternLockView)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int c(com.andrognito.patternlockview.PatternLockView)>
null to <com.andrognito.patternlockview.PatternLockView: int c(com.andrognito.patternlockview.PatternLockView)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void e(com.andrognito.patternlockview.PatternLockView,float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
null to <com.andrognito.patternlockview.PatternLockView: void e(com.andrognito.patternlockview.PatternLockView,float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void e(com.andrognito.patternlockview.PatternLockView,float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void start()>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.andrognito.patternlockview.PatternLockView: void M(float,float,long,android.view.animation.Interpolator,com.andrognito.patternlockview.PatternLockView$g,java.lang.Runnable)> to <com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)>
<com.andrognito.patternlockview.PatternLockView$e: void <init>(com.andrognito.patternlockview.PatternLockView,java.lang.Runnable)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.andrognito.patternlockview.PatternLockView$d: void <init>(com.andrognito.patternlockview.PatternLockView,com.andrognito.patternlockview.PatternLockView$g)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int f()>
null to <com.andrognito.patternlockview.PatternLockView: int f()>
UI update?

<com.andrognito.patternlockview.PatternLockView: float i(float,float,float,float)>
null to <com.andrognito.patternlockview.PatternLockView: float i(float,float,float,float)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void j()>
null to <com.andrognito.patternlockview.PatternLockView: void j()>
<com.andrognito.patternlockview.PatternLockView: void j()> to <android.animation.ObjectAnimator: void cancel()>
<com.andrognito.patternlockview.PatternLockView: void j()> to <android.animation.ValueAnimator: void cancel()>
UI update?

<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)>
null to <com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)> to <com.andrognito.patternlockview.PatternLockView: int r(float)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)> to <com.andrognito.patternlockview.PatternLockView: int t(float)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f k(float,float)> to <com.andrognito.patternlockview.PatternLockView$f: com.andrognito.patternlockview.PatternLockView$f o(int,int)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f$a: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<com.andrognito.patternlockview.PatternLockView: int r(float)> to <android.view.View: int getPaddingLeft()>
<com.andrognito.patternlockview.PatternLockView: int t(float)> to <android.view.View: int getPaddingTop()>
<com.andrognito.patternlockview.PatternLockView$f: com.andrognito.patternlockview.PatternLockView$f o(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: com.andrognito.patternlockview.PatternLockView$f o(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void l(int,int)>
<com.andrognito.patternlockview.PatternLockView$f$a: void <init>()> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void l(int,int)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void m()>
null to <com.andrognito.patternlockview.PatternLockView: void m()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void o(android.graphics.Canvas,float,float,float,boolean,float)>
null to <com.andrognito.patternlockview.PatternLockView: void o(android.graphics.Canvas,float,float,float,boolean,float)>
UI update?

<com.andrognito.patternlockview.PatternLockView: float p(int)>
null to <com.andrognito.patternlockview.PatternLockView: float p(int)>
<com.andrognito.patternlockview.PatternLockView: float p(int)> to <android.view.View: int getPaddingLeft()>
UI update?

<com.andrognito.patternlockview.PatternLockView: float q(int)>
null to <com.andrognito.patternlockview.PatternLockView: float q(int)>
<com.andrognito.patternlockview.PatternLockView: float q(int)> to <android.view.View: int getPaddingTop()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int r(float)>
null to <com.andrognito.patternlockview.PatternLockView: int r(float)>
<com.andrognito.patternlockview.PatternLockView: int r(float)> to <android.view.View: int getPaddingLeft()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int s(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: int s(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int t(float)>
null to <com.andrognito.patternlockview.PatternLockView: int t(float)>
<com.andrognito.patternlockview.PatternLockView: int t(float)> to <android.view.View: int getPaddingTop()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void x()>
null to <com.andrognito.patternlockview.PatternLockView: void x()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void J(int,java.util.List)>
null to <com.andrognito.patternlockview.PatternLockView: void J(int,java.util.List)>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getAspectRatio()>
null to <com.andrognito.patternlockview.PatternLockView: int getAspectRatio()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getCorrectStateColor()>
null to <com.andrognito.patternlockview.PatternLockView: int getCorrectStateColor()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getDotAnimationDuration()>
null to <com.andrognito.patternlockview.PatternLockView: int getDotAnimationDuration()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getDotCount()>
null to <com.andrognito.patternlockview.PatternLockView: int getDotCount()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getDotNormalSize()>
null to <com.andrognito.patternlockview.PatternLockView: int getDotNormalSize()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getDotSelectedSize()>
null to <com.andrognito.patternlockview.PatternLockView: int getDotSelectedSize()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getNormalStateColor()>
null to <com.andrognito.patternlockview.PatternLockView: int getNormalStateColor()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getPathEndAnimationDuration()>
null to <com.andrognito.patternlockview.PatternLockView: int getPathEndAnimationDuration()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getPathWidth()>
null to <com.andrognito.patternlockview.PatternLockView: int getPathWidth()>
UI update?

<com.andrognito.patternlockview.PatternLockView: java.util.List getPattern()>
null to <com.andrognito.patternlockview.PatternLockView: java.util.List getPattern()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getPatternSize()>
null to <com.andrognito.patternlockview.PatternLockView: int getPatternSize()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getPatternViewMode()>
null to <com.andrognito.patternlockview.PatternLockView: int getPatternViewMode()>
UI update?

<com.andrognito.patternlockview.PatternLockView: int getWrongStateColor()>
null to <com.andrognito.patternlockview.PatternLockView: int getWrongStateColor()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void h(e1.a)>
null to <com.andrognito.patternlockview.PatternLockView: void h(e1.a)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void l()>
null to <com.andrognito.patternlockview.PatternLockView: void l()>
<com.andrognito.patternlockview.PatternLockView: void l()> to <com.andrognito.patternlockview.PatternLockView: void G()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <java.util.ArrayList: void clear()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <android.view.View: void invalidate()>
<com.andrognito.patternlockview.PatternLockView: void G()> to <com.andrognito.patternlockview.PatternLockView: void m()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void onDraw(android.graphics.Canvas)>
null to <com.andrognito.patternlockview.PatternLockView: void onDraw(android.graphics.Canvas)>
UI update?

<com.andrognito.patternlockview.PatternLockView: boolean onHoverEvent(android.view.MotionEvent)>
null to <com.andrognito.patternlockview.PatternLockView: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void onMeasure(int,int)>
null to <com.andrognito.patternlockview.PatternLockView: void onMeasure(int,int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.andrognito.patternlockview.PatternLockView: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.andrognito.patternlockview.PatternLockView: android.os.Parcelable onSaveInstanceState()>
null to <com.andrognito.patternlockview.PatternLockView: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.andrognito.patternlockview.PatternLockView: void onSizeChanged(int,int,int,int)>
null to <com.andrognito.patternlockview.PatternLockView: void onSizeChanged(int,int,int,int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setAspectRatio(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setAspectRatio(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setAspectRatioEnabled(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: void setAspectRatioEnabled(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setCorrectStateColor(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setCorrectStateColor(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setDotAnimationDuration(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setDotAnimationDuration(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setDotCount(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setDotCount(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setDotNormalSize(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setDotNormalSize(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setDotSelectedSize(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setDotSelectedSize(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setEnableHapticFeedback(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: void setEnableHapticFeedback(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setInStealthMode(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: void setInStealthMode(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setInputEnabled(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: void setInputEnabled(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setNormalStateColor(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setNormalStateColor(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setPathEndAnimationDuration(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setPathEndAnimationDuration(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setPathWidth(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setPathWidth(int)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setTactileFeedbackEnabled(boolean)>
null to <com.andrognito.patternlockview.PatternLockView: void setTactileFeedbackEnabled(boolean)>
UI update?

<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setViewMode(int)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <android.view.View: void invalidate()>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView: void m()>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView: float q(int)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView: float p(int)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <java.util.ArrayList: int size()>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <android.os.SystemClock: long elapsedRealtime()>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView$f: int k(com.andrognito.patternlockview.PatternLockView$f)>
<com.andrognito.patternlockview.PatternLockView: void setViewMode(int)> to <com.andrognito.patternlockview.PatternLockView$f: int j(com.andrognito.patternlockview.PatternLockView$f)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f$a: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void <clinit>()> to <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<com.andrognito.patternlockview.PatternLockView: float q(int)> to <android.view.View: int getPaddingTop()>
<com.andrognito.patternlockview.PatternLockView: float p(int)> to <android.view.View: int getPaddingLeft()>
<com.andrognito.patternlockview.PatternLockView$f$a: void <init>()> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void <clinit>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <java.lang.Object: void <init>()>
<com.andrognito.patternlockview.PatternLockView$f: void <init>(int,int)> to <com.andrognito.patternlockview.PatternLockView$f: void l(int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <com.andrognito.patternlockview.PatternLockView: int f()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.andrognito.patternlockview.PatternLockView$f: void l(int,int)> to <java.lang.StringBuilder: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
androidx.appcompat.view.menu.ListMenuItemView

<com.andrognito.patternlockview.PatternLockView: void setWrongStateColor(int)>
null to <com.andrognito.patternlockview.PatternLockView: void setWrongStateColor(int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
<androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)> to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void c()>
null to <androidx.appcompat.view.menu.ListMenuItemView: void c()>
<androidx.appcompat.view.menu.ListMenuItemView: void c()> to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: void c()> to <androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.widget.LinearLayout: android.content.Context getContext()>
<androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)> to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void f()>
null to <androidx.appcompat.view.menu.ListMenuItemView: void f()>
<androidx.appcompat.view.menu.ListMenuItemView: void f()> to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: void f()> to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.widget.LinearLayout: android.content.Context getContext()>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void g()>
null to <androidx.appcompat.view.menu.ListMenuItemView: void g()>
<androidx.appcompat.view.menu.ListMenuItemView: void g()> to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: void g()> to <androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.widget.LinearLayout: android.content.Context getContext()>
<androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)> to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
null to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.widget.LinearLayout: android.content.Context getContext()>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)> to <android.widget.ImageButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)> to <com.google.android.material.internal.m: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)> to <android.widget.ImageView: void setVisibility(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: boolean d()>
null to <androidx.appcompat.view.menu.ListMenuItemView: boolean d()>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.g getItemData()>
null to <androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.g getItemData()>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <androidx.appcompat.view.menu.g: boolean A()>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.CheckedTextView: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.RadioButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.CompoundButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.TextView: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.CheckBox: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.TextView: int getVisibility()>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <androidx.appcompat.view.menu.g: java.lang.String h()>
<androidx.appcompat.view.menu.g: boolean A()> to <androidx.appcompat.view.menu.m: boolean H()>
<androidx.appcompat.view.menu.g: boolean A()> to <androidx.appcompat.view.menu.g: char g()>
<androidx.appcompat.view.menu.g: boolean A()> to <androidx.appcompat.view.menu.e: boolean H()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.view.ViewConfiguration: boolean hasPermanentMenuKey()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.view.menu.e: boolean G()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.view.menu.m: boolean G()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.view.menu.e: android.content.Context u()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.view.menu.g: char g()>
<androidx.appcompat.view.menu.g: java.lang.String h()> to <androidx.appcompat.view.menu.g: void d(java.lang.StringBuilder,int,int,java.lang.String)>
<androidx.appcompat.view.menu.m: boolean H()> to <androidx.appcompat.view.menu.m: boolean H()>
<androidx.appcompat.view.menu.m: boolean H()> to <androidx.appcompat.view.menu.e: boolean H()>
<androidx.appcompat.view.menu.g: char g()> to <androidx.appcompat.view.menu.m: boolean G()>
<androidx.appcompat.view.menu.g: char g()> to <androidx.appcompat.view.menu.e: boolean G()>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.view.menu.m: boolean G()> to <androidx.appcompat.view.menu.m: boolean G()>
<androidx.appcompat.view.menu.m: boolean G()> to <androidx.appcompat.view.menu.e: boolean G()>
<androidx.appcompat.view.menu.g: void d(java.lang.StringBuilder,int,int,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MySeekBar
------------------------------------------------------
androidx.appcompat.app.AlertController$RecycleListView
------------------------------------------------------
com.google.android.material.timepicker.ChipTextInputComboView
------------------------------------------------------
androidx.appcompat.widget.DialogTitle
------------------------------------------------------
androidx.recyclerview.widget.RecyclerView
<androidx.appcompat.view.menu.ListMenuItemView: void h(boolean,char)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()>
null to <androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)> to <android.widget.ImageButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)> to <com.google.android.material.internal.m: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)> to <android.widget.ImageView: void setVisibility(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.CheckedTextView: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.RadioButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.CompoundButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.CheckBox: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: int getVisibility()>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
UI update?
<androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<com.simplemobiletools.commons.views.MySeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MySeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)>
<androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)> to <c.j: void <clinit>()>
<androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.appcompat.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>
<c.j: void <clinit>()> to <c.j: void <clinit>()>
UI update?

<androidx.appcompat.app.AlertController$RecycleListView: void a(boolean,boolean)>
null to <androidx.appcompat.app.AlertController$RecycleListView: void a(boolean,boolean)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)>
null to <androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <androidx.appcompat.view.menu.g: boolean m()>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.RadioButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.CheckBox: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.CompoundButton: void setVisibility(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.ToggleButton: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.RadioButton: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <android.widget.CompoundButton: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <androidx.appcompat.widget.s0: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <androidx.appcompat.view.menu.ListMenuItemView: void c()>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <androidx.appcompat.view.menu.ListMenuItemView: void g()>
<androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)> to <androidx.appcompat.view.menu.g: boolean isChecked()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void setThumbPosition(float)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void d()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void a(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.view.View: android.os.IBinder getWindowToken()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void i()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void j()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: void setChecked(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: boolean T(android.view.View)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.a: boolean o1()>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: boolean isChecked()>
<androidx.appcompat.view.menu.ListMenuItemView: void c()> to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: void c()> to <androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
<androidx.appcompat.view.menu.ListMenuItemView: void g()> to <androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<androidx.appcompat.view.menu.ListMenuItemView: void g()> to <androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.s0: void setThumbPosition(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.s0: void d()> to <android.animation.ObjectAnimator: void cancel()>
<androidx.appcompat.widget.s0: void a(boolean)> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void start()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<androidx.appcompat.widget.s0: void i()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void j()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.ArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Stack: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.AbstractCollection: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <z2.t: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Vector: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()> to <android.widget.LinearLayout: android.content.Context getContext()>
<androidx.appcompat.view.menu.ListMenuItemView: void a(android.view.View)> to <androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.s0: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w$g: void g(android.view.View,java.lang.Object)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: i0.w$g H0()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<androidx.appcompat.view.menu.ListMenuItemView: void b(android.view.View,int)> to <android.widget.LinearLayout: void addView(android.view.View,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void <clinit>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean b()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean c()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: i0.a G(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void X(android.view.View,int)>
<i0.w: i0.w$g H0()> to <i0.w$d: void <init>(int,java.lang.Class,int,int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.w$d: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean c()>
<i0.w$g: java.lang.Object f(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean b()>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$d: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$e: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$b: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$c: java.lang.Object d(android.view.View)>
<i0.w$g: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w$d: void e(android.view.View,java.lang.Object)> to <i0.w$d: void j(android.view.View,java.lang.CharSequence)>
<i0.w$e: void e(android.view.View,java.lang.Object)> to <i0.w$e: void j(android.view.View,java.lang.Boolean)>
<i0.w$b: void e(android.view.View,java.lang.Object)> to <i0.w$b: void j(android.view.View,java.lang.Boolean)>
<i0.w$c: void e(android.view.View,java.lang.Object)> to <i0.w$c: void j(android.view.View,java.lang.CharSequence)>
<i0.w$g: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <init>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: i0.a l(android.view.View)>
<i0.w: i0.a G(android.view.View)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void X(android.view.View,int)> to <i0.w: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Class: java.lang.String getSimpleName()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Object: java.lang.Class getClass()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<i0.w: void X(android.view.View,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <z2.t: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<i0.w: void X(android.view.View,int)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ListView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.View: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.Spinner: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <i0.w: java.lang.CharSequence p(android.view.View)>
<i0.w: void X(android.view.View,int)> to <i0.w: int o(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<i0.w: void X(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<i0.w: void X(android.view.View,int)> to <i0.w: void G0(android.view.View)>
<i0.w$d: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$d: java.lang.Object d(android.view.View)> to <i0.w$d: java.lang.CharSequence i(android.view.View)>
<i0.w$e: java.lang.Object d(android.view.View)> to <i0.w$e: java.lang.Boolean i(android.view.View)>
<i0.w$b: java.lang.Object d(android.view.View)> to <i0.w$b: java.lang.Boolean i(android.view.View)>
<i0.w$c: java.lang.Object d(android.view.View)> to <i0.w$c: java.lang.CharSequence i(android.view.View)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>
<i0.w$c: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: i0.w$g c0()>
<i0.w: int o(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int o(android.view.View)> to <android.view.View: int getAccessibilityLiveRegion()>
<i0.w: void G0(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: void G0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <i0.w: int A(android.view.View)>
<i0.w: void G0(android.view.View)> to <i0.w: void x0(android.view.View,int)>
<i0.w$g: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$d: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$c: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<i0.w: i0.w$g c0()> to <i0.w$c: void <init>(int,java.lang.Class,int,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<i0.w$c: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: com.google.android.material.chip.Chip b(com.google.android.material.timepicker.ChipTextInputComboView)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: com.google.android.material.chip.Chip b(com.google.android.material.timepicker.ChipTextInputComboView)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String c(java.lang.CharSequence)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String c(java.lang.CharSequence)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void d()>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void d()>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: boolean isChecked()>
null to <com.google.android.material.timepicker.ChipTextInputComboView: boolean isChecked()>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void onConfigurationChanged(android.content.res.Configuration)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void setChecked(boolean)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void setChecked(boolean)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void toggle()>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void toggle()>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String a(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence)>
null to <com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String a(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.DialogTitle: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.DialogTitle: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)>
null to <androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void <clinit>()>
null to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void A()>
null to <androidx.recyclerview.widget.RecyclerView: void A()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: boolean u0()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <j0.b: void b(android.view.accessibility.AccessibilityEvent,int)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean u0()> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void A0(int,int,android.view.MotionEvent,int)>
null to <androidx.recyclerview.widget.RecyclerView: void A0(int,int,android.view.MotionEvent,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)>
null to <androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)>
<androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionIndex()>
<androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)> to <android.view.MotionEvent: float getY(int)>
<androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)> to <android.view.MotionEvent: float getX(int)>
<androidx.recyclerview.widget.RecyclerView: void L0(android.view.MotionEvent)> to <android.view.MotionEvent: int getPointerId(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean P0()>
null to <androidx.recyclerview.widget.RecyclerView: boolean P0()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean L1()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean L1()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <com.simplemobiletools.commons.views.MyLinearLayoutManager: boolean L1()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <androidx.recyclerview.widget.RecyclerView$p: boolean L1()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <com.simplemobiletools.commons.views.MyGridLayoutManager: boolean L1()>
<androidx.recyclerview.widget.RecyclerView: boolean P0()> to <androidx.recyclerview.widget.GridLayoutManager: boolean L1()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)>
null to <androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <android.view.ViewGroup: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <android.view.ViewGroup: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <androidx.recyclerview.widget.RecyclerView: void L()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <androidx.recyclerview.widget.RecyclerView: void O()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <androidx.recyclerview.widget.RecyclerView: void N()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <androidx.recyclerview.widget.RecyclerView: void M()>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)>
<androidx.recyclerview.widget.RecyclerView: void S0(float,float,float,float)> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)> to <android.widget.EdgeEffect: void onPull(float)>
<androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)> to <android.widget.EdgeEffect: void onPull(float,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void U0()>
null to <androidx.recyclerview.widget.RecyclerView: void U0()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: boolean isFocusable()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: boolean hasFocusable()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.ListView: boolean requestFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.AutoCompleteTextView: boolean requestFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: boolean requestFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: boolean requestFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.RelativeLayout: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.RadioGroup: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.FrameLayout: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.TextView: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: android.view.View findViewById(int)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.appcompat.widget.m0$a: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.ListView: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.RecyclerView: android.view.View X()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: android.view.View getFocusedChild()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.ViewGroup: int getDescendantFocusability()>
<androidx.recyclerview.widget.RecyclerView: void U0()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.Vector: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.LinkedList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <z2.t: boolean contains(java.lang.Object)>
<androidx.appcompat.widget.g0: boolean hasFocus()> to <android.widget.ListView: boolean hasFocus()>
<androidx.appcompat.widget.m0$a: boolean hasFocus()> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <android.view.View: boolean hasFocusable()>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$e0: long m()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<z2.t: boolean contains(java.lang.Object)> to <z2.t: boolean a(java.lang.Void)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean a(java.lang.Void)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void V(int[])>
null to <androidx.recyclerview.widget.RecyclerView: void V(int[])>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.ListView: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.ListView: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.LinearLayout: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.widget.FrameLayout: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView W(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.View X()>
null to <androidx.recyclerview.widget.RecyclerView: android.view.View X()>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <android.view.View: boolean hasFocusable()>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)>
<androidx.recyclerview.widget.RecyclerView: android.view.View X()> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.Vector: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.LinkedList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <z2.t: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<z2.t: boolean contains(java.lang.Object)> to <z2.t: boolean a(java.lang.Void)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean a(java.lang.Void)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void c(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>
null to <androidx.recyclerview.widget.RecyclerView: void c(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: void c(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void c1(android.view.View,android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void c1(android.view.View,android.view.View)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void d(androidx.recyclerview.widget.RecyclerView,int)>
null to <androidx.recyclerview.widget.RecyclerView: void d(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void d(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: void detachViewFromParent(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean e(androidx.recyclerview.widget.RecyclerView)>
null to <androidx.recyclerview.widget.RecyclerView: boolean e(androidx.recyclerview.widget.RecyclerView)>
<androidx.recyclerview.widget.RecyclerView: boolean e(androidx.recyclerview.widget.RecyclerView)> to <android.view.ViewGroup: boolean awakenScrollBars()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void f(androidx.recyclerview.widget.RecyclerView,int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void f(androidx.recyclerview.widget.RecyclerView,int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void f1()>
null to <androidx.recyclerview.widget.RecyclerView: void f1()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView$e0: int j()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView$e0: long m()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView: void d1()>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void f1()> to <android.view.ViewGroup: android.view.View getFocusedChild()>
<androidx.recyclerview.widget.RecyclerView$e0: int j()> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: int getId()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: int getId()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: android.view.View getFocusedChild()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.m0$a: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.widget.ListView: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.g0: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.m0$a: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.widget.ListView: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<androidx.appcompat.widget.g0: boolean hasFocus()> to <android.widget.ListView: boolean hasFocus()>
<androidx.appcompat.widget.m0$a: boolean hasFocus()> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.appcompat.widget.g0: boolean isFocused()> to <android.widget.ListView: boolean isFocused()>
<androidx.appcompat.widget.m0$a: boolean isFocused()> to <androidx.appcompat.widget.g0: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void V0()>
null to <androidx.recyclerview.widget.RecyclerView: void V0()>
<androidx.recyclerview.widget.RecyclerView: void V0()> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void V0()> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.recyclerview.widget.RecyclerView: void V0()> to <android.widget.EdgeEffect: void onRelease()>
<androidx.recyclerview.widget.RecyclerView: void V0()> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.b: void k(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.b: void b(android.view.View,boolean)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean z()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$w: void J(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void g(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e: int j(android.view.View)>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <androidx.recyclerview.widget.b: void l(android.view.View)>
<androidx.recyclerview.widget.b: void k(android.view.View)> to <androidx.recyclerview.widget.b$a: void h(int)>
<androidx.recyclerview.widget.b: void b(android.view.View,boolean)> to <androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)>
<androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)> to <androidx.recyclerview.widget.b$a: void e(int,boolean)>
<androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)> to <androidx.recyclerview.widget.b: void l(android.view.View)>
<androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: void c(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)> to <androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$w: void J(androidx.recyclerview.widget.RecyclerView$e0)> to <java.util.ArrayList: boolean remove(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView$w: void J(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: void e()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$e: int j(android.view.View)> to <android.view.ViewGroup: int indexOfChild(android.view.View)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e: void b(android.view.View)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b: void l(android.view.View)> to <z2.t: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.b$a: void h(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: void h(int)> to <androidx.recyclerview.widget.b$a: void h(int)>
<androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)> to <androidx.recyclerview.widget.b$a: void e(int,boolean)>
<androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)> to <androidx.recyclerview.widget.b: void l(android.view.View)>
<androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: void a(android.view.View,int,boolean)> to <androidx.recyclerview.widget.RecyclerView$e: void i(android.view.View,int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.b$a: void e(int,boolean)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: void e(int,boolean)> to <androidx.recyclerview.widget.b$a: void e(int,boolean)>
<androidx.recyclerview.widget.b$a: void e(int,boolean)> to <androidx.recyclerview.widget.b$a: void a(int)>
<androidx.recyclerview.widget.b$a: void e(int,boolean)> to <androidx.recyclerview.widget.b$a: void h(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$e0: void f()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean z()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$e: void h(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView: void c(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$e: void b(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: void b(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e0: void D(androidx.recyclerview.widget.RecyclerView)>
<androidx.recyclerview.widget.RecyclerView$e: void b(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: void b(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<androidx.recyclerview.widget.RecyclerView$e: void i(android.view.View,int)> to <android.view.ViewGroup: void addView(android.view.View,int)>
<androidx.recyclerview.widget.RecyclerView$e: void i(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void y(android.view.View)>
<androidx.recyclerview.widget.b$a: void a(int)> to <androidx.recyclerview.widget.b$a: void a(int)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void c(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: void D(androidx.recyclerview.widget.RecyclerView)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: void D(androidx.recyclerview.widget.RecyclerView)> to <androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)>
<androidx.recyclerview.widget.RecyclerView$e0: void D(androidx.recyclerview.widget.RecyclerView)> to <i0.w: int A(android.view.View)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$h: void q(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void G0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <z2.t: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <i0.w: void x0(android.view.View,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void d1()>
null to <androidx.recyclerview.widget.RecyclerView: void d1()>
UI update?

<androidx.recyclerview.widget.RecyclerView: i0.l getScrollingChildHelper()>
null to <androidx.recyclerview.widget.RecyclerView: i0.l getScrollingChildHelper()>
<androidx.recyclerview.widget.RecyclerView: i0.l getScrollingChildHelper()> to <i0.l: void <init>(android.view.View)>
<i0.l: void <init>(android.view.View)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void i0(android.view.View,android.graphics.Rect)>
null to <androidx.recyclerview.widget.RecyclerView: void i0(android.view.View,android.graphics.Rect)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: int getId()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: int getId()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: android.view.View getFocusedChild()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.m0$a: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.widget.ListView: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.g0: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <androidx.appcompat.widget.m0$a: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.widget.ListView: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.View: boolean isFocused()>
<androidx.recyclerview.widget.RecyclerView: int j0(android.view.View)> to <android.view.ViewGroup: boolean isFocused()>
<androidx.appcompat.widget.g0: boolean hasFocus()> to <android.widget.ListView: boolean hasFocus()>
<androidx.appcompat.widget.m0$a: boolean hasFocus()> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.appcompat.widget.g0: boolean isFocused()> to <android.widget.ListView: boolean isFocused()>
<androidx.appcompat.widget.m0$a: boolean isFocused()> to <androidx.appcompat.widget.g0: boolean isFocused()>
UI update?

<androidx.recyclerview.widget.RecyclerView: java.lang.String k0(android.content.Context,java.lang.String)>
null to <androidx.recyclerview.widget.RecyclerView: java.lang.String k0(android.content.Context,java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void m0(long,androidx.recyclerview.widget.RecyclerView$e0,androidx.recyclerview.widget.RecyclerView$e0)> to <android.util.Log: int e(java.lang.String,java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: long m()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean o0()>
null to <androidx.recyclerview.widget.RecyclerView: boolean o0()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean A()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: boolean o0()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void q0()>
null to <androidx.recyclerview.widget.RecyclerView: void q0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void r(androidx.recyclerview.widget.RecyclerView$e0)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void r0()>
null to <androidx.recyclerview.widget.RecyclerView: void r0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void v(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void v(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean w0(android.view.View,android.view.View,int)>
null to <androidx.recyclerview.widget.RecyclerView: boolean w0(android.view.View,android.view.View,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean x(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: boolean x(int,int)>
<androidx.recyclerview.widget.RecyclerView: boolean x(int,int)> to <androidx.recyclerview.widget.RecyclerView: void V(int[])>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void V(int[])> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void x1()>
null to <androidx.recyclerview.widget.RecyclerView: void x1()>
<androidx.recyclerview.widget.RecyclerView: void x1()> to <androidx.recyclerview.widget.RecyclerView$d0: void g()>
<androidx.recyclerview.widget.RecyclerView: void x1()> to <androidx.recyclerview.widget.RecyclerView$p: void K1()>
<androidx.recyclerview.widget.RecyclerView$d0: void g()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.recyclerview.widget.RecyclerView$d0: void g()> to <android.widget.OverScroller: void abortAnimation()>
<androidx.recyclerview.widget.RecyclerView$p: void K1()> to <androidx.recyclerview.widget.RecyclerView$a0: void r()>
<androidx.recyclerview.widget.RecyclerView$a0: void r()> to <androidx.recyclerview.widget.g: void n()>
<androidx.recyclerview.widget.RecyclerView$a0: void r()> to <androidx.recyclerview.widget.RecyclerView$p: void f1(androidx.recyclerview.widget.RecyclerView$a0)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void B0(int)>
null to <androidx.recyclerview.widget.RecyclerView: void B0(int)>
<androidx.recyclerview.widget.RecyclerView: void B0(int)> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void B0(int)> to <android.view.View: void offsetLeftAndRight(int)>
<androidx.recyclerview.widget.RecyclerView: void B0(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void C0(int)>
null to <androidx.recyclerview.widget.RecyclerView: void C0(int)>
<androidx.recyclerview.widget.RecyclerView: void C0(int)> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void C0(int)> to <android.view.View: void offsetTopAndBottom(int)>
<androidx.recyclerview.widget.RecyclerView: void C0(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void D0(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void D0(int,int)>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView$w: void u(int,int)>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void D0(int,int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView$w: void u(int,int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void u(int,int)> to <androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)>
<androidx.recyclerview.widget.RecyclerView$w: void u(int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void E0(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void E0(int,int)>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.RecyclerView$w: void v(int,int)>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void E0(int,int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView$w: void v(int,int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void v(int,int)> to <androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)>
<androidx.recyclerview.widget.RecyclerView$w: void v(int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$e0: void C(int,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void G0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void G0(android.view.View)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void H0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void H0(android.view.View)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void I0()>
null to <androidx.recyclerview.widget.RecyclerView: void I0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void J()>
null to <androidx.recyclerview.widget.RecyclerView: void J()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void x0(android.view.View,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<z2.t: void clear()> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void J0()>
null to <androidx.recyclerview.widget.RecyclerView: void J0()>
<androidx.recyclerview.widget.RecyclerView: void J0()> to <androidx.recyclerview.widget.RecyclerView: void K0(boolean)>
<androidx.recyclerview.widget.RecyclerView: void K0(boolean)> to <androidx.recyclerview.widget.RecyclerView: void A()>
<androidx.recyclerview.widget.RecyclerView: void K0(boolean)> to <androidx.recyclerview.widget.RecyclerView: void J()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: boolean u0()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <j0.b: void b(android.view.accessibility.AccessibilityEvent,int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void x0(android.view.View,int)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean u0()> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<z2.t: void clear()> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void K0(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void K0(boolean)>
<androidx.recyclerview.widget.RecyclerView: void K0(boolean)> to <androidx.recyclerview.widget.RecyclerView: void A()>
<androidx.recyclerview.widget.RecyclerView: void K0(boolean)> to <androidx.recyclerview.widget.RecyclerView: void J()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void A()> to <androidx.recyclerview.widget.RecyclerView: boolean u0()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<androidx.recyclerview.widget.RecyclerView: void A()> to <j0.b: void b(android.view.accessibility.AccessibilityEvent,int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: void clear()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void J()> to <i0.w: void x0(android.view.View,int)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean u0()> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: void b(android.view.accessibility.AccessibilityEvent,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<z2.t: void clear()> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void L()>
null to <androidx.recyclerview.widget.RecyclerView: void L()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void M()>
null to <androidx.recyclerview.widget.RecyclerView: void M()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void M0(int)>
null to <androidx.recyclerview.widget.RecyclerView: void M0(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void N()>
null to <androidx.recyclerview.widget.RecyclerView: void N()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void N0(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void N0(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void O()>
null to <androidx.recyclerview.widget.RecyclerView: void O()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
UI update?

<androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
null to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)>
null to <androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView: int getScrollState()>
<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)> to <android.widget.OverScroller: int getCurrY()>
<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)> to <android.widget.OverScroller: int getFinalY()>
<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)> to <android.widget.OverScroller: int getCurrX()>
<androidx.recyclerview.widget.RecyclerView: void Q(androidx.recyclerview.widget.RecyclerView$b0)> to <android.widget.OverScroller: int getFinalX()>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.View R(float,float)>
null to <androidx.recyclerview.widget.RecyclerView: android.view.View R(float,float)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: android.view.View S(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Y(int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.Vector: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.LinkedList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <z2.t: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<z2.t: boolean contains(java.lang.Object)> to <z2.t: boolean a(java.lang.Void)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean a(java.lang.Void)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void Y0(androidx.recyclerview.widget.RecyclerView$o)>
null to <androidx.recyclerview.widget.RecyclerView: void Y0(androidx.recyclerview.widget.RecyclerView$o)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$e0: long m()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 Z(long)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.Vector: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.LinkedList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <z2.t: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: boolean contains(java.lang.Object)> to <z2.t: boolean a(java.lang.Void)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean a(java.lang.Void)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void Z0(androidx.recyclerview.widget.RecyclerView$t)>
null to <androidx.recyclerview.widget.RecyclerView: void Z0(androidx.recyclerview.widget.RecyclerView$t)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void a(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void a(int,int)>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <android.widget.EdgeEffect: void onAbsorb(int)>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <androidx.recyclerview.widget.RecyclerView: void L()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <androidx.recyclerview.widget.RecyclerView: void O()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <androidx.recyclerview.widget.RecyclerView: void N()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <androidx.recyclerview.widget.RecyclerView: void M()>
<androidx.recyclerview.widget.RecyclerView: void a(int,int)> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void L()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void O()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void N()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getMeasuredHeight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView: void M()> to <android.view.ViewGroup: int getPaddingTop()>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.recyclerview.widget.RecyclerView$l: android.widget.EdgeEffect a(androidx.recyclerview.widget.RecyclerView,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean x()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.b: boolean n(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 a0(int,boolean)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.Vector: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <java.util.LinkedList: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: boolean n(android.view.View)> to <z2.t: boolean contains(java.lang.Object)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: boolean contains(java.lang.Object)> to <z2.t: boolean a(java.lang.Void)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean a(java.lang.Void)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)>
null to <androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)>
<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.Vector: boolean remove(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.ArrayList: boolean remove(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.LinkedList: boolean remove(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void a1(androidx.recyclerview.widget.RecyclerView$u)> to <z2.t: boolean remove(java.lang.Object)>
<z2.t: boolean remove(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void b1()>
null to <androidx.recyclerview.widget.RecyclerView: void b1()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ImageView: void layout(int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.View: void layout(int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.ViewGroup: void layout(int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ScrollView: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ListView: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ImageView: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.FrameLayout: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.View: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.ViewGroup: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.TextView: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.LinearLayout: int getHeight()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ListView: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.ImageView: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.FrameLayout: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.Spinner: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.View: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.ViewGroup: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.TextView: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.widget.LinearLayout: int getWidth()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void b1()> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$p: boolean m(androidx.recyclerview.widget.RecyclerView$q)>
<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean m(androidx.recyclerview.widget.RecyclerView$q)>
<androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.GridLayoutManager: boolean m(androidx.recyclerview.widget.RecyclerView$q)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()>
null to <androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int q(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.RecyclerView$p: int q(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.LinearLayoutManager: int q(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()> to <androidx.recyclerview.widget.RecyclerView$p: boolean k()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int q(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int q(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int n()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int n()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()>
null to <androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.RecyclerView$p: int r(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.GridLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.LinearLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()> to <androidx.recyclerview.widget.RecyclerView$p: boolean k()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int r(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: boolean q2()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int max(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int round(float)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int max(int,int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int round(float)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int f(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <android.util.SparseIntArray: int get(int)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int size()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int keyAt(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int e(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()>
null to <androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.RecyclerView$p: int s(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.GridLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.LinearLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean k()>
<androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()> to <androidx.recyclerview.widget.RecyclerView$p: boolean k()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int s(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: boolean q2()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int f(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <android.util.SparseIntArray: int get(int)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int size()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int keyAt(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int e(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()>
null to <androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int t(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.RecyclerView$p: int t(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.LinearLayoutManager: int t(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()> to <androidx.recyclerview.widget.RecyclerView$p: boolean l()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int t(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int t(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int U1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int O1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int n()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int n()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int a(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$b: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$a: int n()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()>
null to <androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.RecyclerView$p: int u(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.GridLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.LinearLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()> to <androidx.recyclerview.widget.RecyclerView$p: boolean l()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int u(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int V1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: boolean q2()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int max(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.GridLayoutManager: int S2(androidx.recyclerview.widget.RecyclerView$b0)> to <java.lang.Math: int round(float)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int P1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int min(int,int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int max(int,int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int b(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean,boolean)> to <java.lang.Math: int round(float)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int f(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <android.util.SparseIntArray: int get(int)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int size()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int keyAt(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int e(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()>
null to <androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.LinearLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.RecyclerView$p: int v(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.GridLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.LinearLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean l()>
<androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()> to <androidx.recyclerview.widget.RecyclerView$p: boolean l()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.GridLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.LinearLayoutManager: int v(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: int W1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: boolean q2()>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.GridLayoutManager: int T2(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: int Q1(androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <java.lang.Math: int abs(int)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$b0: int b()>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.l: int c(androidx.recyclerview.widget.RecyclerView$b0,androidx.recyclerview.widget.i,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$p,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View d2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int m()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int d(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int g(android.view.View)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$a: int i()>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View e2(boolean)> to <androidx.recyclerview.widget.i$b: int m()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int g(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.i$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int b(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View X1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View Y1(boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.i$a: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.i$b: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.i$a: int i()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.i$b: int m()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int f(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int d(int,int)> to <android.util.SparseIntArray: int get(int)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int size()>
<androidx.recyclerview.widget.GridLayoutManager$c: int a(android.util.SparseIntArray,int)> to <android.util.SparseIntArray: int keyAt(int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <androidx.recyclerview.widget.GridLayoutManager$a: int e(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: void put(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$c: int c(int,int)> to <android.util.SparseIntArray: int get(int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$h: boolean i()>
<androidx.recyclerview.widget.RecyclerView: long d0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: long m()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>
null to <androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>
<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)> to <androidx.recyclerview.widget.RecyclerView: i0.l getScrollingChildHelper()>
<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)> to <i0.l: boolean b(float,float)>
<androidx.recyclerview.widget.RecyclerView: i0.l getScrollingChildHelper()> to <i0.l: void <init>(android.view.View)>
<i0.l: boolean b(float,float)> to <i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)>
<i0.l: boolean b(float,float)> to <i0.l: android.view.ViewParent h(int)>
<i0.l: boolean b(float,float)> to <i0.l: boolean l()>
<i0.l: void <init>(android.view.View)> to <java.lang.Object: void <init>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.constraintlayout.motion.widget.j: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: void <init>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)> to <i0.l: boolean b(float,float)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])>
null to <androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])>
null to <androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)>
null to <androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)>
null to <androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
null to <androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e0: int j()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: int j()> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int f0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>
null to <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 g0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void g1()>
null to <androidx.recyclerview.widget.RecyclerView: void g1()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.RecyclerView$e0: void G()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void g1()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()> to <androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(int,int)>
<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$q D()> to <androidx.recyclerview.widget.GridLayoutManager$b: void <init>(int,int)>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)> to <android.graphics.Rect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)> to <android.graphics.Rect: void <init>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(int,int)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)>
<androidx.recyclerview.widget.GridLayoutManager$b: void <init>(int,int)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$p: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$p: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(androidx.recyclerview.widget.RecyclerView$q)>
<androidx.recyclerview.widget.RecyclerView$p: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$p: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.GridLayoutManager$b: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$q F(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.GridLayoutManager$b: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(androidx.recyclerview.widget.RecyclerView$q)> to <android.graphics.Rect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(androidx.recyclerview.widget.RecyclerView$q)> to <android.graphics.Rect: void <init>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(androidx.recyclerview.widget.RecyclerView$q)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)> to <android.graphics.Rect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)> to <android.graphics.Rect: void <init>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <android.graphics.Rect: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <android.graphics.Rect: void <init>()>
<androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager$c: void <init>(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.recyclerview.widget.GridLayoutManager$b: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.recyclerview.widget.GridLayoutManager$b: void <init>(android.view.ViewGroup$LayoutParams)> to <androidx.recyclerview.widget.RecyclerView$q: void <init>(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()>
null to <androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$h getAdapter()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$h getAdapter()>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getBaseline()>
null to <androidx.recyclerview.widget.RecyclerView: int getBaseline()>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()>
null to <androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.k getCompatAccessibilityDelegate()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.k getCompatAccessibilityDelegate()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l getEdgeEffectFactory()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$l getEdgeEffectFactory()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$m getItemAnimator()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$m getItemAnimator()>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>
null to <androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()>
null to <androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$p getLayoutManager()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$p getLayoutManager()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getRecycledViewPool()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$v getRecycledViewPool()>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()>
null to <androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()>
UI update?

<androidx.recyclerview.widget.RecyclerView: long getNanoTime()>
null to <androidx.recyclerview.widget.RecyclerView: long getNanoTime()>
<androidx.recyclerview.widget.RecyclerView: long getNanoTime()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: long getNanoTime()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: long getNanoTime()> to <java.lang.System: long nanoTime()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: int getScrollState()>
null to <androidx.recyclerview.widget.RecyclerView: int getScrollState()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()>
null to <androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()>
UI update?

<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s getOnFlingListener()>
null to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$s getOnFlingListener()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)>
null to <androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.LinearLayoutManager: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView: void y0()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <android.view.ViewGroup: void setWillNotDraw(boolean)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: boolean isEmpty()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.LinearLayoutManager: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.RecyclerView$w: void s()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()>
null to <androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void h(androidx.recyclerview.widget.RecyclerView$o)>
null to <androidx.recyclerview.widget.RecyclerView: void h(androidx.recyclerview.widget.RecyclerView$o)>
<androidx.recyclerview.widget.RecyclerView: void h(androidx.recyclerview.widget.RecyclerView$o)> to <androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.LinearLayoutManager: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView: void y0()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <android.view.ViewGroup: void setWillNotDraw(boolean)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <java.util.ArrayList: boolean isEmpty()>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.StaggeredGridLayoutManager: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void i(androidx.recyclerview.widget.RecyclerView$o,int)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.LinearLayoutManager: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.RecyclerView$w: void s()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.StaggeredGridLayoutManager: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$p: void g(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()>
null to <androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()>
null to <androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()>
null to <androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void j(androidx.recyclerview.widget.RecyclerView$t)>
null to <androidx.recyclerview.widget.RecyclerView: void j(androidx.recyclerview.widget.RecyclerView$t)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)>
null to <androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.ArrayList: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <z2.t: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void k(androidx.recyclerview.widget.RecyclerView$u)> to <java.util.Vector: boolean add(java.lang.Object)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: boolean d()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: boolean b()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$b0: boolean e()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: android.graphics.Rect l0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$o: void d(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)>
<androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$o: void e(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$b0)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$q: boolean d()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean v()>
<androidx.recyclerview.widget.RecyclerView$q: boolean b()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean A()>
<androidx.recyclerview.widget.RecyclerView$o: void d(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)>
null to <androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <z2.t: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<androidx.recyclerview.widget.RecyclerView: boolean l1(androidx.recyclerview.widget.RecyclerView$e0,int)> to <i0.w: void x0(android.view.View,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
null to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean n0()>
null to <androidx.recyclerview.widget.RecyclerView: boolean n0()>
<androidx.recyclerview.widget.RecyclerView: boolean n0()> to <androidx.recyclerview.widget.a: boolean p()>
<androidx.recyclerview.widget.a: boolean p()> to <java.util.ArrayList: int size()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)>
null to <androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: void o(java.lang.String)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()>
null to <androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()>
null to <androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)>
null to <androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>
null to <androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
null to <androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()>
null to <androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean p(androidx.recyclerview.widget.RecyclerView$e0)>
null to <androidx.recyclerview.widget.RecyclerView: boolean p(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: boolean p(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()>
<androidx.recyclerview.widget.RecyclerView: boolean p(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$m: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)>
<androidx.recyclerview.widget.RecyclerView: boolean p(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <androidx.recyclerview.widget.RecyclerView$e0: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView$e0: java.util.List q()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$m: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <androidx.recyclerview.widget.m: boolean f(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <java.util.Vector: boolean isEmpty()>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <androidx.recyclerview.widget.RecyclerView$m: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <java.util.ArrayList: boolean isEmpty()>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <java.util.Stack: boolean isEmpty()>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <java.util.AbstractCollection: boolean isEmpty()>
<androidx.recyclerview.widget.c: boolean g(androidx.recyclerview.widget.RecyclerView$e0,java.util.List)> to <z2.t: boolean isEmpty()>
<androidx.recyclerview.widget.RecyclerView$e0: void <clinit>()> to <java.util.Collections: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$e0: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: void <clinit>()> to <java.util.Collections: java.util.List emptyList()>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.m: boolean f(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean v()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void p0()>
null to <androidx.recyclerview.widget.RecyclerView: void p0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <android.view.View: void clearAnimation()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView: void z(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView: java.lang.String P()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView$e0: void f()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean z()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$h: void r(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void H0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: void <init>()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <android.view.ViewGroup: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: java.lang.String P()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
null to <androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)>
<androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)> to <android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>
<androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)> to <androidx.recyclerview.widget.d: void c(boolean)>
<androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void requestLayout()>
null to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void s()>
null to <androidx.recyclerview.widget.RecyclerView: void s()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.RecyclerView$w: void d()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.RecyclerView$e0: void c()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.RecyclerView$e0: boolean L()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void s()> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$w: void d()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void d()> to <androidx.recyclerview.widget.RecyclerView$e0: void c()>
<androidx.recyclerview.widget.RecyclerView$w: void d()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void s0(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)>
null to <androidx.recyclerview.widget.RecyclerView: void s0(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void s1()>
null to <androidx.recyclerview.widget.RecyclerView: void s1()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
null to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.k)>
null to <androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.k)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$k)>
null to <androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$k)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void t0()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <android.view.ViewGroup: void setClipToPadding(boolean)>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$l)>
null to <androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$l)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$m)>
null to <androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$m)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)>
null to <androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$s)>
null to <androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$s)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$u)>
null to <androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$u)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)>
null to <androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$v)>
null to <androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$v)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$x)>
null to <androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$x)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)>
null to <androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$c0)>
null to <androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$c0)>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)>
null to <androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()>
null to <androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void t(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void t(int,int)>
<androidx.recyclerview.widget.RecyclerView: void t(int,int)> to <i0.w: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void t(int,int)> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.recyclerview.widget.RecyclerView: void t(int,int)> to <android.widget.EdgeEffect: void onRelease()>
<androidx.recyclerview.widget.RecyclerView: void t(int,int)> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void t0()>
null to <androidx.recyclerview.widget.RecyclerView: void t0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean u0()>
null to <androidx.recyclerview.widget.RecyclerView: boolean u0()>
<androidx.recyclerview.widget.RecyclerView: boolean u0()> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
UI update?

<androidx.recyclerview.widget.RecyclerView: boolean v0()>
null to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
UI update?

<androidx.recyclerview.widget.RecyclerView: void w(int,int)>
null to <androidx.recyclerview.widget.RecyclerView: void w(int,int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void y(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$h: void q(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void G0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void y(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void y0()>
null to <androidx.recyclerview.widget.RecyclerView: void y0()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: int j()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.RecyclerView$w: void s()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: void y0()> to <androidx.recyclerview.widget.b: android.view.View i(int)>
<androidx.recyclerview.widget.b: int j()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$w: void s()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.b: android.view.View i(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
UI update?

<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)>
null to <androidx.recyclerview.widget.RecyclerView: void z(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <z2.t: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <z2.t: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$h: void r(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void H0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void z(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
com.google.android.material.snackbar.Snackbar$SnackbarLayout

<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.snackbar.Snackbar$SnackbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void onMeasure(int,int)>
null to <com.google.android.material.snackbar.Snackbar$SnackbarLayout: void onMeasure(int,int)>
UI update?
------------------------------------------------------
n.a

<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d$a: void <init>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<n.a: void <clinit>()>
null to <n.a: void <clinit>()>
UI update?

<n.a: android.content.res.ColorStateList getCardBackgroundColor()>
null to <n.a: android.content.res.ColorStateList getCardBackgroundColor()>
UI update?

<n.a: float getCardElevation()>
null to <n.a: float getCardElevation()>
UI update?

<n.a: int getContentPaddingBottom()>
null to <n.a: int getContentPaddingBottom()>
UI update?

<n.a: int getContentPaddingLeft()>
null to <n.a: int getContentPaddingLeft()>
UI update?

<n.a: int getContentPaddingRight()>
null to <n.a: int getContentPaddingRight()>
UI update?

<n.a: int getContentPaddingTop()>
null to <n.a: int getContentPaddingTop()>
UI update?

<n.a: float getMaxCardElevation()>
null to <n.a: float getMaxCardElevation()>
UI update?

<n.a: boolean getPreventCornerOverlap()>
null to <n.a: boolean getPreventCornerOverlap()>
UI update?

<n.a: float getRadius()>
null to <n.a: float getRadius()>
UI update?

<n.a: boolean getUseCompatPadding()>
null to <n.a: boolean getUseCompatPadding()>
UI update?

<n.a: void onMeasure(int,int)>
null to <n.a: void onMeasure(int,int)>
UI update?

<n.a: void setCardBackgroundColor(int)>
null to <n.a: void setCardBackgroundColor(int)>
UI update?

<n.a: void setCardBackgroundColor(android.content.res.ColorStateList)>
null to <n.a: void setCardBackgroundColor(android.content.res.ColorStateList)>
UI update?

<n.a: void setCardElevation(float)>
null to <n.a: void setCardElevation(float)>
UI update?

<n.a: void setMaxCardElevation(float)>
null to <n.a: void setMaxCardElevation(float)>
UI update?

<n.a: void setMinimumHeight(int)>
null to <n.a: void setMinimumHeight(int)>
<n.a: void setMinimumHeight(int)> to <android.widget.FrameLayout: void setMinimumHeight(int)>
UI update?

<n.a: void setMinimumWidth(int)>
null to <n.a: void setMinimumWidth(int)>
<n.a: void setMinimumWidth(int)> to <android.widget.FrameLayout: void setMinimumWidth(int)>
UI update?

<n.a: void setPadding(int,int,int,int)>
null to <n.a: void setPadding(int,int,int,int)>
UI update?

<n.a: void setPaddingRelative(int,int,int,int)>
null to <n.a: void setPaddingRelative(int,int,int,int)>
UI update?

<n.a: void setPreventCornerOverlap(boolean)>
null to <n.a: void setPreventCornerOverlap(boolean)>
UI update?

<n.a: void setRadius(float)>
null to <n.a: void setRadius(float)>
UI update?
------------------------------------------------------
com.google.android.material.internal.BaselineLayout

<n.a: void setUseCompatPadding(boolean)>
null to <n.a: void setUseCompatPadding(boolean)>
UI update?

<com.google.android.material.internal.BaselineLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.BaselineLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.BaselineLayout: int getBaseline()>
null to <com.google.android.material.internal.BaselineLayout: int getBaseline()>
UI update?

<com.google.android.material.internal.BaselineLayout: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.internal.BaselineLayout: void onLayout(boolean,int,int,int,int)>
UI update?
------------------------------------------------------
com.google.android.material.chip.Chip

<com.google.android.material.internal.BaselineLayout: void onMeasure(int,int)>
null to <com.google.android.material.internal.BaselineLayout: void onMeasure(int,int)>
UI update?

<com.google.android.material.chip.Chip: void <clinit>()>
null to <com.google.android.material.chip.Chip: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <com.google.android.material.chip.Chip: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.graphics.Rect: void <init>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.graphics.Rect: void <clinit>()>
UI update?

<com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.chip.Chip: void C(android.util.AttributeSet)>
null to <com.google.android.material.chip.Chip: void C(android.util.AttributeSet)>
UI update?

<com.google.android.material.chip.Chip: com.google.android.material.chip.a b(com.google.android.material.chip.Chip)>
null to <com.google.android.material.chip.Chip: com.google.android.material.chip.a b(com.google.android.material.chip.Chip)>
UI update?

<com.google.android.material.chip.Chip: boolean c(com.google.android.material.chip.Chip)>
null to <com.google.android.material.chip.Chip: boolean c(com.google.android.material.chip.Chip)>
<com.google.android.material.chip.Chip: boolean c(com.google.android.material.chip.Chip)> to <com.google.android.material.chip.Chip: boolean n()>
<com.google.android.material.chip.Chip: boolean n()> to <com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()>
<com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()> to <a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)>
<a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)> to <a0.d: android.graphics.drawable.Drawable a()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.RectF d(com.google.android.material.chip.Chip)>
null to <com.google.android.material.chip.Chip: android.graphics.RectF d(com.google.android.material.chip.Chip)>
UI update?

<com.google.android.material.chip.Chip: android.view.View$OnClickListener e(com.google.android.material.chip.Chip)>
null to <com.google.android.material.chip.Chip: android.view.View$OnClickListener e(com.google.android.material.chip.Chip)>
UI update?

<com.google.android.material.chip.Chip: boolean f(com.google.android.material.chip.Chip,boolean)>
null to <com.google.android.material.chip.Chip: boolean f(com.google.android.material.chip.Chip,boolean)>
UI update?

<com.google.android.material.chip.Chip: android.graphics.Rect g(com.google.android.material.chip.Chip)>
null to <com.google.android.material.chip.Chip: android.graphics.Rect g(com.google.android.material.chip.Chip)>
<com.google.android.material.chip.Chip: android.graphics.Rect g(com.google.android.material.chip.Chip)> to <com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>
<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()> to <com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>
<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()> to <android.graphics.Rect: void set(int,int,int,int)>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.a: void Y0(android.graphics.RectF)>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.Chip: boolean n()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)>
<com.google.android.material.chip.Chip: boolean n()> to <com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <a0.a: int f(android.graphics.drawable.Drawable)>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <com.google.android.material.chip.a: boolean O2()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()> to <a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Integer: int intValue()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <a0.d: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)> to <a0.d: android.graphics.drawable.Drawable a()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<a0.d: int getLayoutDirection()> to <a0.a: int f(android.graphics.drawable.Drawable)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>
null to <com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.a: void Y0(android.graphics.RectF)>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.Chip: boolean n()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)>
<com.google.android.material.chip.Chip: boolean n()> to <com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <a0.a: int f(android.graphics.drawable.Drawable)>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <com.google.android.material.chip.a: boolean O2()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()> to <a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Integer: int intValue()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <a0.d: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)> to <a0.d: android.graphics.drawable.Drawable a()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<a0.d: int getLayoutDirection()> to <a0.a: int f(android.graphics.drawable.Drawable)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>
null to <com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>
<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()> to <com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>
<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()> to <android.graphics.Rect: void set(int,int,int,int)>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.a: void Y0(android.graphics.RectF)>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()> to <com.google.android.material.chip.Chip: boolean n()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.chip.a: void Y0(android.graphics.RectF)> to <com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)>
<com.google.android.material.chip.Chip: boolean n()> to <com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <a0.a: int f(android.graphics.drawable.Drawable)>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <com.google.android.material.chip.a: boolean O2()>
<com.google.android.material.chip.a: void p0(android.graphics.Rect,android.graphics.RectF)> to <android.graphics.RectF: void setEmpty()>
<com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()> to <a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Integer: int intValue()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<a0.a: int f(android.graphics.drawable.Drawable)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<a0.a: int f(android.graphics.drawable.Drawable)> to <a0.d: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: int getLayoutDirection()>
<a0.a: int f(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)> to <a0.d: android.graphics.drawable.Drawable a()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<a0.d: int getLayoutDirection()> to <a0.a: int f(android.graphics.drawable.Drawable)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: z1.d getTextAppearance()>
null to <com.google.android.material.chip.Chip: z1.d getTextAppearance()>
<com.google.android.material.chip.Chip: z1.d getTextAppearance()> to <com.google.android.material.chip.a: z1.d i1()>
<com.google.android.material.chip.a: z1.d i1()> to <com.google.android.material.internal.h: z1.d d()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.Rect h()>
null to <com.google.android.material.chip.Chip: android.graphics.Rect h()>
<com.google.android.material.chip.Chip: android.graphics.Rect h()> to <com.google.android.material.chip.Chip: void <clinit>()>
<com.google.android.material.chip.Chip: android.graphics.Rect h()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <com.google.android.material.chip.Chip: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.graphics.Rect: void <init>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.Chip: void <clinit>()> to <android.graphics.Rect: void <clinit>()>
UI update?

<com.google.android.material.chip.Chip: void i(com.google.android.material.chip.a)>
null to <com.google.android.material.chip.Chip: void i(com.google.android.material.chip.a)>
UI update?

<com.google.android.material.chip.Chip: int[] j()>
null to <com.google.android.material.chip.Chip: int[] j()>
UI update?

<com.google.android.material.chip.Chip: void l()>
null to <com.google.android.material.chip.Chip: void l()>
<com.google.android.material.chip.Chip: void l()> to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()>
<com.google.android.material.chip.Chip: void l()> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
<com.google.android.material.chip.Chip: void l()> to <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>
UI update?

<com.google.android.material.chip.Chip: boolean m(android.view.MotionEvent)>
null to <com.google.android.material.chip.Chip: boolean m(android.view.MotionEvent)>
UI update?

<com.google.android.material.chip.Chip: boolean n()>
null to <com.google.android.material.chip.Chip: boolean n()>
<com.google.android.material.chip.Chip: boolean n()> to <com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()>
<com.google.android.material.chip.a: android.graphics.drawable.Drawable R0()> to <a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)>
<a0.a: android.graphics.drawable.Drawable q(android.graphics.drawable.Drawable)> to <a0.d: android.graphics.drawable.Drawable a()>
UI update?

<com.google.android.material.chip.Chip: void o(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.chip.Chip: void o(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.chip.Chip: void p()>
null to <com.google.android.material.chip.Chip: void p()>
UI update?

<com.google.android.material.chip.Chip: void q(int,int,int,int)>
null to <com.google.android.material.chip.Chip: void q(int,int,int,int)>
<com.google.android.material.chip.Chip: void q(int,int,int,int)> to <android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)>
null to <com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)>
null to <com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)>
<com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)> to <android.view.View: void refreshDrawableState()>
UI update?

<com.google.android.material.chip.Chip: void w(com.google.android.material.chip.a)>
null to <com.google.android.material.chip.Chip: void w(com.google.android.material.chip.a)>
UI update?

<com.google.android.material.chip.Chip: void x()>
null to <com.google.android.material.chip.Chip: void x()>
UI update?

<com.google.android.material.chip.Chip: boolean dispatchHoverEvent(android.view.MotionEvent)>
null to <com.google.android.material.chip.Chip: boolean dispatchHoverEvent(android.view.MotionEvent)>
UI update?

<com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)>
null to <com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)>
UI update?

<com.google.android.material.chip.Chip: void drawableStateChanged()>
null to <com.google.android.material.chip.Chip: void drawableStateChanged()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()>
null to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()>
null to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()>
UI update?

<com.google.android.material.chip.Chip: float getChipCornerRadius()>
null to <com.google.android.material.chip.Chip: float getChipCornerRadius()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()>
null to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()>
UI update?

<com.google.android.material.chip.Chip: float getChipEndPadding()>
null to <com.google.android.material.chip.Chip: float getChipEndPadding()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()>
null to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()>
UI update?

<com.google.android.material.chip.Chip: float getChipIconSize()>
null to <com.google.android.material.chip.Chip: float getChipIconSize()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()>
UI update?

<com.google.android.material.chip.Chip: float getChipMinHeight()>
null to <com.google.android.material.chip.Chip: float getChipMinHeight()>
<com.google.android.material.chip.Chip: float getChipMinHeight()> to <com.google.android.material.chip.a: float N0()>
UI update?

<com.google.android.material.chip.Chip: float getChipStartPadding()>
null to <com.google.android.material.chip.Chip: float getChipStartPadding()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()>
UI update?

<com.google.android.material.chip.Chip: float getChipStrokeWidth()>
null to <com.google.android.material.chip.Chip: float getChipStrokeWidth()>
UI update?

<com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()>
null to <com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()>
UI update?

<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()>
null to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()>
UI update?

<com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()>
null to <com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()>
<com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()> to <com.google.android.material.chip.a: java.lang.CharSequence S0()>
UI update?

<com.google.android.material.chip.Chip: float getCloseIconEndPadding()>
null to <com.google.android.material.chip.Chip: float getCloseIconEndPadding()>
UI update?

<com.google.android.material.chip.Chip: float getCloseIconSize()>
null to <com.google.android.material.chip.Chip: float getCloseIconSize()>
UI update?

<com.google.android.material.chip.Chip: float getCloseIconStartPadding()>
null to <com.google.android.material.chip.Chip: float getCloseIconStartPadding()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()>
UI update?

<com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()>
null to <com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()>
UI update?

<com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>
null to <com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>
UI update?

<com.google.android.material.chip.Chip: m1.h getHideMotionSpec()>
null to <com.google.android.material.chip.Chip: m1.h getHideMotionSpec()>
UI update?

<com.google.android.material.chip.Chip: float getIconEndPadding()>
null to <com.google.android.material.chip.Chip: float getIconEndPadding()>
UI update?

<com.google.android.material.chip.Chip: float getIconStartPadding()>
null to <com.google.android.material.chip.Chip: float getIconStartPadding()>
UI update?

<com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()>
null to <com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()>
UI update?

<com.google.android.material.chip.Chip: c2.k getShapeAppearanceModel()>
null to <com.google.android.material.chip.Chip: c2.k getShapeAppearanceModel()>
UI update?

<com.google.android.material.chip.Chip: m1.h getShowMotionSpec()>
null to <com.google.android.material.chip.Chip: m1.h getShowMotionSpec()>
UI update?

<com.google.android.material.chip.Chip: float getTextEndPadding()>
null to <com.google.android.material.chip.Chip: float getTextEndPadding()>
UI update?

<com.google.android.material.chip.Chip: float getTextStartPadding()>
null to <com.google.android.material.chip.Chip: float getTextStartPadding()>
UI update?

<com.google.android.material.chip.Chip: void onAttachedToWindow()>
null to <com.google.android.material.chip.Chip: void onAttachedToWindow()>
UI update?

<com.google.android.material.chip.Chip: int[] onCreateDrawableState(int)>
null to <com.google.android.material.chip.Chip: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)>
null to <com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)>
UI update?

<com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>
null to <com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void a0(java.lang.Object)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.internal.c: int b(android.view.View)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.ChipGroup: int o(android.view.View)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.ChipGroup: boolean c()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: boolean isClickable()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.Chip: boolean r()>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.Chip: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)>
<j0.c: void a0(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void a0(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>
<com.google.android.material.internal.c: int b(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<com.google.android.material.internal.c: int b(android.view.View)> to <java.lang.Integer: int intValue()>
<com.google.android.material.internal.c: int b(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<com.google.android.material.chip.ChipGroup: int o(android.view.View)> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: int o(android.view.View)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: boolean c()> to <com.google.android.material.internal.c: boolean c()>
<com.google.android.material.chip.Chip: boolean r()> to <com.google.android.material.chip.a: boolean o1()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <j0.c$c: void <init>(java.lang.Object)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$c: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
null to <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
UI update?

<com.google.android.material.chip.Chip: void onRtlPropertiesChanged(int)>
null to <com.google.android.material.chip.Chip: void onRtlPropertiesChanged(int)>
UI update?

<com.google.android.material.chip.Chip: boolean r()>
null to <com.google.android.material.chip.Chip: boolean r()>
<com.google.android.material.chip.Chip: boolean r()> to <com.google.android.material.chip.a: boolean o1()>
UI update?

<com.google.android.material.chip.Chip: boolean s()>
null to <com.google.android.material.chip.Chip: boolean s()>
<com.google.android.material.chip.Chip: boolean s()> to <com.google.android.material.chip.a: boolean q1()>
UI update?

<com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)> to <android.widget.CheckBox: void setBackground(android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)> to <com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()>
UI update?

<com.google.android.material.chip.Chip: void setBackgroundColor(int)>
null to <com.google.android.material.chip.Chip: void setBackgroundColor(int)>
<com.google.android.material.chip.Chip: void setBackgroundColor(int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setBackgroundResource(int)>
null to <com.google.android.material.chip.Chip: void setBackgroundResource(int)>
<com.google.android.material.chip.Chip: void setBackgroundResource(int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setCheckable(boolean)>
null to <com.google.android.material.chip.Chip: void setCheckable(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setCheckableResource(int)>
null to <com.google.android.material.chip.Chip: void setCheckableResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChecked(boolean)>
null to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.a: boolean o1()>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.ArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Stack: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.AbstractCollection: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <z2.t: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Vector: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>
null to <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>
null to <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconResource(int)>
null to <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)>
null to <com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>
null to <com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>
UI update?

<com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>
null to <com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)>
null to <com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipCornerRadius(float)>
null to <com.google.android.material.chip.Chip: void setChipCornerRadius(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)>
null to <com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.a)>
null to <com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.a)>
UI update?

<com.google.android.material.chip.Chip: void setChipEndPadding(float)>
null to <com.google.android.material.chip.Chip: void setChipEndPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>
null to <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>
null to <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconResource(int)>
null to <com.google.android.material.chip.Chip: void setChipIconResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconSize(float)>
null to <com.google.android.material.chip.Chip: void setChipIconSize(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconSizeResource(int)>
null to <com.google.android.material.chip.Chip: void setChipIconSizeResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconTintResource(int)>
null to <com.google.android.material.chip.Chip: void setChipIconTintResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconVisible(int)>
null to <com.google.android.material.chip.Chip: void setChipIconVisible(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>
null to <com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setChipMinHeight(float)>
null to <com.google.android.material.chip.Chip: void setChipMinHeight(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipMinHeightResource(int)>
null to <com.google.android.material.chip.Chip: void setChipMinHeightResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipStartPadding(float)>
null to <com.google.android.material.chip.Chip: void setChipStartPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)>
null to <com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipStrokeWidth(float)>
null to <com.google.android.material.chip.Chip: void setChipStrokeWidth(float)>
UI update?

<com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)>
null to <com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)>
UI update?

<com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)>
null to <com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setChipTextResource(int)>
null to <com.google.android.material.chip.Chip: void setChipTextResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)>
null to <com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>
null to <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)>
null to <com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconSize(float)>
null to <com.google.android.material.chip.Chip: void setCloseIconSize(float)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)>
null to <com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconTintResource(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconTintResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconVisible(int)>
null to <com.google.android.material.chip.Chip: void setCloseIconVisible(int)>
UI update?

<com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>
null to <com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <android.widget.CheckBox: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <android.widget.CheckBox: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <android.widget.CheckBox: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
UI update?

<com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <android.widget.CheckBox: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.chip.Chip: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)>
null to <com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)>
<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)> to <android.text.TextUtils$TruncateAt: void <clinit>()>
<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)> to <com.google.android.material.chip.a: void q2(android.text.TextUtils$TruncateAt)>
<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)> to <android.widget.CheckBox: void setEllipsize(android.text.TextUtils$TruncateAt)>
UI update?

<com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)>
null to <com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)>
UI update?

<com.google.android.material.chip.Chip: void setGravity(int)>
null to <com.google.android.material.chip.Chip: void setGravity(int)>
UI update?

<com.google.android.material.chip.Chip: void setHideMotionSpec(m1.h)>
null to <com.google.android.material.chip.Chip: void setHideMotionSpec(m1.h)>
UI update?

<com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)>
null to <com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setIconEndPadding(float)>
null to <com.google.android.material.chip.Chip: void setIconEndPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setIconStartPadding(float)>
null to <com.google.android.material.chip.Chip: void setIconStartPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setLayoutDirection(int)>
null to <com.google.android.material.chip.Chip: void setLayoutDirection(int)>
UI update?

<com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setLines(int)>
null to <com.google.android.material.chip.Chip: void setLines(int)>
UI update?

<com.google.android.material.chip.Chip: void setMaxLines(int)>
null to <com.google.android.material.chip.Chip: void setMaxLines(int)>
<com.google.android.material.chip.Chip: void setMaxLines(int)> to <android.widget.CheckBox: void setMaxLines(int)>
<com.google.android.material.chip.Chip: void setMaxLines(int)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setMaxWidth(int)>
null to <com.google.android.material.chip.Chip: void setMaxWidth(int)>
UI update?

<com.google.android.material.chip.Chip: void setMinLines(int)>
null to <com.google.android.material.chip.Chip: void setMinLines(int)>
UI update?

<com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)>
null to <com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)>
UI update?

<com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)>
UI update?

<com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)>
null to <com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.chip.Chip: void setRippleColorResource(int)>
null to <com.google.android.material.chip.Chip: void setRippleColorResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setShapeAppearanceModel(c2.k)>
null to <com.google.android.material.chip.Chip: void setShapeAppearanceModel(c2.k)>
UI update?

<com.google.android.material.chip.Chip: void setShowMotionSpec(m1.h)>
null to <com.google.android.material.chip.Chip: void setShowMotionSpec(m1.h)>
UI update?

<com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)>
null to <com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setSingleLine(boolean)>
null to <com.google.android.material.chip.Chip: void setSingleLine(boolean)>
<com.google.android.material.chip.Chip: void setSingleLine(boolean)> to <android.widget.CheckBox: void setSingleLine(boolean)>
<com.google.android.material.chip.Chip: void setSingleLine(boolean)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.Chip: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
null to <com.google.android.material.chip.Chip: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
UI update?

<com.google.android.material.chip.Chip: void setTextAppearance(z1.d)>
null to <com.google.android.material.chip.Chip: void setTextAppearance(z1.d)>
UI update?

<com.google.android.material.chip.Chip: void setTextAppearanceResource(int)>
null to <com.google.android.material.chip.Chip: void setTextAppearanceResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setTextEndPadding(float)>
null to <com.google.android.material.chip.Chip: void setTextEndPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)>
UI update?

<com.google.android.material.chip.Chip: void setTextStartPadding(float)>
null to <com.google.android.material.chip.Chip: void setTextStartPadding(float)>
UI update?

<com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)>
null to <com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.c$d

<com.google.android.material.chip.Chip: boolean v()>
null to <com.google.android.material.chip.Chip: boolean v()>
UI update?

<androidx.appcompat.widget.c$d: boolean a()>
null to <androidx.appcompat.widget.c$d: boolean a()>
UI update?

<androidx.appcompat.widget.c$d: boolean b()>
null to <androidx.appcompat.widget.c$d: boolean b()>
UI update?

<androidx.appcompat.widget.c$d: boolean performClick()>
null to <androidx.appcompat.widget.c$d: boolean performClick()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.a0

<androidx.appcompat.widget.c$d: boolean setFrame(int,int,int,int)>
null to <androidx.appcompat.widget.c$d: boolean setFrame(int,int,int,int)>
UI update?

<androidx.appcompat.widget.a0: void c()>
null to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.a0: void c()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.a0: void drawableStateChanged()>
null to <androidx.appcompat.widget.a0: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.a0: int getAutoSizeMaxTextSize()>
null to <androidx.appcompat.widget.a0: int getAutoSizeMaxTextSize()>
UI update?

<androidx.appcompat.widget.a0: int getAutoSizeMinTextSize()>
null to <androidx.appcompat.widget.a0: int getAutoSizeMinTextSize()>
UI update?

<androidx.appcompat.widget.a0: int getAutoSizeStepGranularity()>
null to <androidx.appcompat.widget.a0: int getAutoSizeStepGranularity()>
<androidx.appcompat.widget.a0: int getAutoSizeStepGranularity()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.a0: int getAutoSizeStepGranularity()> to <androidx.appcompat.widget.z: int g()>
<androidx.appcompat.widget.a0: int getAutoSizeStepGranularity()> to <android.widget.TextView: int getAutoSizeStepGranularity()>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: int g()> to <androidx.appcompat.widget.b0: int l()>
<androidx.appcompat.widget.b0: int l()> to <java.lang.Math: int round(float)>
UI update?

<androidx.appcompat.widget.a0: int[] getAutoSizeTextAvailableSizes()>
null to <androidx.appcompat.widget.a0: int[] getAutoSizeTextAvailableSizes()>
UI update?

<androidx.appcompat.widget.a0: int getAutoSizeTextType()>
null to <androidx.appcompat.widget.a0: int getAutoSizeTextType()>
UI update?

<androidx.appcompat.widget.a0: int getFirstBaselineToTopHeight()>
null to <androidx.appcompat.widget.a0: int getFirstBaselineToTopHeight()>
UI update?

<androidx.appcompat.widget.a0: int getLastBaselineToBottomHeight()>
null to <androidx.appcompat.widget.a0: int getLastBaselineToBottomHeight()>
UI update?

<androidx.appcompat.widget.a0: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.a0: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.a0: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.a0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.a0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.a0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.a0: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>
null to <androidx.appcompat.widget.a0: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>
UI update?

<androidx.appcompat.widget.a0: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>
null to <androidx.appcompat.widget.a0: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>
UI update?

<androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
null to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.a0: android.view.textclassifier.TextClassifier getTextClassifier()>
null to <androidx.appcompat.widget.a0: android.view.textclassifier.TextClassifier getTextClassifier()>
UI update?

<androidx.appcompat.widget.a0: g0.c$a getTextMetricsParamsCompat()>
null to <androidx.appcompat.widget.a0: g0.c$a getTextMetricsParamsCompat()>
UI update?

<androidx.appcompat.widget.a0: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.a0: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.a0: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.a0: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.a0: void onMeasure(int,int)>
null to <androidx.appcompat.widget.a0: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.a0: void onTextChanged(java.lang.CharSequence,int,int,int)>
null to <androidx.appcompat.widget.a0: void onTextChanged(java.lang.CharSequence,int,int,int)>
UI update?

<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
null to <androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <androidx.appcompat.widget.z: void t(int,int,int,int)>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void t(int,int,int,int)> to <androidx.appcompat.widget.b0: void u(int,int,int,int)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: void b()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: boolean z()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: void E(float,float,float)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void b()> to <android.graphics.RectF: void setEmpty()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: float getTextSize()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingTop()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingBottom()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getHeight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingRight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingLeft()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredWidth()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredHeight()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: int i(android.graphics.RectF)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: double floor(double)>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)> to <android.widget.TextView: boolean isHorizontallyScrollable()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: int intValue()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: int size()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: void <init>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Arrays: void sort(int[])>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getHeight()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getLineEnd(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.StaticLayout: int getLineCount()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void q(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: int getMaxLines()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.EditText: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.k: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout$Alignment: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.Math: int round(float)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void <init>()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void set(android.text.TextPaint)>
<androidx.appcompat.widget.b0: void q(int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void q(int)> to <android.graphics.Paint: void reset()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.k: java.lang.CharSequence getText()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: float floatValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: java.lang.Float valueOf(float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$c: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout build()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
<java.lang.Float: float floatValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
null to <androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <androidx.appcompat.widget.z: void u(int[],int)>
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void u(int[],int)> to <androidx.appcompat.widget.b0: void v(int[],int)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: void b()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean z()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean B()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.util.Arrays: java.lang.String toString(int[])>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void b()> to <android.graphics.RectF: void setEmpty()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: float getTextSize()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingTop()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingBottom()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getHeight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingRight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingLeft()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredWidth()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredHeight()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: int i(android.graphics.RectF)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: double floor(double)>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: int intValue()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: int size()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: void <init>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Arrays: void sort(int[])>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)> to <android.widget.TextView: boolean isHorizontallyScrollable()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getHeight()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getLineEnd(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.StaticLayout: int getLineCount()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void q(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: int getMaxLines()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.EditText: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.k: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout$Alignment: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.Math: int round(float)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void <init>()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void set(android.text.TextPaint)>
<androidx.appcompat.widget.b0: void q(int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void q(int)> to <android.graphics.Paint: void reset()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.k: java.lang.CharSequence getText()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: float floatValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: java.lang.Float valueOf(float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$c: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout build()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
<java.lang.Float: float floatValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.a0: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.a0: void setAutoSizeTextTypeWithDefaults(int)>
null to <androidx.appcompat.widget.a0: void setAutoSizeTextTypeWithDefaults(int)>
UI update?

<androidx.appcompat.widget.a0: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
null to <androidx.appcompat.widget.a0: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
UI update?

<androidx.appcompat.widget.a0: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
null to <androidx.appcompat.widget.a0: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
UI update?

<androidx.appcompat.widget.a0: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.a0: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?

<androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)>
null to <androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)>
<androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)> to <android.widget.TextView: void setFirstBaselineToTopHeight(int)>
<androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)> to <androidx.core.widget.i: void m(android.widget.TextView,int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: int getPaddingBottom()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: int getPaddingRight()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: int getPaddingLeft()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <androidx.appcompat.widget.a0: void setFirstBaselineToTopHeight(int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <android.widget.TextView: void setFirstBaselineToTopHeight(int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <h0.h: int c(int)>
<androidx.core.widget.i: void m(android.widget.TextView,int)> to <java.lang.Math: int abs(int)>
<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int I(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int H(android.view.View)>
<h0.h: int c(int)> to <java.lang.IllegalArgumentException: void <init>()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int I(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.widget.FrameLayout: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.Spinner: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.TextView: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.ViewGroup: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingStart()>
<i0.w: int I(android.view.View)> to <android.widget.LinearLayout: int getPaddingStart()>
<i0.w: int H(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.widget.FrameLayout: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.Spinner: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.TextView: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.ViewGroup: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingEnd()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.a0: void setLastBaselineToBottomHeight(int)>
null to <androidx.appcompat.widget.a0: void setLastBaselineToBottomHeight(int)>
UI update?

<androidx.appcompat.widget.a0: void setLineHeight(int)>
null to <androidx.appcompat.widget.a0: void setLineHeight(int)>
<androidx.appcompat.widget.a0: void setLineHeight(int)> to <androidx.core.widget.i: void o(android.widget.TextView,int)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <h0.h: int c(int)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.widget.TextView: void setLineSpacing(float,float)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<h0.h: int c(int)> to <java.lang.IllegalArgumentException: void <init>()>
UI update?

<androidx.appcompat.widget.a0: void setPrecomputedText(g0.c)>
null to <androidx.appcompat.widget.a0: void setPrecomputedText(g0.c)>
UI update?

<androidx.appcompat.widget.a0: void setTextClassifier(android.view.textclassifier.TextClassifier)>
null to <androidx.appcompat.widget.a0: void setTextClassifier(android.view.textclassifier.TextClassifier)>
UI update?

<androidx.appcompat.widget.a0: void setTextFuture(java.util.concurrent.Future)>
null to <androidx.appcompat.widget.a0: void setTextFuture(java.util.concurrent.Future)>
UI update?

<androidx.appcompat.widget.a0: void setTextMetricsParamsCompat(g0.c$a)>
null to <androidx.appcompat.widget.a0: void setTextMetricsParamsCompat(g0.c$a)>
UI update?

<androidx.appcompat.widget.a0: void setTextSize(int,float)>
null to <androidx.appcompat.widget.a0: void setTextSize(int,float)>
<androidx.appcompat.widget.a0: void setTextSize(int,float)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.a0: void setTextSize(int,float)> to <androidx.appcompat.widget.z: void A(int,float)>
<androidx.appcompat.widget.a0: void setTextSize(int,float)> to <android.widget.TextView: void setTextSize(int,float)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.appcompat.widget.z: void B(int,float)>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.appcompat.widget.z: boolean l()>
<androidx.appcompat.widget.z: void B(int,float)> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.z: boolean l()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
com.google.android.material.internal.NavigationMenuView

<com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.NavigationMenuView: void b(androidx.appcompat.view.menu.e)>
null to <com.google.android.material.internal.NavigationMenuView: void b(androidx.appcompat.view.menu.e)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.c0

<com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()>
null to <com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()>
UI update?

<androidx.appcompat.widget.c0: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.c0: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.c0: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.c0: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.c0: void drawableStateChanged()>
null to <androidx.appcompat.widget.c0: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.c0: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.c0: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.c0: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.c0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.c0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.c0: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.AlertDialogLayout

<androidx.appcompat.widget.AlertDialogLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.AlertDialogLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.AlertDialogLayout: void A(android.view.View,int,int,int,int)>
null to <androidx.appcompat.widget.AlertDialogLayout: void A(android.view.View,int,int,int,int)>
UI update?

<androidx.appcompat.widget.AlertDialogLayout: int B(android.view.View)>
null to <androidx.appcompat.widget.AlertDialogLayout: int B(android.view.View)>
UI update?

<androidx.appcompat.widget.AlertDialogLayout: boolean C(int,int)>
null to <androidx.appcompat.widget.AlertDialogLayout: boolean C(int,int)>
UI update?

<androidx.appcompat.widget.AlertDialogLayout: void l(int,int)>
null to <androidx.appcompat.widget.AlertDialogLayout: void l(int,int)>
UI update?

<androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)>
UI update?
------------------------------------------------------
com.google.android.material.internal.NavigationMenuItemView

<androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)>
null to <androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void <clinit>()>
null to <com.google.android.material.internal.NavigationMenuItemView: void <clinit>()>
<com.google.android.material.internal.NavigationMenuItemView: void <clinit>()> to <com.google.android.material.internal.NavigationMenuItemView: void <clinit>()>
<com.google.android.material.internal.NavigationMenuItemView: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()>
null to <com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <com.google.android.material.internal.NavigationMenuItemView: void <clinit>()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.graphics.drawable.ColorDrawable: void <init>(int)>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.graphics.drawable.StateListDrawable: void <init>()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <h.d: android.content.res.Resources$Theme getTheme()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.view.ViewGroup: android.content.Context getContext()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.util.TypedValue: void <init>()>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable C()> to <android.view.View: void <clinit>()>
<com.google.android.material.internal.NavigationMenuItemView: void <clinit>()> to <com.google.android.material.internal.NavigationMenuItemView: void <clinit>()>
<com.google.android.material.internal.NavigationMenuItemView: void <clinit>()> to <android.view.View: void <clinit>()>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: boolean d()>
null to <com.google.android.material.internal.NavigationMenuItemView: boolean d()>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.g getItemData()>
null to <com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.g getItemData()>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: int[] onCreateDrawableState(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)>
<com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)> to <android.view.View: void refreshDrawableState()>
<com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)> to <android.widget.CheckedTextView: void setChecked(boolean)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>
UI update?

<com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.g0

<com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)>
null to <com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)>
<com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
UI update?
<com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)>
null to <androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.NoSuchFieldException: void printStackTrace()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.widget.ListView: void setCacheColorHint(int)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.g0: void a()>
null to <androidx.appcompat.widget.g0: void a()>
<androidx.appcompat.widget.g0: void a()> to <android.widget.ListView: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <i0.a0: void b()>
<androidx.appcompat.widget.g0: void a()> to <com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <com.google.android.material.button.MaterialButton: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <android.widget.ImageButton: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <android.widget.Button: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <android.view.View: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void a()> to <android.widget.ListView: android.view.View getChildAt(int)>
<androidx.appcompat.widget.g0: void a()> to <android.widget.ListView: int getFirstVisiblePosition()>
<androidx.appcompat.widget.g0: void a()> to <androidx.appcompat.widget.g0: void drawableStateChanged()>
<i0.a0: void b()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: void b()> to <android.view.ViewPropertyAnimator: void cancel()>
<i0.a0: void b()> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)> to <android.widget.ImageButton: void setPressed(boolean)>
<com.google.android.material.button.MaterialButton: void setPressed(boolean)> to <com.google.android.material.button.MaterialButtonToggleGroup$f: void a(com.google.android.material.button.MaterialButton,boolean)>
<com.google.android.material.button.MaterialButton: void setPressed(boolean)> to <android.widget.Button: void setPressed(boolean)>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <android.widget.ListView: void drawableStateChanged()>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <androidx.appcompat.widget.g0: void k()>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)>
<com.google.android.material.button.MaterialButtonToggleGroup$f: void a(com.google.android.material.button.MaterialButton,boolean)> to <android.view.ViewGroup: void invalidate()>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: android.graphics.drawable.Drawable getSelector()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <f.c: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.e: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.d: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: int[] getDrawableState()>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: boolean isPressed()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0: boolean j()>
<androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)> to <androidx.appcompat.widget.g0$a: void c(boolean)>
<androidx.appcompat.widget.g0$a: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<f.c: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean f(int[])>
<a0.d: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <f.c: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <f.c: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<a0.d: boolean f(int[])> to <a0.d: boolean c()>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<a0.d: boolean f(int[])> to <a0.e: boolean c()>
<a0.e: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
UI update?

<androidx.appcompat.widget.g0: void b(android.view.View,int)>
null to <androidx.appcompat.widget.g0: void b(android.view.View,int)>
<androidx.appcompat.widget.g0: void b(android.view.View,int)> to <android.widget.ListView: long getItemIdAtPosition(int)>
<androidx.appcompat.widget.g0: void b(android.view.View,int)> to <android.widget.ListView: boolean performItemClick(android.view.View,int,long)>
UI update?

<androidx.appcompat.widget.g0: void c(android.graphics.Canvas)>
null to <androidx.appcompat.widget.g0: void c(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.g0: void f(int,android.view.View)>
null to <androidx.appcompat.widget.g0: void f(int,android.view.View)>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <java.lang.IllegalAccessException: void printStackTrace()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.widget.ListView: void refreshDrawableState()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.widget.TextView: boolean isEnabled()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.view.View: boolean isEnabled()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.view.View: int getBottom()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.view.View: int getRight()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.view.View: int getTop()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <android.view.View: int getLeft()>
<androidx.appcompat.widget.g0: void f(int,android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.g0: boolean j()>
null to <androidx.appcompat.widget.g0: boolean j()>
UI update?

<androidx.appcompat.widget.g0: void k()>
null to <androidx.appcompat.widget.g0: void k()>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: android.graphics.drawable.Drawable getSelector()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <f.c: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.e: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.d: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: int[] getDrawableState()>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: boolean isPressed()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0: boolean j()>
<androidx.appcompat.widget.g0$a: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<f.c: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean f(int[])>
<a0.d: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <f.c: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <f.c: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<a0.d: boolean f(int[])> to <a0.d: boolean c()>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<a0.d: boolean f(int[])> to <a0.e: boolean c()>
<a0.e: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
UI update?

<androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)>
null to <androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)>
<androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)> to <androidx.appcompat.widget.g0$a: void c(boolean)>
UI update?

<androidx.appcompat.widget.g0: void dispatchDraw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.g0: void dispatchDraw(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.g0: void drawableStateChanged()>
null to <androidx.appcompat.widget.g0: void drawableStateChanged()>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <android.widget.ListView: void drawableStateChanged()>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <androidx.appcompat.widget.g0: void k()>
<androidx.appcompat.widget.g0: void drawableStateChanged()> to <androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: android.graphics.drawable.Drawable getSelector()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <f.c: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.e: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <a0.d: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: int[] getDrawableState()>
<androidx.appcompat.widget.g0: void k()> to <android.widget.ListView: boolean isPressed()>
<androidx.appcompat.widget.g0: void k()> to <androidx.appcompat.widget.g0: boolean j()>
<androidx.appcompat.widget.g0: void setSelectorEnabled(boolean)> to <androidx.appcompat.widget.g0$a: void c(boolean)>
<androidx.appcompat.widget.g0$a: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<f.c: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean f(int[])>
<a0.d: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <f.c: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <f.c: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<a0.d: boolean f(int[])> to <a0.d: boolean c()>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<a0.d: boolean f(int[])> to <a0.e: boolean c()>
<a0.e: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
UI update?

<androidx.appcompat.widget.g0: boolean hasFocus()>
null to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.appcompat.widget.g0: boolean hasFocus()> to <android.widget.ListView: boolean hasFocus()>
UI update?

<androidx.appcompat.widget.g0: boolean hasWindowFocus()>
null to <androidx.appcompat.widget.g0: boolean hasWindowFocus()>
UI update?

<androidx.appcompat.widget.g0: boolean isFocused()>
null to <androidx.appcompat.widget.g0: boolean isFocused()>
<androidx.appcompat.widget.g0: boolean isFocused()> to <android.widget.ListView: boolean isFocused()>
UI update?

<androidx.appcompat.widget.g0: boolean isInTouchMode()>
null to <androidx.appcompat.widget.g0: boolean isInTouchMode()>
<androidx.appcompat.widget.g0: boolean isInTouchMode()> to <android.widget.ListView: boolean isInTouchMode()>
UI update?

<androidx.appcompat.widget.g0: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.g0: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.g0: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.g0: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getAction()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <androidx.appcompat.widget.g0$b: void a()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ListView: int pointToPosition(int,int)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getY()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getX()>
<androidx.appcompat.widget.g0$b: void a()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
UI update?

<androidx.appcompat.widget.g0: void setListSelectionHidden(boolean)>
null to <androidx.appcompat.widget.g0: void setListSelectionHidden(boolean)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyTextView

<com.simplemobiletools.commons.views.MyTextView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyTextView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.j0

<com.simplemobiletools.commons.views.MyTextView: void a(int,int,int)>
null to <com.simplemobiletools.commons.views.MyTextView: void a(int,int,int)>
<com.simplemobiletools.commons.views.MyTextView: void a(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyTextView: void a(int,int,int)> to <android.widget.TextView: void setLinkTextColor(int)>
UI update?

<androidx.appcompat.widget.j0: void <init>(android.content.Context)>
null to <androidx.appcompat.widget.j0: void <init>(android.content.Context)>
UI update?

<androidx.appcompat.widget.j0: void A(android.view.View,int,int,int,int)>
null to <androidx.appcompat.widget.j0: void A(android.view.View,int,int,int,int)>
UI update?

<androidx.appcompat.widget.j0: void k(int,int)>
null to <androidx.appcompat.widget.j0: void k(int,int)>
UI update?

<androidx.appcompat.widget.j0: void l(int,int)>
null to <androidx.appcompat.widget.j0: void l(int,int)>
UI update?

<androidx.appcompat.widget.j0: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.j0: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.j0: void g(android.graphics.Canvas)>
null to <androidx.appcompat.widget.j0: void g(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.j0: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.j0: int getBaseline()>
null to <androidx.appcompat.widget.j0: int getBaseline()>
UI update?

<androidx.appcompat.widget.j0: int getBaselineAlignedChildIndex()>
null to <androidx.appcompat.widget.j0: int getBaselineAlignedChildIndex()>
UI update?

<androidx.appcompat.widget.j0: android.graphics.drawable.Drawable getDividerDrawable()>
null to <androidx.appcompat.widget.j0: android.graphics.drawable.Drawable getDividerDrawable()>
UI update?

<androidx.appcompat.widget.j0: int getDividerPadding()>
null to <androidx.appcompat.widget.j0: int getDividerPadding()>
UI update?

<androidx.appcompat.widget.j0: int getDividerWidth()>
null to <androidx.appcompat.widget.j0: int getDividerWidth()>
UI update?

<androidx.appcompat.widget.j0: int getGravity()>
null to <androidx.appcompat.widget.j0: int getGravity()>
UI update?

<androidx.appcompat.widget.j0: int getOrientation()>
null to <androidx.appcompat.widget.j0: int getOrientation()>
UI update?

<androidx.appcompat.widget.j0: int getShowDividers()>
null to <androidx.appcompat.widget.j0: int getShowDividers()>
UI update?

<androidx.appcompat.widget.j0: int getVirtualChildCount()>
null to <androidx.appcompat.widget.j0: int getVirtualChildCount()>
UI update?

<androidx.appcompat.widget.j0: float getWeightSum()>
null to <androidx.appcompat.widget.j0: float getWeightSum()>
UI update?

<androidx.appcompat.widget.j0: void h(android.graphics.Canvas)>
null to <androidx.appcompat.widget.j0: void h(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.j0: void i(android.graphics.Canvas,int)>
null to <androidx.appcompat.widget.j0: void i(android.graphics.Canvas,int)>
UI update?

<androidx.appcompat.widget.j0: void j(android.graphics.Canvas,int)>
null to <androidx.appcompat.widget.j0: void j(android.graphics.Canvas,int)>
UI update?

<androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a m()>
null to <androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a m()>
UI update?

<androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a n(android.util.AttributeSet)>
null to <androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a n(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a o(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.j0: androidx.appcompat.widget.j0$a o(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.j0: void onDraw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.j0: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.j0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <androidx.appcompat.widget.j0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.j0: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.j0: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.j0: void onMeasure(int,int)>
null to <androidx.appcompat.widget.j0: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.j0: int p(android.view.View,int)>
null to <androidx.appcompat.widget.j0: int p(android.view.View,int)>
UI update?

<androidx.appcompat.widget.j0: int q(android.view.View)>
null to <androidx.appcompat.widget.j0: int q(android.view.View)>
UI update?

<androidx.appcompat.widget.j0: int r(android.view.View)>
null to <androidx.appcompat.widget.j0: int r(android.view.View)>
UI update?

<androidx.appcompat.widget.j0: android.view.View s(int)>
null to <androidx.appcompat.widget.j0: android.view.View s(int)>
UI update?

<androidx.appcompat.widget.j0: void setBaselineAligned(boolean)>
null to <androidx.appcompat.widget.j0: void setBaselineAligned(boolean)>
UI update?

<androidx.appcompat.widget.j0: void setBaselineAlignedChildIndex(int)>
null to <androidx.appcompat.widget.j0: void setBaselineAlignedChildIndex(int)>
UI update?

<androidx.appcompat.widget.j0: void setDividerPadding(int)>
null to <androidx.appcompat.widget.j0: void setDividerPadding(int)>
UI update?

<androidx.appcompat.widget.j0: void setGravity(int)>
null to <androidx.appcompat.widget.j0: void setGravity(int)>
<androidx.appcompat.widget.j0: void setGravity(int)> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.appcompat.widget.j0: void setHorizontalGravity(int)>
null to <androidx.appcompat.widget.j0: void setHorizontalGravity(int)>
UI update?

<androidx.appcompat.widget.j0: void setMeasureWithLargestChildEnabled(boolean)>
null to <androidx.appcompat.widget.j0: void setMeasureWithLargestChildEnabled(boolean)>
UI update?

<androidx.appcompat.widget.j0: void setOrientation(int)>
null to <androidx.appcompat.widget.j0: void setOrientation(int)>
<androidx.appcompat.widget.j0: void setOrientation(int)> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.appcompat.widget.j0: void setShowDividers(int)>
null to <androidx.appcompat.widget.j0: void setShowDividers(int)>
UI update?

<androidx.appcompat.widget.j0: void setVerticalGravity(int)>
null to <androidx.appcompat.widget.j0: void setVerticalGravity(int)>
UI update?

<androidx.appcompat.widget.j0: void setWeightSum(float)>
null to <androidx.appcompat.widget.j0: void setWeightSum(float)>
UI update?

<androidx.appcompat.widget.j0: boolean shouldDelayChildPressedState()>
null to <androidx.appcompat.widget.j0: boolean shouldDelayChildPressedState()>
UI update?

<androidx.appcompat.widget.j0: boolean t(int)>
null to <androidx.appcompat.widget.j0: boolean t(int)>
UI update?

<androidx.appcompat.widget.j0: void u(int,int,int,int)>
null to <androidx.appcompat.widget.j0: void u(int,int,int,int)>
UI update?

<androidx.appcompat.widget.j0: void v(int,int,int,int)>
null to <androidx.appcompat.widget.j0: void v(int,int,int,int)>
UI update?

<androidx.appcompat.widget.j0: void w(android.view.View,int,int,int,int,int)>
null to <androidx.appcompat.widget.j0: void w(android.view.View,int,int,int,int,int)>
UI update?

<androidx.appcompat.widget.j0: void x(int,int)>
null to <androidx.appcompat.widget.j0: void x(int,int)>
UI update?

<androidx.appcompat.widget.j0: int y(int)>
null to <androidx.appcompat.widget.j0: int y(int)>
UI update?
------------------------------------------------------
com.google.android.material.timepicker.ClockFaceView

<androidx.appcompat.widget.j0: void z(int,int)>
null to <androidx.appcompat.widget.j0: void z(int,int)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.timepicker.ClockFaceView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.timepicker.ClockFaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: com.google.android.material.timepicker.ClockHandView H(com.google.android.material.timepicker.ClockFaceView)>
null to <com.google.android.material.timepicker.ClockFaceView: com.google.android.material.timepicker.ClockHandView H(com.google.android.material.timepicker.ClockFaceView)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: int I(com.google.android.material.timepicker.ClockFaceView)>
null to <com.google.android.material.timepicker.ClockFaceView: int I(com.google.android.material.timepicker.ClockFaceView)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: android.util.SparseArray J(com.google.android.material.timepicker.ClockFaceView)>
null to <com.google.android.material.timepicker.ClockFaceView: android.util.SparseArray J(com.google.android.material.timepicker.ClockFaceView)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void K()>
null to <com.google.android.material.timepicker.ClockFaceView: void K()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <com.google.android.material.timepicker.ClockHandView: android.graphics.RectF d()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.RectF: void set(android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.Rect: void offset(int,int)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: void invalidate()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: android.text.TextPaint getPaint()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: int getPaddingTop()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: int getPaddingLeft()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.view.View: void getDrawingRect(android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.util.SparseArray: java.lang.Object get(int)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.util.SparseArray: int size()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float width()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerY()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerX()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.Shader$TileMode: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)>
null to <com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float width()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerY()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerX()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.Shader$TileMode: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: float M(float,float,float)>
null to <com.google.android.material.timepicker.ClockFaceView: float M(float,float,float)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void D(int)>
null to <com.google.android.material.timepicker.ClockFaceView: void D(int)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void O(int)>
null to <com.google.android.material.timepicker.ClockFaceView: void O(int)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void N(java.lang.String[],int)>
null to <com.google.android.material.timepicker.ClockFaceView: void N(java.lang.String[],int)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void a(float,boolean)>
null to <com.google.android.material.timepicker.ClockFaceView: void a(float,boolean)>
<com.google.android.material.timepicker.ClockFaceView: void a(float,boolean)> to <java.lang.Math: float abs(float)>
<com.google.android.material.timepicker.ClockFaceView: void a(float,boolean)> to <com.google.android.material.timepicker.ClockFaceView: void K()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <com.google.android.material.timepicker.ClockHandView: android.graphics.RectF d()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.RectF: void set(android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.graphics.Rect: void offset(int,int)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: void invalidate()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: android.text.TextPaint getPaint()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: int getPaddingTop()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.widget.TextView: int getPaddingLeft()>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.view.View: void getDrawingRect(android.graphics.Rect)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.util.SparseArray: java.lang.Object get(int)>
<com.google.android.material.timepicker.ClockFaceView: void K()> to <android.util.SparseArray: int size()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float width()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerY()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: float centerX()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.Shader$TileMode: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient L(android.graphics.RectF,android.graphics.RectF)> to <android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void Z(java.lang.Object)>
<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$b: j0.c$b a(int,int,boolean,int)>
<j0.c: void Z(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void Z(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <j0.c$b: void <init>(java.lang.Object)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$b: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.timepicker.ClockFaceView: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.timepicker.ClockFaceView: void onLayout(boolean,int,int,int,int)>
UI update?
------------------------------------------------------
com.google.android.material.textview.MaterialTextView

<com.google.android.material.timepicker.ClockFaceView: void onMeasure(int,int)>
null to <com.google.android.material.timepicker.ClockFaceView: void onMeasure(int,int)>
UI update?

<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
null to <com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
UI update?

<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)>
null to <com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <l1.l: void <clinit>()>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <android.content.res.TypedArray: void recycle()>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <androidx.appcompat.widget.a0: void setLineHeight(int)>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <android.widget.TextView: android.content.Context getContext()>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<com.google.android.material.textview.MaterialTextView: void f(android.content.res.Resources$Theme,int)> to <com.google.android.material.textview.MaterialTextView: int i(android.content.Context,android.content.res.TypedArray,int[])>
<l1.l: void <clinit>()> to <l1.l: void <clinit>()>
<androidx.appcompat.widget.a0: void setLineHeight(int)> to <androidx.core.widget.i: void o(android.widget.TextView,int)>
<com.google.android.material.textview.MaterialTextView: int i(android.content.Context,android.content.res.TypedArray,int[])> to <z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <h0.h: int c(int)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.widget.TextView: void setLineSpacing(float,float)>
<androidx.core.widget.i: void o(android.widget.TextView,int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.util.TypedValue: void <init>()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <h.d: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: void recycle()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<h0.h: int c(int)> to <java.lang.IllegalArgumentException: void <init>()>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.textview.MaterialTextView: boolean g(android.content.Context)>
null to <com.google.android.material.textview.MaterialTextView: boolean g(android.content.Context)>
<com.google.android.material.textview.MaterialTextView: boolean g(android.content.Context)> to <z1.b: boolean b(android.content.Context,int,boolean)>
<z1.b: boolean b(android.content.Context,int,boolean)> to <z1.b: android.util.TypedValue a(android.content.Context,int)>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.util.TypedValue: void <init>()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <h.d: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.textview.MaterialTextView: int h(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
null to <com.google.android.material.textview.MaterialTextView: int h(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
UI update?

<com.google.android.material.textview.MaterialTextView: boolean j(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
null to <com.google.android.material.textview.MaterialTextView: boolean j(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
UI update?

<com.google.android.material.textview.MaterialTextView: int i(android.content.Context,android.content.res.TypedArray,int[])>
null to <com.google.android.material.textview.MaterialTextView: int i(android.content.Context,android.content.res.TypedArray,int[])>
<com.google.android.material.textview.MaterialTextView: int i(android.content.Context,android.content.res.TypedArray,int[])> to <z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.util.TypedValue: void <init>()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <h.d: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: void recycle()>
<z1.c: int c(android.content.Context,android.content.res.TypedArray,int,int)> to <android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.q0

<androidx.appcompat.widget.q0: void <clinit>()>
null to <androidx.appcompat.widget.q0: void <clinit>()>
UI update?

<androidx.appcompat.widget.q0: android.widget.Spinner b()>
null to <androidx.appcompat.widget.q0: android.widget.Spinner b()>
UI update?

<androidx.appcompat.widget.q0: boolean d()>
null to <androidx.appcompat.widget.q0: boolean d()>
UI update?

<androidx.appcompat.widget.q0: void e()>
null to <androidx.appcompat.widget.q0: void e()>
UI update?

<androidx.appcompat.widget.q0: boolean f()>
null to <androidx.appcompat.widget.q0: boolean f()>
UI update?

<androidx.appcompat.widget.q0: void a(int)>
null to <androidx.appcompat.widget.q0: void a(int)>
UI update?

<androidx.appcompat.widget.q0: void onAttachedToWindow()>
null to <androidx.appcompat.widget.q0: void onAttachedToWindow()>
UI update?

<androidx.appcompat.widget.q0: void onConfigurationChanged(android.content.res.Configuration)>
null to <androidx.appcompat.widget.q0: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<androidx.appcompat.widget.q0: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.q0: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.q0: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
null to <androidx.appcompat.widget.q0: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<androidx.appcompat.widget.q0: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> to <androidx.appcompat.widget.q0$d: androidx.appcompat.app.a$c b()>
UI update?

<androidx.appcompat.widget.q0: void onMeasure(int,int)>
null to <androidx.appcompat.widget.q0: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.q0: void onNothingSelected(android.widget.AdapterView)>
null to <androidx.appcompat.widget.q0: void onNothingSelected(android.widget.AdapterView)>
UI update?

<androidx.appcompat.widget.q0: void setAllowCollapse(boolean)>
null to <androidx.appcompat.widget.q0: void setAllowCollapse(boolean)>
UI update?

<androidx.appcompat.widget.q0: void setContentHeight(int)>
null to <androidx.appcompat.widget.q0: void setContentHeight(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.q0$d

<androidx.appcompat.widget.q0: void setTabSelected(int)>
null to <androidx.appcompat.widget.q0: void setTabSelected(int)>
UI update?

<androidx.appcompat.widget.q0$d: androidx.appcompat.app.a$c b()>
null to <androidx.appcompat.widget.q0$d: androidx.appcompat.app.a$c b()>
UI update?

<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.q0$d: void onMeasure(int,int)>
null to <androidx.appcompat.widget.q0$d: void onMeasure(int,int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.s0

<androidx.appcompat.widget.q0$d: void setSelected(boolean)>
null to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
UI update?

<androidx.appcompat.widget.s0: void <clinit>()>
null to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.s0: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
UI update?

<androidx.appcompat.widget.s0: void a(boolean)>
null to <androidx.appcompat.widget.s0: void a(boolean)>
<androidx.appcompat.widget.s0: void a(boolean)> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void start()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.s0: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
UI update?

<androidx.appcompat.widget.s0: void b()>
null to <androidx.appcompat.widget.s0: void b()>
UI update?

<androidx.appcompat.widget.s0: void c()>
null to <androidx.appcompat.widget.s0: void c()>
UI update?

<androidx.appcompat.widget.s0: void d()>
null to <androidx.appcompat.widget.s0: void d()>
<androidx.appcompat.widget.s0: void d()> to <android.animation.ObjectAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)>
null to <androidx.appcompat.widget.s0: void e(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void <clinit>()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void recycle()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void setAction(int)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.InputEvent: void <clinit>()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.s0: float f(float,float,float)>
null to <androidx.appcompat.widget.s0: float f(float,float,float)>
UI update?

<androidx.appcompat.widget.s0: boolean getTargetCheckedState()>
null to <androidx.appcompat.widget.s0: boolean getTargetCheckedState()>
UI update?

<androidx.appcompat.widget.s0: android.text.Layout h(java.lang.CharSequence)>
null to <androidx.appcompat.widget.s0: android.text.Layout h(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.s0: void i()>
null to <androidx.appcompat.widget.s0: void i()>
<androidx.appcompat.widget.s0: void i()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w$g: void g(android.view.View,java.lang.Object)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: i0.w$g H0()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void <clinit>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean b()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean c()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: i0.a G(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void X(android.view.View,int)>
<i0.w: i0.w$g H0()> to <i0.w$d: void <init>(int,java.lang.Class,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.w$d: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean c()>
<i0.w$g: java.lang.Object f(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean b()>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$d: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$e: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$b: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$c: java.lang.Object d(android.view.View)>
<i0.w$g: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w$d: void e(android.view.View,java.lang.Object)> to <i0.w$d: void j(android.view.View,java.lang.CharSequence)>
<i0.w$e: void e(android.view.View,java.lang.Object)> to <i0.w$e: void j(android.view.View,java.lang.Boolean)>
<i0.w$b: void e(android.view.View,java.lang.Object)> to <i0.w$b: void j(android.view.View,java.lang.Boolean)>
<i0.w$c: void e(android.view.View,java.lang.Object)> to <i0.w$c: void j(android.view.View,java.lang.CharSequence)>
<i0.w$g: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <init>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: i0.a l(android.view.View)>
<i0.w: i0.a G(android.view.View)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void X(android.view.View,int)> to <i0.w: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Class: java.lang.String getSimpleName()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Object: java.lang.Class getClass()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<i0.w: void X(android.view.View,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <z2.t: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<i0.w: void X(android.view.View,int)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ListView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.View: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.Spinner: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <i0.w: java.lang.CharSequence p(android.view.View)>
<i0.w: void X(android.view.View,int)> to <i0.w: int o(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<i0.w: void X(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<i0.w: void X(android.view.View,int)> to <i0.w: void G0(android.view.View)>
<i0.w$d: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$d: java.lang.Object d(android.view.View)> to <i0.w$d: java.lang.CharSequence i(android.view.View)>
<i0.w$e: java.lang.Object d(android.view.View)> to <i0.w$e: java.lang.Boolean i(android.view.View)>
<i0.w$b: java.lang.Object d(android.view.View)> to <i0.w$b: java.lang.Boolean i(android.view.View)>
<i0.w$c: java.lang.Object d(android.view.View)> to <i0.w$c: java.lang.CharSequence i(android.view.View)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>
<i0.w$c: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: i0.w$g c0()>
<i0.w: int o(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int o(android.view.View)> to <android.view.View: int getAccessibilityLiveRegion()>
<i0.w: void G0(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: void G0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <i0.w: int A(android.view.View)>
<i0.w: void G0(android.view.View)> to <i0.w: void x0(android.view.View,int)>
<i0.w$g: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$d: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$c: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<i0.w: i0.w$g c0()> to <i0.w$c: void <init>(int,java.lang.Class,int,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<i0.w$c: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
UI update?

<androidx.appcompat.widget.s0: void j()>
null to <androidx.appcompat.widget.s0: void j()>
<androidx.appcompat.widget.s0: void j()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w$g: void g(android.view.View,java.lang.Object)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: i0.w$g H0()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void <clinit>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean b()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean c()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: i0.a G(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void X(android.view.View,int)>
<i0.w: i0.w$g H0()> to <i0.w$d: void <init>(int,java.lang.Class,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.w$d: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean c()>
<i0.w$g: java.lang.Object f(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean b()>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$d: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$e: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$b: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$c: java.lang.Object d(android.view.View)>
<i0.w$g: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w$d: void e(android.view.View,java.lang.Object)> to <i0.w$d: void j(android.view.View,java.lang.CharSequence)>
<i0.w$e: void e(android.view.View,java.lang.Object)> to <i0.w$e: void j(android.view.View,java.lang.Boolean)>
<i0.w$b: void e(android.view.View,java.lang.Object)> to <i0.w$b: void j(android.view.View,java.lang.Boolean)>
<i0.w$c: void e(android.view.View,java.lang.Object)> to <i0.w$c: void j(android.view.View,java.lang.CharSequence)>
<i0.w$g: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <init>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: i0.a l(android.view.View)>
<i0.w: i0.a G(android.view.View)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void X(android.view.View,int)> to <i0.w: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Class: java.lang.String getSimpleName()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Object: java.lang.Class getClass()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<i0.w: void X(android.view.View,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <z2.t: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<i0.w: void X(android.view.View,int)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ListView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.View: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.Spinner: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <i0.w: java.lang.CharSequence p(android.view.View)>
<i0.w: void X(android.view.View,int)> to <i0.w: int o(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<i0.w: void X(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<i0.w: void X(android.view.View,int)> to <i0.w: void G0(android.view.View)>
<i0.w$d: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$d: java.lang.Object d(android.view.View)> to <i0.w$d: java.lang.CharSequence i(android.view.View)>
<i0.w$e: java.lang.Object d(android.view.View)> to <i0.w$e: java.lang.Boolean i(android.view.View)>
<i0.w$b: java.lang.Object d(android.view.View)> to <i0.w$b: java.lang.Boolean i(android.view.View)>
<i0.w$c: java.lang.Object d(android.view.View)> to <i0.w$c: java.lang.CharSequence i(android.view.View)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>
<i0.w$c: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: i0.w$g c0()>
<i0.w: int o(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int o(android.view.View)> to <android.view.View: int getAccessibilityLiveRegion()>
<i0.w: void G0(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: void G0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <i0.w: int A(android.view.View)>
<i0.w: void G0(android.view.View)> to <i0.w: void x0(android.view.View,int)>
<i0.w$g: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$d: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$c: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<i0.w: i0.w$g c0()> to <i0.w$c: void <init>(int,java.lang.Class,int,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<i0.w$c: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
UI update?

<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)>
null to <androidx.appcompat.widget.s0: void k(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <androidx.appcompat.widget.e1: void <clinit>()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.view.VelocityTracker: float getXVelocity()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.view.VelocityTracker: void computeCurrentVelocity(int)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <androidx.appcompat.widget.s0: void e(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <androidx.appcompat.widget.s0: void setChecked(boolean)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.view.View: void playSoundEffect(int)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <androidx.appcompat.widget.s0: boolean getTargetCheckedState()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.widget.TextView: boolean isEnabled()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <android.view.MotionEvent: int getAction()>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <java.lang.Math: float abs(float)>
<androidx.appcompat.widget.s0: void k(android.view.MotionEvent)> to <androidx.appcompat.widget.e1: boolean b(android.view.View)>
<androidx.appcompat.widget.e1: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.e1: void <clinit>()> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.e1: void <clinit>()> to <java.lang.reflect.Method: boolean isAccessible()>
<androidx.appcompat.widget.e1: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.e1: void <clinit>()> to <androidx.appcompat.widget.e1: void <clinit>()>
<androidx.appcompat.widget.e1: void <clinit>()> to <android.util.Log: int d(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void <clinit>()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void recycle()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: void setAction(int)>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.InputEvent: void <clinit>()>
<androidx.appcompat.widget.s0: void e(android.view.MotionEvent)> to <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void setThumbPosition(float)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void d()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void a(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.view.View: android.os.IBinder getWindowToken()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void i()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void j()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: void setChecked(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: boolean T(android.view.View)>
<androidx.appcompat.widget.e1: boolean b(android.view.View)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.e1: boolean b(android.view.View)> to <i0.w: int C(android.view.View)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.s0: void setThumbPosition(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.s0: void d()> to <android.animation.ObjectAnimator: void cancel()>
<androidx.appcompat.widget.s0: void a(boolean)> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void start()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<androidx.appcompat.widget.s0: void i()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void j()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.s0: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w$g: void g(android.view.View,java.lang.Object)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: i0.w$g H0()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void <clinit>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean b()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean c()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: i0.a G(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void X(android.view.View,int)>
<i0.w: i0.w$g H0()> to <i0.w$d: void <init>(int,java.lang.Class,int,int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.w$d: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean c()>
<i0.w$g: java.lang.Object f(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean b()>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$d: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$e: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$b: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$c: java.lang.Object d(android.view.View)>
<i0.w$g: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w$d: void e(android.view.View,java.lang.Object)> to <i0.w$d: void j(android.view.View,java.lang.CharSequence)>
<i0.w$e: void e(android.view.View,java.lang.Object)> to <i0.w$e: void j(android.view.View,java.lang.Boolean)>
<i0.w$b: void e(android.view.View,java.lang.Object)> to <i0.w$b: void j(android.view.View,java.lang.Boolean)>
<i0.w$c: void e(android.view.View,java.lang.Object)> to <i0.w$c: void j(android.view.View,java.lang.CharSequence)>
<i0.w$g: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <init>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: i0.a l(android.view.View)>
<i0.w: i0.a G(android.view.View)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void X(android.view.View,int)> to <i0.w: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Class: java.lang.String getSimpleName()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Object: java.lang.Class getClass()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<i0.w: void X(android.view.View,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <z2.t: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<i0.w: void X(android.view.View,int)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ListView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.View: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.Spinner: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <i0.w: java.lang.CharSequence p(android.view.View)>
<i0.w: void X(android.view.View,int)> to <i0.w: int o(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<i0.w: void X(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<i0.w: void X(android.view.View,int)> to <i0.w: void G0(android.view.View)>
<i0.w$d: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$d: java.lang.Object d(android.view.View)> to <i0.w$d: java.lang.CharSequence i(android.view.View)>
<i0.w$e: java.lang.Object d(android.view.View)> to <i0.w$e: java.lang.Boolean i(android.view.View)>
<i0.w$b: java.lang.Object d(android.view.View)> to <i0.w$b: java.lang.Boolean i(android.view.View)>
<i0.w$c: java.lang.Object d(android.view.View)> to <i0.w$c: java.lang.CharSequence i(android.view.View)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>
<i0.w$c: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: i0.w$g c0()>
<i0.w: int o(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int o(android.view.View)> to <android.view.View: int getAccessibilityLiveRegion()>
<i0.w: void G0(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: void G0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <i0.w: int A(android.view.View)>
<i0.w: void G0(android.view.View)> to <i0.w: void x0(android.view.View,int)>
<i0.w$g: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
<i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$d: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$c: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<i0.w: i0.w$g c0()> to <i0.w$c: void <init>(int,java.lang.Class,int,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<i0.w$c: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
UI update?

<androidx.appcompat.widget.s0: void drawableHotspotChanged(float,float)>
null to <androidx.appcompat.widget.s0: void drawableHotspotChanged(float,float)>
<androidx.appcompat.widget.s0: void drawableHotspotChanged(float,float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void drawableHotspotChanged(float,float)> to <android.widget.CompoundButton: void drawableHotspotChanged(float,float)>
<androidx.appcompat.widget.s0: void drawableHotspotChanged(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.appcompat.widget.g0$a: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.b: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.c: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.a: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <a0.e: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<androidx.appcompat.widget.g0$a: void setHotspot(float,float)> to <f.c: void setHotspot(float,float)>
<f.b: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
<f.c: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
<f.a: void setHotspot(float,float)> to <f.b: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.appcompat.widget.g0$a: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.b: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.c: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.a: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <a0.e: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
UI update?

<androidx.appcompat.widget.s0: void drawableStateChanged()>
null to <androidx.appcompat.widget.s0: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.s0: int getCompoundPaddingLeft()>
null to <androidx.appcompat.widget.s0: int getCompoundPaddingLeft()>
UI update?

<androidx.appcompat.widget.s0: int getCompoundPaddingRight()>
null to <androidx.appcompat.widget.s0: int getCompoundPaddingRight()>
UI update?

<androidx.appcompat.widget.s0: boolean getShowText()>
null to <androidx.appcompat.widget.s0: boolean getShowText()>
UI update?

<androidx.appcompat.widget.s0: boolean getSplitTrack()>
null to <androidx.appcompat.widget.s0: boolean getSplitTrack()>
UI update?

<androidx.appcompat.widget.s0: int getSwitchMinWidth()>
null to <androidx.appcompat.widget.s0: int getSwitchMinWidth()>
UI update?

<androidx.appcompat.widget.s0: java.lang.CharSequence getTextOff()>
null to <androidx.appcompat.widget.s0: java.lang.CharSequence getTextOff()>
UI update?

<androidx.appcompat.widget.s0: int getSwitchPadding()>
null to <androidx.appcompat.widget.s0: int getSwitchPadding()>
UI update?

<androidx.appcompat.widget.s0: java.lang.CharSequence getTextOn()>
null to <androidx.appcompat.widget.s0: java.lang.CharSequence getTextOn()>
UI update?

<androidx.appcompat.widget.s0: android.graphics.drawable.Drawable getThumbDrawable()>
null to <androidx.appcompat.widget.s0: android.graphics.drawable.Drawable getThumbDrawable()>
UI update?

<androidx.appcompat.widget.s0: int getThumbTextPadding()>
null to <androidx.appcompat.widget.s0: int getThumbTextPadding()>
UI update?

<androidx.appcompat.widget.s0: android.content.res.ColorStateList getThumbTintList()>
null to <androidx.appcompat.widget.s0: android.content.res.ColorStateList getThumbTintList()>
UI update?

<androidx.appcompat.widget.s0: android.graphics.PorterDuff$Mode getThumbTintMode()>
null to <androidx.appcompat.widget.s0: android.graphics.PorterDuff$Mode getThumbTintMode()>
UI update?

<androidx.appcompat.widget.s0: android.graphics.drawable.Drawable getTrackDrawable()>
null to <androidx.appcompat.widget.s0: android.graphics.drawable.Drawable getTrackDrawable()>
UI update?

<androidx.appcompat.widget.s0: android.content.res.ColorStateList getTrackTintList()>
null to <androidx.appcompat.widget.s0: android.content.res.ColorStateList getTrackTintList()>
UI update?

<androidx.appcompat.widget.s0: android.graphics.PorterDuff$Mode getTrackTintMode()>
null to <androidx.appcompat.widget.s0: android.graphics.PorterDuff$Mode getTrackTintMode()>
UI update?

<androidx.appcompat.widget.s0: int[] onCreateDrawableState(int)>
null to <androidx.appcompat.widget.s0: int[] onCreateDrawableState(int)>
UI update?

<androidx.appcompat.widget.s0: void onDraw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.s0: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.s0: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.s0: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.s0: void onMeasure(int,int)>
null to <androidx.appcompat.widget.s0: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.s0: void setChecked(boolean)>
null to <androidx.appcompat.widget.s0: void setChecked(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void setThumbPosition(float)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void d()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void a(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.view.View: android.os.IBinder getWindowToken()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void i()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <androidx.appcompat.widget.s0: void j()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <android.widget.CompoundButton: void setChecked(boolean)>
<androidx.appcompat.widget.s0: void setChecked(boolean)> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.s0: void setThumbPosition(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.s0: void d()> to <android.animation.ObjectAnimator: void cancel()>
<androidx.appcompat.widget.s0: void a(boolean)> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void start()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void a(boolean)> to <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<androidx.appcompat.widget.s0: void i()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void i()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void i()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<androidx.appcompat.widget.s0: void j()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.s0: void j()> to <android.widget.CompoundButton: android.content.res.Resources getResources()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.s0: void j()> to <i0.w: void D0(android.view.View,java.lang.CharSequence)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0: void <clinit>()>
<androidx.appcompat.widget.s0: void <clinit>()> to <androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.s0: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w$g: void g(android.view.View,java.lang.Object)>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: void <clinit>()>
<i0.w: void D0(android.view.View,java.lang.CharSequence)> to <i0.w: i0.w$g H0()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.s0$a: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void <clinit>()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: boolean h(java.lang.Object,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean b()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$d: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$e: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$b: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$c: void e(android.view.View,java.lang.Object)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w$g: boolean c()>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: i0.a G(android.view.View)>
<i0.w$g: void g(android.view.View,java.lang.Object)> to <i0.w: void X(android.view.View,int)>
<i0.w: i0.w$g H0()> to <i0.w$d: void <init>(int,java.lang.Class,int,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.w$d: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean h(java.lang.Object,java.lang.Object)> to <i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean c()>
<i0.w$g: java.lang.Object f(android.view.View)> to <java.lang.Class: boolean isInstance(java.lang.Object)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$g: boolean b()>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$d: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$e: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$b: java.lang.Object d(android.view.View)>
<i0.w$g: java.lang.Object f(android.view.View)> to <i0.w$c: java.lang.Object d(android.view.View)>
<i0.w$g: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w$d: void e(android.view.View,java.lang.Object)> to <i0.w$d: void j(android.view.View,java.lang.CharSequence)>
<i0.w$e: void e(android.view.View,java.lang.Object)> to <i0.w$e: void j(android.view.View,java.lang.Boolean)>
<i0.w$b: void e(android.view.View,java.lang.Object)> to <i0.w$b: void j(android.view.View,java.lang.Boolean)>
<i0.w$c: void e(android.view.View,java.lang.Object)> to <i0.w$c: void j(android.view.View,java.lang.CharSequence)>
<i0.w$g: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <init>()>
<i0.w: i0.a G(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a G(android.view.View)> to <i0.w: i0.a l(android.view.View)>
<i0.w: i0.a G(android.view.View)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void X(android.view.View,int)> to <i0.w: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Class: java.lang.String getSimpleName()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <java.lang.StringBuilder: void <init>()>
<i0.w: void X(android.view.View,int)> to <java.lang.Object: java.lang.Class getClass()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<i0.w: void X(android.view.View,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Stack: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <z2.t: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <java.util.Vector: boolean add(java.lang.Object)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<i0.w: void X(android.view.View,int)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<i0.w: void X(android.view.View,int)> to <androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<i0.w: void X(android.view.View,int)> to <android.widget.ListView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.View: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.CompoundButton: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: int getVisibility()>
<i0.w: void X(android.view.View,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.ImageView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.Spinner: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.View: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.TextView: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: void <clinit>()>
<i0.w: void X(android.view.View,int)> to <i0.w: java.lang.CharSequence p(android.view.View)>
<i0.w: void X(android.view.View,int)> to <i0.w: int o(android.view.View)>
<i0.w: void X(android.view.View,int)> to <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<i0.w: void X(android.view.View,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<i0.w: void X(android.view.View,int)> to <i0.w: void G0(android.view.View)>
<i0.w$d: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$d: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<i0.w$e: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$b: boolean k(java.lang.Boolean,java.lang.Boolean)> to <i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<i0.w$c: boolean k(java.lang.CharSequence,java.lang.CharSequence)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<java.lang.Class: boolean isInstance(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$d: java.lang.Object d(android.view.View)> to <i0.w$d: java.lang.CharSequence i(android.view.View)>
<i0.w$e: java.lang.Object d(android.view.View)> to <i0.w$e: java.lang.Boolean i(android.view.View)>
<i0.w$b: java.lang.Object d(android.view.View)> to <i0.w$b: java.lang.Boolean i(android.view.View)>
<i0.w$c: java.lang.Object d(android.view.View)> to <i0.w$c: java.lang.CharSequence i(android.view.View)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.ProgressBar: void setStateDescription(java.lang.CharSequence)>
<i0.w$d: void j(android.view.View,java.lang.CharSequence)> to <android.widget.CompoundButton: void setStateDescription(java.lang.CharSequence)>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$e: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$b: void j(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>
<i0.w$c: void j(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.w: i0.a l(android.view.View)> to <i0.a: void <clinit>()>
<i0.w: i0.a l(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <z2.t: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<androidx.appcompat.widget.s0: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: boolean isChecked()>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.q0$d: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.j0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.s0: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w$g: java.lang.Object f(android.view.View)>
<i0.w: java.lang.CharSequence p(android.view.View)> to <i0.w: i0.w$g c0()>
<i0.w: int o(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int o(android.view.View)> to <android.view.View: int getAccessibilityLiveRegion()>
<i0.w: void G0(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: void G0(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<i0.w: void G0(android.view.View)> to <i0.w: int A(android.view.View)>
<i0.w: void G0(android.view.View)> to <i0.w: void x0(android.view.View,int)>
<i0.w$g: void <init>(int,java.lang.Class,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$g: boolean a(java.lang.Boolean,java.lang.Boolean)> to <java.lang.Boolean: boolean booleanValue()>
<i0.w$d: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>
<i0.w$e: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: void <clinit>()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>
<i0.w$b: java.lang.Boolean i(android.view.View)> to <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<i0.w$c: java.lang.CharSequence i(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <j0.b: int a(android.view.accessibility.AccessibilityEvent)>
<androidx.recyclerview.widget.RecyclerView: boolean m1(android.view.accessibility.AccessibilityEvent)> to <androidx.recyclerview.widget.RecyclerView: boolean v0()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<i0.w: i0.w$g c0()> to <i0.w$c: void <init>(int,java.lang.Class,int,int)>
<i0.w: int A(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int A(android.view.View)> to <android.view.View: int getImportantForAccessibility()>
<i0.w: void x0(android.view.View,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void x0(android.view.View,int)> to <android.view.View: void setImportantForAccessibility(int)>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.os.Build$VERSION: void <clinit>()>
<j0.b: int a(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<i0.w$c: void <init>(int,java.lang.Class,int,int)> to <i0.w$g: void <init>(int,java.lang.Class,int,int)>
UI update?

<androidx.appcompat.widget.s0: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.s0: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?

<androidx.appcompat.widget.s0: void setShowText(boolean)>
null to <androidx.appcompat.widget.s0: void setShowText(boolean)>
UI update?

<androidx.appcompat.widget.s0: void setSplitTrack(boolean)>
null to <androidx.appcompat.widget.s0: void setSplitTrack(boolean)>
UI update?

<androidx.appcompat.widget.s0: void setSwitchMinWidth(int)>
null to <androidx.appcompat.widget.s0: void setSwitchMinWidth(int)>
UI update?

<androidx.appcompat.widget.s0: void setSwitchPadding(int)>
null to <androidx.appcompat.widget.s0: void setSwitchPadding(int)>
UI update?

<androidx.appcompat.widget.s0: void setSwitchTypeface(android.graphics.Typeface)>
null to <androidx.appcompat.widget.s0: void setSwitchTypeface(android.graphics.Typeface)>
UI update?

<androidx.appcompat.widget.s0: void setTextOff(java.lang.CharSequence)>
null to <androidx.appcompat.widget.s0: void setTextOff(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.s0: void setTextOn(java.lang.CharSequence)>
null to <androidx.appcompat.widget.s0: void setTextOn(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.s0: void setThumbDrawable(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.s0: void setThumbDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.s0: void setThumbPosition(float)>
null to <androidx.appcompat.widget.s0: void setThumbPosition(float)>
<androidx.appcompat.widget.s0: void setThumbPosition(float)> to <android.widget.TextView: void invalidate()>
UI update?

<androidx.appcompat.widget.s0: void setThumbResource(int)>
null to <androidx.appcompat.widget.s0: void setThumbResource(int)>
UI update?

<androidx.appcompat.widget.s0: void setThumbTextPadding(int)>
null to <androidx.appcompat.widget.s0: void setThumbTextPadding(int)>
UI update?

<androidx.appcompat.widget.s0: void setThumbTintList(android.content.res.ColorStateList)>
null to <androidx.appcompat.widget.s0: void setThumbTintList(android.content.res.ColorStateList)>
UI update?

<androidx.appcompat.widget.s0: void setThumbTintMode(android.graphics.PorterDuff$Mode)>
null to <androidx.appcompat.widget.s0: void setThumbTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<androidx.appcompat.widget.s0: void setTrackDrawable(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.s0: void setTrackDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.s0: void setTrackResource(int)>
null to <androidx.appcompat.widget.s0: void setTrackResource(int)>
UI update?

<androidx.appcompat.widget.s0: void setTrackTintList(android.content.res.ColorStateList)>
null to <androidx.appcompat.widget.s0: void setTrackTintList(android.content.res.ColorStateList)>
UI update?

<androidx.appcompat.widget.s0: void setTrackTintMode(android.graphics.PorterDuff$Mode)>
null to <androidx.appcompat.widget.s0: void setTrackTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<androidx.appcompat.widget.s0: void toggle()>
null to <androidx.appcompat.widget.s0: void toggle()>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyTextInputLayout

<androidx.appcompat.widget.s0: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.s0: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.simplemobiletools.commons.views.MyTextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyTextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyRecyclerView

<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)>
null to <com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.content.res.ColorStateList: void <clinit>()>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <com.simplemobiletools.commons.views.MyTextInputLayout$a: void <init>(int,java.lang.reflect.Field,com.simplemobiletools.commons.views.MyTextInputLayout)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.content.res.ColorStateList: void <init>(int[][],int[])>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <java.lang.String: int length()>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.widget.EditText: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.widget.AutoCompleteTextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.widget.EditText: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <k3.k: void b(java.lang.Object)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <t2.m: java.lang.String a(android.widget.EditText)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <t2.o: int b(int,float)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void G0(int,int,int)> to <t2.m: void b(android.widget.EditText,j3.l)>
<com.simplemobiletools.commons.views.MyTextInputLayout$a: void <init>(int,java.lang.reflect.Field,com.simplemobiletools.commons.views.MyTextInputLayout)> to <k3.l: void <init>(int)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void b(java.lang.Object)> to <k3.k: void j()>
<t2.m: java.lang.String a(android.widget.EditText)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<t2.m: java.lang.String a(android.widget.EditText)> to <java.lang.String: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <java.lang.StringBuilder: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <android.text.PrecomputedText: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <android.text.SpannableString: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <java.lang.StringBuffer: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <g0.c: java.lang.String toString()>
<t2.m: java.lang.String a(android.widget.EditText)> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<t2.m: java.lang.String a(android.widget.EditText)> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<t2.m: java.lang.String a(android.widget.EditText)> to <android.widget.EditText: android.text.Editable getText()>
<t2.m: java.lang.String a(android.widget.EditText)> to <r3.f: java.lang.CharSequence o0(java.lang.CharSequence)>
<t2.o: int b(int,float)> to <android.graphics.Color: int alpha(int)>
<t2.o: int b(int,float)> to <java.lang.Math: int round(float)>
<t2.o: int b(int,float)> to <android.graphics.Color: int red(int)>
<t2.o: int b(int,float)> to <android.graphics.Color: int green(int)>
<t2.o: int b(int,float)> to <android.graphics.Color: int blue(int)>
<t2.o: int b(int,float)> to <android.graphics.Color: int argb(int,int,int,int)>
<t2.m: void b(android.widget.EditText,j3.l)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<t2.m: void b(android.widget.EditText,j3.l)> to <android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>
<t2.m: void b(android.widget.EditText,j3.l)> to <t2.m$a: void <init>(j3.l)>
<k3.l: void <init>(int)> to <java.lang.Object: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void j()> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void j()> to <java.lang.NullPointerException: void <init>()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<java.lang.String: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: java.lang.String toString()> to <android.text.PrecomputedText: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <java.lang.Object: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableString: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <g0.c: java.lang.String toString()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<r3.f: java.lang.CharSequence o0(java.lang.CharSequence)> to <r3.p: java.lang.CharSequence o0(java.lang.CharSequence)>
<t2.m$a: void <init>(j3.l)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.String: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuilder: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.PrecomputedText: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <g0.c: java.lang.CharSequence subSequence(int,int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.String: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuilder: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.PrecomputedText: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableString: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuffer: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <g0.c: char charAt(int)>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.String: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuilder: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.PrecomputedText: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableString: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <java.lang.StringBuffer: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <g0.c: int length()>
<r3.p: java.lang.CharSequence o0(java.lang.CharSequence)> to <r3.a: boolean c(char)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.CharSequence subSequence(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: java.lang.CharSequence subSequence(int,int)> to <android.text.PrecomputedText: java.lang.CharSequence subSequence(int,int)>
<g0.c: java.lang.CharSequence subSequence(int,int)> to <android.text.Spannable: java.lang.CharSequence subSequence(int,int)>
<g0.c: java.lang.CharSequence subSequence(int,int)> to <android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>
<g0.c: java.lang.CharSequence subSequence(int,int)> to <android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>
<g0.c: java.lang.CharSequence subSequence(int,int)> to <g0.c: java.lang.CharSequence subSequence(int,int)>
<java.lang.StringBuffer: char charAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: char charAt(int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.Spannable: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableString: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.c: char charAt(int)> to <g0.c: char charAt(int)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<r3.a: boolean c(char)> to <java.lang.Character: void <clinit>()>
<r3.a: boolean c(char)> to <java.lang.Character: boolean isWhitespace(char)>
<r3.a: boolean c(char)> to <java.lang.Character: boolean isSpaceChar(char)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: boolean isWhitespace(char)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: boolean isSpaceChar(char)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: android.os.Handler A1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: android.os.Handler A1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: int B1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: int B1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: float C1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: float C1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: boolean D1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: boolean D1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: boolean E1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: boolean E1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: long F1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: long F1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: com.simplemobiletools.commons.views.MyRecyclerView$e G1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: com.simplemobiletools.commons.views.MyRecyclerView$e G1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void H1(com.simplemobiletools.commons.views.MyRecyclerView,float)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void H1(com.simplemobiletools.commons.views.MyRecyclerView,float)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: int I1(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: int I1(android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: long z1(com.simplemobiletools.commons.views.MyRecyclerView)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: long z1(com.simplemobiletools.commons.views.MyRecyclerView)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <k3.k: void b(java.lang.Object)>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <androidx.recyclerview.widget.LinearLayoutManager: int Z1()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <androidx.recyclerview.widget.LinearLayoutManager: int c2()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <com.google.android.material.datepicker.t: int e()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <j2.c: int e()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <com.google.android.material.datepicker.n: int e()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$h getAdapter()>
<com.simplemobiletools.commons.views.MyRecyclerView: void M0(int)> to <androidx.recyclerview.widget.RecyclerView: void M0(int)>
<k3.k: void b(java.lang.Object)> to <k3.k: void j()>
<androidx.recyclerview.widget.LinearLayoutManager: int Z1()> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: int Z1()> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.LinearLayoutManager: int Z1()> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<androidx.recyclerview.widget.LinearLayoutManager: int c2()> to <androidx.recyclerview.widget.RecyclerView$p: int J()>
<androidx.recyclerview.widget.LinearLayoutManager: int c2()> to <androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)>
<androidx.recyclerview.widget.LinearLayoutManager: int c2()> to <androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)>
<com.google.android.material.datepicker.t: int e()> to <com.google.android.material.datepicker.h: com.google.android.material.datepicker.a Q1()>
<com.google.android.material.datepicker.t: int e()> to <com.google.android.material.datepicker.a: int t()>
<j2.c: int e()> to <java.util.Vector: int size()>
<j2.c: int e()> to <java.util.ArrayList: int size()>
<j2.c: int e()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<j2.c: int e()> to <java.util.LinkedList: int size()>
<j2.c: int e()> to <z2.t: int size()>
<com.google.android.material.datepicker.n: int e()> to <com.google.android.material.datepicker.a: int q()>
<k3.k: void j()> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void j()> to <java.lang.NullPointerException: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int J()> to <androidx.recyclerview.widget.b: int g()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$q: int a()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.LinearLayoutManager: void T1()>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View e2(int,int,boolean,boolean)> to <androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)>
<z2.t: int size()> to <z2.t: int c()>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b: int g()> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int g()> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.LinkedList: int size()>
<androidx.recyclerview.widget.b: int g()> to <z2.t: int size()>
<androidx.recyclerview.widget.b: int g()> to <java.util.Vector: int size()>
<androidx.recyclerview.widget.RecyclerView$q: int a()> to <androidx.recyclerview.widget.RecyclerView$e0: int o()>
<androidx.recyclerview.widget.LinearLayoutManager: void T1()> to <androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int c()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: boolean b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void d()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.o$a: void e(int,int,int,int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$a: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int b()>
<androidx.recyclerview.widget.o: android.view.View a(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView$p$b: int c()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$e: int k()> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$c S1()> to <androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p$a: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int e0()>
<androidx.recyclerview.widget.o$a: boolean b()> to <androidx.recyclerview.widget.o$a: int c(int,int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int d(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$b: int e(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p$a: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$b: android.view.View a(int)> to <androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int o0()>
<androidx.recyclerview.widget.RecyclerView$p$a: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int f0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int W()>
<androidx.recyclerview.widget.RecyclerView$p$b: int b()> to <androidx.recyclerview.widget.RecyclerView$p: int d0()>
<androidx.recyclerview.widget.RecyclerView$p$b: int c()> to <androidx.recyclerview.widget.RecyclerView$p: int g0()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.LinearLayoutManager$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.recyclerview.widget.RecyclerView$p: int e0()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <android.view.View: int getRight()>
<androidx.recyclerview.widget.RecyclerView$p: int T(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.view.View: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int O(android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <android.view.View: int getLeft()>
<androidx.recyclerview.widget.RecyclerView$p: int Q(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <android.view.View: int getTop()>
<androidx.recyclerview.widget.RecyclerView$p: int U(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$p: android.view.View I(int)> to <androidx.recyclerview.widget.b: android.view.View f(int)>
<androidx.recyclerview.widget.RecyclerView$p: int f0()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.recyclerview.widget.RecyclerView$p: int d0()> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.recyclerview.widget.RecyclerView$p: int g0()> to <android.view.ViewGroup: int getPaddingTop()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int j0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int H(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int a0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$p: int m0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.b: int h(int)>
<androidx.recyclerview.widget.b: android.view.View f(int)> to <androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.RecyclerView$e: int k()>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b: int h(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.RecyclerView$e: android.view.View a(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: void c()>
<androidx.recyclerview.widget.b$a: boolean d(int)> to <androidx.recyclerview.widget.b$a: boolean d(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: void <clinit>()>
<androidx.recyclerview.widget.b$a: int b(int)> to <androidx.recyclerview.widget.b$a: int b(int)>
<androidx.recyclerview.widget.b$a: int b(int)> to <java.lang.Long: int bitCount(long)>
<androidx.recyclerview.widget.b$a: void c()> to <androidx.recyclerview.widget.b$a: void <init>()>
<java.lang.Long: void <clinit>()> to <java.lang.Long: void <clinit>()>
<java.lang.Long: int bitCount(long)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: com.simplemobiletools.commons.views.MyRecyclerView$a getEndlessScrollListener()>
null to <com.simplemobiletools.commons.views.MyRecyclerView: com.simplemobiletools.commons.views.MyRecyclerView$a getEndlessScrollListener()>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: v2.d getRecyclerScrollCallback()>
null to <com.simplemobiletools.commons.views.MyRecyclerView: v2.d getRecyclerScrollCallback()>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void onMeasure(int,int)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void onMeasure(int,int)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.ViewGroup: void onScrollChanged(int,int,int,int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.View: int getTop()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.ScrollView: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.ListView: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.ImageView: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.FrameLayout: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.View: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.ViewGroup: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.TextView: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.widget.LinearLayout: int getHeight()>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollChanged(int,int,int,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView$e0: int j()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int e0(android.view.View)> to <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <androidx.recyclerview.widget.RecyclerView$c: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView$e0: int j()> to <androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$e0 h0(android.view.View)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.recyclerview.widget.RecyclerView$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean r(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.a: int e(int)>
<androidx.recyclerview.widget.RecyclerView: int c0(androidx.recyclerview.widget.RecyclerView$e0)> to <androidx.recyclerview.widget.RecyclerView$e0: boolean u()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: int size()>
<androidx.recyclerview.widget.a: int e(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void setDragSelectActive(int)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void setDragSelectActive(int)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void setEndlessScrollListener(com.simplemobiletools.commons.views.MyRecyclerView$a)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void setEndlessScrollListener(com.simplemobiletools.commons.views.MyRecyclerView$a)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void setRecyclerScrollCallback(v2.d)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void setRecyclerScrollCallback(v2.d)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void setupDragListener(com.simplemobiletools.commons.views.MyRecyclerView$c)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void setupDragListener(com.simplemobiletools.commons.views.MyRecyclerView$c)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyDialogViewPager

<com.simplemobiletools.commons.views.MyDialogViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyDialogViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.MyRecyclerView: void setupZoomListener(com.simplemobiletools.commons.views.MyRecyclerView$e)>
null to <com.simplemobiletools.commons.views.MyRecyclerView: void setupZoomListener(com.simplemobiletools.commons.views.MyRecyclerView$e)>
UI update?

<com.simplemobiletools.commons.views.MyDialogViewPager: boolean getAllowSwiping()>
null to <com.simplemobiletools.commons.views.MyDialogViewPager: boolean getAllowSwiping()>
UI update?

<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyDialogViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.MyDialogViewPager: void onMeasure(int,int)>
null to <com.simplemobiletools.commons.views.MyDialogViewPager: void onMeasure(int,int)>
UI update?
------------------------------------------------------
com.google.android.material.appbar.MaterialToolbar

<com.simplemobiletools.commons.views.MyDialogViewPager: void setAllowSwiping(boolean)>
null to <com.simplemobiletools.commons.views.MyDialogViewPager: void setAllowSwiping(boolean)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void <clinit>()>
null to <com.google.android.material.appbar.MaterialToolbar: void <clinit>()>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: android.util.Pair O(android.widget.TextView,android.widget.TextView)>
null to <com.google.android.material.appbar.MaterialToolbar: android.util.Pair O(android.widget.TextView,android.widget.TextView)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void P(android.content.Context)>
null to <com.google.android.material.appbar.MaterialToolbar: void P(android.content.Context)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void Q(android.view.View,android.util.Pair)>
null to <com.google.android.material.appbar.MaterialToolbar: void Q(android.view.View,android.util.Pair)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void R()>
null to <com.google.android.material.appbar.MaterialToolbar: void R()>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void onAttachedToWindow()>
null to <com.google.android.material.appbar.MaterialToolbar: void onAttachedToWindow()>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.appbar.MaterialToolbar: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)>
null to <com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)>
UI update?

<com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)>
null to <com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)>
UI update?
------------------------------------------------------
com.google.android.material.timepicker.TimePickerView

<com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)>
null to <com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)>
UI update?

<com.google.android.material.timepicker.TimePickerView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.timepicker.TimePickerView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.timepicker.TimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.timepicker.TimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$g B(com.google.android.material.timepicker.TimePickerView)>
null to <com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$g B(com.google.android.material.timepicker.TimePickerView)>
UI update?

<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$f C(com.google.android.material.timepicker.TimePickerView)>
null to <com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$f C(com.google.android.material.timepicker.TimePickerView)>
UI update?

<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$e D(com.google.android.material.timepicker.TimePickerView)>
null to <com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$e D(com.google.android.material.timepicker.TimePickerView)>
UI update?

<com.google.android.material.timepicker.TimePickerView: void E()>
null to <com.google.android.material.timepicker.TimePickerView: void E()>
UI update?

<com.google.android.material.timepicker.TimePickerView: void F()>
null to <com.google.android.material.timepicker.TimePickerView: void F()>
UI update?

<com.google.android.material.timepicker.TimePickerView: void G()>
null to <com.google.android.material.timepicker.TimePickerView: void G()>
UI update?
------------------------------------------------------
com.google.android.material.snackbar.d

<com.google.android.material.timepicker.TimePickerView: void onAttachedToWindow()>
null to <com.google.android.material.timepicker.TimePickerView: void onAttachedToWindow()>
UI update?

<com.google.android.material.timepicker.TimePickerView: void onVisibilityChanged(android.view.View,int)>
null to <com.google.android.material.timepicker.TimePickerView: void onVisibilityChanged(android.view.View,int)>
UI update?

<com.google.android.material.snackbar.d: void <clinit>()>
null to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d$a: void <init>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.snackbar.d: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.snackbar.d: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.snackbar.d: android.graphics.drawable.Drawable a()>
null to <com.google.android.material.snackbar.d: android.graphics.drawable.Drawable a()>
UI update?

<com.google.android.material.snackbar.d: float getActionTextColorAlpha()>
null to <com.google.android.material.snackbar.d: float getActionTextColorAlpha()>
UI update?

<com.google.android.material.snackbar.d: int getAnimationMode()>
null to <com.google.android.material.snackbar.d: int getAnimationMode()>
UI update?

<com.google.android.material.snackbar.d: float getBackgroundOverlayColorAlpha()>
null to <com.google.android.material.snackbar.d: float getBackgroundOverlayColorAlpha()>
UI update?

<com.google.android.material.snackbar.d: void onAttachedToWindow()>
null to <com.google.android.material.snackbar.d: void onAttachedToWindow()>
UI update?

<com.google.android.material.snackbar.d: void onDetachedFromWindow()>
null to <com.google.android.material.snackbar.d: void onDetachedFromWindow()>
UI update?

<com.google.android.material.snackbar.d: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.snackbar.d: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.snackbar.d: void setAnimationMode(int)>
null to <com.google.android.material.snackbar.d: void setAnimationMode(int)>
UI update?

<com.google.android.material.snackbar.d: void setOnAttachStateChangeListener(com.google.android.material.snackbar.b)>
null to <com.google.android.material.snackbar.d: void setOnAttachStateChangeListener(com.google.android.material.snackbar.b)>
UI update?

<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d$a: void <init>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
androidx.coordinatorlayout.widget.CoordinatorLayout

<com.google.android.material.snackbar.d: void setOnLayoutChangeListener(com.google.android.material.snackbar.c)>
null to <com.google.android.material.snackbar.d: void setOnLayoutChangeListener(com.google.android.material.snackbar.c)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean A(android.view.View)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean A(android.view.View)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void C(android.view.View,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void C(android.view.View,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void D(android.view.View,android.view.View,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void D(android.view.View,android.view.View,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void E(android.view.View,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void E(android.view.View,int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$c K(android.content.Context,android.util.AttributeSet,java.lang.String)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$c K(android.content.Context,android.util.AttributeSet,java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void M()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void M()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <h0.g: boolean a(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <h0.f: boolean a(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <android.graphics.Rect: void setEmpty()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<h0.g: boolean a(java.lang.Object)> to <h0.f: boolean a(java.lang.Object)>
<h0.f: boolean a(java.lang.Object)> to <h0.f: boolean c(java.lang.Object)>
<h0.f: boolean a(java.lang.Object)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int R(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int R(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int S(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int S(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int T(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int T(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void X()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void X()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.graphics.Rect: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <h0.g: java.lang.Object b()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <h0.f: java.lang.Object b()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.graphics.Rect: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<h0.g: java.lang.Object b()> to <h0.f: java.lang.Object b()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int c(int,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int c(int,int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <java.lang.Math: int min(int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getHeight()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <android.view.ViewGroup: int getWidth()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void e(androidx.coordinatorlayout.widget.CoordinatorLayout$f,android.graphics.Rect,int,int)> to <java.lang.Math: int max(int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <i0.w: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <i0.e0: boolean o()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: i0.e0 f(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,i0.e0)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 f(i0.e0)> to <i0.w: boolean z(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.e0: boolean o()> to <i0.e0$l: boolean n()>
<i0.e0: boolean o()> to <i0.e0$h: boolean n()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0$h: boolean n()> to <android.view.WindowInsets: boolean isConsumed()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <android.graphics.Rect: int height()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <android.graphics.Rect: int width()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: int R(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <i0.e: int b(int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void v(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$f,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: int S(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<i0.e: int b(int,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.e: int b(int,int)> to <android.view.Gravity: int getAbsoluteGravity(int,int)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int w(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int w(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <android.view.ViewGroup: int getChildDrawingOrder(int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.Stack: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.LinkedList: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <z2.t: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.Vector: boolean add(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.ArrayList: void clear()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.concurrent.CopyOnWriteArrayList: void clear()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.LinkedList: void clear()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <z2.t: void clear()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.Vector: void clear()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.Collections: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void z(java.util.List)> to <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<z2.t: boolean add(java.lang.Object)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<z2.t: void clear()> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <android.graphics.Rect: boolean contains(int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean B(android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <h0.g: void <init>(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Package: java.lang.String getName()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <java.lang.Class: java.lang.Package getPackage()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.graphics.Rect: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <h0.g: java.lang.Object b()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <h0.f: java.lang.Object b()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.view.View: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect a()> to <android.graphics.Rect: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <h0.g: boolean a(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <h0.f: boolean a(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <android.graphics.Rect: void setEmpty()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void O(android.graphics.Rect)> to <android.view.View: void <clinit>()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$i: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Class: java.lang.Package getPackage()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ScrollView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.Spinner: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<h0.g: java.lang.Object b()> to <h0.f: java.lang.Object b()>
<h0.g: boolean a(java.lang.Object)> to <h0.f: boolean a(java.lang.Object)>
<h0.f: boolean a(java.lang.Object)> to <h0.f: boolean c(java.lang.Object)>
<h0.f: boolean a(java.lang.Object)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void set(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void reset()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: void set(java.lang.Object)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: java.lang.Object get()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean isIdentity()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preTranslate(float,float)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.graphics.Matrix getMatrix()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getTop()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getLeft()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void I(android.view.View,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void I(android.view.View,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void J(android.view.View,int,int,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void J(android.view.View,int,int,int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: void q(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void N(android.view.View,android.graphics.Rect)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$f: void q(android.graphics.Rect)> to <android.graphics.Rect: void set(android.graphics.Rect)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void P()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void P()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void b()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void b()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <i0.p: void c(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: void v(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$c: void v(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: void u(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void drawableStateChanged()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void drawableStateChanged()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 getLastWindowInsets()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: i0.e0 getLastWindowInsets()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void h()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void h()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f k()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f k()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f l(android.util.AttributeSet)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f l(android.util.AttributeSet)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: void r(int,boolean)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$Behavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean z(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)> to <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$Behavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout: boolean j()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <com.google.android.material.appbar.AppBarLayout: boolean h()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ScrollView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ListView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ImageView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.view.View: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.view.ViewGroup: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.TextView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<com.google.android.material.appbar.AppBarLayout: boolean h()> to <com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onDetachedFromWindow()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onDetachedFromWindow()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onDraw(android.graphics.Canvas)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <i0.p: void c(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: void v(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void d(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$c: void v(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: void u(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: android.os.Parcelable onSaveInstanceState()>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: void r(int,boolean)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean o(android.view.View,android.view.View,int,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$Behavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean z(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)> to <com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean N(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)> to <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean A(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$Behavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout: boolean j()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean m0(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)> to <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <com.google.android.material.appbar.AppBarLayout: boolean h()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ScrollView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ListView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.ImageView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.view.View: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.view.ViewGroup: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.TextView: int getHeight()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean X(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<com.google.android.material.appbar.AppBarLayout: boolean h()> to <com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f p(android.view.ViewGroup$LayoutParams)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f p(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: boolean isLayoutRequested()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.graphics.Rect: void setEmpty()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.FrameLayout: int getBottom()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: int getBottom()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: int getRight()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: int getTop()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: int getLeft()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void q(android.view.View,boolean,android.graphics.Rect)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ScrollView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.Spinner: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void set(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void reset()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: void set(java.lang.Object)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: java.lang.Object get()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean isIdentity()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preTranslate(float,float)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.graphics.Matrix getMatrix()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getTop()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getLeft()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List r(android.view.View)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List r(android.view.View)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void t(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ScrollView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getHeight()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ListView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.ImageView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.FrameLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.Spinner: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.View: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.TextView: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.widget.LinearLayout: int getWidth()>
<androidx.coordinatorlayout.widget.b: void a(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void set(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void reset()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <init>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: void set(java.lang.Object)>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <java.lang.ThreadLocal: java.lang.Object get()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.Matrix: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <android.graphics.RectF: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void c(android.view.ViewGroup,android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void <clinit>()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean isIdentity()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.graphics.Matrix: boolean preTranslate(float,float)>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollY()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: int getScrollX()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.graphics.Matrix getMatrix()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getTop()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: int getLeft()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)> to <androidx.coordinatorlayout.widget.b: void b(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void u(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void u(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)> to <android.graphics.Rect: void set(android.graphics.Rect)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: android.graphics.Rect h()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void x(android.view.View,android.graphics.Rect)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ActionMenuView

<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f y(android.view.View)>
null to <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$f y(android.view.View)>
UI update?

<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)>
null to <androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View$MeasureSpec: int getSize(int)>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <androidx.appcompat.view.menu.ActionMenuItemView: boolean f()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.widget.ImageView: void measure(int,int)>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View: void measure(int,int)>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.widget.ImageView: int getMeasuredWidth()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.widget.Spinner: int getMeasuredWidth()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View: int getMeasuredWidth()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View$MeasureSpec: int getMode(int)>
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.ActionMenuView: int L(android.view.View,int,int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.ActionMenuView: void M(int,int)>
null to <androidx.appcompat.widget.ActionMenuView: void M(int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()> to <androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)>
<androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)> to <androidx.appcompat.widget.j0$a: void <init>(int,int)>
<androidx.appcompat.widget.j0$a: void <init>(int,int)> to <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c D(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c D(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c E(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c E(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c E(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.ActionMenuView$c: void <init>(androidx.appcompat.widget.ActionMenuView$c)>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c E(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c E(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.ActionMenuView$c: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.ActionMenuView$c: void <init>(androidx.appcompat.widget.ActionMenuView$c)> to <androidx.appcompat.widget.j0$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()> to <androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)>
<androidx.appcompat.widget.ActionMenuView$c: void <init>(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.j0$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.j0$a: void <init>(android.view.ViewGroup$LayoutParams)> to <android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)> to <androidx.appcompat.widget.j0$a: void <init>(int,int)>
<androidx.appcompat.widget.j0$a: void <init>(int,int)> to <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c F()>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c F()>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c F()> to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()>
<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$c C()> to <androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)>
<androidx.appcompat.widget.ActionMenuView$c: void <init>(int,int)> to <androidx.appcompat.widget.j0$a: void <init>(int,int)>
<androidx.appcompat.widget.j0$a: void <init>(int,int)> to <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean G(int)>
null to <androidx.appcompat.widget.ActionMenuView: boolean G(int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean I()>
null to <androidx.appcompat.widget.ActionMenuView: boolean I()>
<androidx.appcompat.widget.ActionMenuView: boolean I()> to <androidx.appcompat.widget.c: boolean D()>
<androidx.appcompat.widget.c: boolean D()> to <androidx.appcompat.widget.c: boolean E()>
<androidx.appcompat.widget.c: boolean E()> to <androidx.appcompat.view.menu.i: boolean d()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.l: boolean b()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.b: boolean b()>
<androidx.appcompat.view.menu.l: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: int size()>
<androidx.appcompat.widget.k0: boolean b()> to <android.widget.PopupWindow: boolean isShowing()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean J()>
null to <androidx.appcompat.widget.ActionMenuView: boolean J()>
<androidx.appcompat.widget.ActionMenuView: boolean J()> to <androidx.appcompat.widget.c: boolean E()>
<androidx.appcompat.widget.c: boolean E()> to <androidx.appcompat.view.menu.i: boolean d()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.l: boolean b()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.b: boolean b()>
<androidx.appcompat.view.menu.l: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: int size()>
<androidx.appcompat.widget.k0: boolean b()> to <android.widget.PopupWindow: boolean isShowing()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean K()>
null to <androidx.appcompat.widget.ActionMenuView: boolean K()>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.e N()>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.e N()>
UI update?

<androidx.appcompat.widget.ActionMenuView: void O(androidx.appcompat.view.menu.j$a,androidx.appcompat.view.menu.e$a)>
null to <androidx.appcompat.widget.ActionMenuView: void O(androidx.appcompat.view.menu.j$a,androidx.appcompat.view.menu.e$a)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void b(androidx.appcompat.view.menu.e)>
null to <androidx.appcompat.widget.ActionMenuView: void b(androidx.appcompat.view.menu.e)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
UI update?

<androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>
null to <androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>
UI update?

<androidx.appcompat.widget.ActionMenuView: int getPopupTheme()>
null to <androidx.appcompat.widget.ActionMenuView: int getPopupTheme()>
UI update?

<androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()>
null to <androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a m()>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a m()>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a n(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a n(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a o(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.j0$a o(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
null to <androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>
null to <androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>
<androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)> to <androidx.appcompat.widget.c: void G(boolean)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$e)>
null to <androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$e)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)>
null to <androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)>
UI update?

<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>
null to <androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>
<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)> to <android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.m0$a

<androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.c)>
null to <androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.c)>
<androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.c)> to <androidx.appcompat.widget.c: void H(androidx.appcompat.widget.ActionMenuView)>
<androidx.appcompat.widget.c: void H(androidx.appcompat.widget.ActionMenuView)> to <androidx.appcompat.widget.ActionMenuView: void b(androidx.appcompat.view.menu.e)>
UI update?

<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)>
null to <androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.content.res.Configuration: int getLayoutDirection()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.m0$a: void <init>(android.content.Context,boolean)> to <androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.NoSuchFieldException: void printStackTrace()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.widget.ListView: void setCacheColorHint(int)>
<androidx.appcompat.widget.g0: void <init>(android.content.Context,boolean)> to <android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.appcompat.widget.m0$a: boolean hasFocus()>
null to <androidx.appcompat.widget.m0$a: boolean hasFocus()>
<androidx.appcompat.widget.m0$a: boolean hasFocus()> to <androidx.appcompat.widget.g0: boolean hasFocus()>
<androidx.appcompat.widget.g0: boolean hasFocus()> to <android.widget.ListView: boolean hasFocus()>
UI update?

<androidx.appcompat.widget.m0$a: boolean hasWindowFocus()>
null to <androidx.appcompat.widget.m0$a: boolean hasWindowFocus()>
UI update?

<androidx.appcompat.widget.m0$a: boolean isFocused()>
null to <androidx.appcompat.widget.m0$a: boolean isFocused()>
<androidx.appcompat.widget.m0$a: boolean isFocused()> to <androidx.appcompat.widget.g0: boolean isFocused()>
<androidx.appcompat.widget.g0: boolean isFocused()> to <android.widget.ListView: boolean isFocused()>
UI update?

<androidx.appcompat.widget.m0$a: boolean isInTouchMode()>
null to <androidx.appcompat.widget.m0$a: boolean isInTouchMode()>
<androidx.appcompat.widget.m0$a: boolean isInTouchMode()> to <androidx.appcompat.widget.g0: boolean isInTouchMode()>
<androidx.appcompat.widget.g0: boolean isInTouchMode()> to <android.widget.ListView: boolean isInTouchMode()>
UI update?

<androidx.appcompat.widget.m0$a: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.m0$a: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.m0$a: boolean onKeyDown(int,android.view.KeyEvent)>
null to <androidx.appcompat.widget.m0$a: boolean onKeyDown(int,android.view.KeyEvent)>
UI update?

<androidx.appcompat.widget.m0$a: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.m0$a: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.m0$a: boolean onTouchEvent(android.view.MotionEvent)> to <androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getAction()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <androidx.appcompat.widget.g0$b: void a()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ListView: int pointToPosition(int,int)>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getY()>
<androidx.appcompat.widget.g0: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getX()>
<androidx.appcompat.widget.g0$b: void a()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
UI update?

<androidx.appcompat.widget.m0$a: void setHoverListener(androidx.appcompat.widget.l0)>
null to <androidx.appcompat.widget.m0$a: void setHoverListener(androidx.appcompat.widget.l0)>
UI update?
------------------------------------------------------
androidx.constraintlayout.motion.widget.h

<androidx.constraintlayout.motion.widget.h: void a(androidx.constraintlayout.motion.widget.j,int,int)>
null to <androidx.constraintlayout.motion.widget.h: void a(androidx.constraintlayout.motion.widget.j,int,int)>
UI update?

<androidx.constraintlayout.motion.widget.h: void b(androidx.constraintlayout.motion.widget.j,int,int,float)>
null to <androidx.constraintlayout.motion.widget.h: void b(androidx.constraintlayout.motion.widget.j,int,int,float)>
UI update?

<androidx.constraintlayout.motion.widget.h: void c(androidx.constraintlayout.motion.widget.j,int)>
null to <androidx.constraintlayout.motion.widget.h: void c(androidx.constraintlayout.motion.widget.j,int)>
UI update?

<androidx.constraintlayout.motion.widget.h: float getProgress()>
null to <androidx.constraintlayout.motion.widget.h: float getProgress()>
UI update?

<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)>
null to <androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.motion.widget.h: void setProgress(float)>
null to <androidx.constraintlayout.motion.widget.h: void setProgress(float)>
UI update?

<androidx.constraintlayout.motion.widget.h: boolean u()>
null to <androidx.constraintlayout.motion.widget.h: boolean u()>
UI update?

<androidx.constraintlayout.motion.widget.h: boolean v()>
null to <androidx.constraintlayout.motion.widget.h: boolean v()>
UI update?

<androidx.constraintlayout.motion.widget.h: boolean w()>
null to <androidx.constraintlayout.motion.widget.h: boolean w()>
UI update?

<androidx.constraintlayout.motion.widget.h: void x(android.graphics.Canvas)>
null to <androidx.constraintlayout.motion.widget.h: void x(android.graphics.Canvas)>
UI update?
------------------------------------------------------
androidx.constraintlayout.motion.widget.j

<androidx.constraintlayout.motion.widget.h: void y(android.view.View,float)>
null to <androidx.constraintlayout.motion.widget.h: void y(android.view.View,float)>
UI update?

<androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.j$c B(androidx.constraintlayout.motion.widget.j)>
null to <androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.j$c B(androidx.constraintlayout.motion.widget.j)>
UI update?

<androidx.constraintlayout.motion.widget.j: int C(androidx.constraintlayout.motion.widget.j)>
null to <androidx.constraintlayout.motion.widget.j: int C(androidx.constraintlayout.motion.widget.j)>
UI update?

<androidx.constraintlayout.motion.widget.j: int D(androidx.constraintlayout.motion.widget.j)>
null to <androidx.constraintlayout.motion.widget.j: int D(androidx.constraintlayout.motion.widget.j)>
UI update?

<androidx.constraintlayout.motion.widget.j: void E(float)>
null to <androidx.constraintlayout.motion.widget.j: void E(float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void F(boolean)>
null to <androidx.constraintlayout.motion.widget.j: void F(boolean)>
UI update?

<androidx.constraintlayout.motion.widget.j: void I()>
null to <androidx.constraintlayout.motion.widget.j: void I()>
UI update?

<androidx.constraintlayout.motion.widget.j: void M(int,int)>
null to <androidx.constraintlayout.motion.widget.j: void M(int,int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void d(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void f(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.motion.widget.j: void N()>
null to <androidx.constraintlayout.motion.widget.j: void N()>
<androidx.constraintlayout.motion.widget.j: void N()> to <androidx.constraintlayout.motion.widget.j: void E(float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void O(int)>
null to <androidx.constraintlayout.motion.widget.j: void O(int)>
<androidx.constraintlayout.motion.widget.j: void O(int)> to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: void O(int)> to <androidx.constraintlayout.motion.widget.j$c: void d(int)>
<androidx.constraintlayout.motion.widget.j: void O(int)> to <androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)>
<androidx.constraintlayout.motion.widget.j: void O(int)> to <androidx.constraintlayout.motion.widget.j: void P(int,int,int)>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.motion.widget.j: void P(int,int,int)> to <androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: long getNanoTime()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void N()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void M(int,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: long nanoTime()>
<androidx.constraintlayout.motion.widget.j: void N()> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void d(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void f(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.motion.widget.j: void P(int,int,int)>
null to <androidx.constraintlayout.motion.widget.j: void P(int,int,int)>
<androidx.constraintlayout.motion.widget.j: void P(int,int,int)> to <androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: long getNanoTime()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void N()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void M(int,int)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: long nanoTime()>
<androidx.constraintlayout.motion.widget.j: void N()> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void d(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void f(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)>
null to <androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: long getNanoTime()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void N()>
<androidx.constraintlayout.motion.widget.j: void Q(int,int,int,int)> to <androidx.constraintlayout.motion.widget.j: void M(int,int)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: long nanoTime()>
<androidx.constraintlayout.motion.widget.j: void N()> to <androidx.constraintlayout.motion.widget.j: void E(float)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void d(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void f(int)>
<androidx.constraintlayout.motion.widget.j: void M(int,int)> to <androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j$c: void <init>(androidx.constraintlayout.motion.widget.j)> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.motion.widget.j: void d(android.view.View,android.view.View,int,int)>
null to <androidx.constraintlayout.motion.widget.j: void d(android.view.View,android.view.View,int,int)>
<androidx.constraintlayout.motion.widget.j: void d(android.view.View,android.view.View,int,int)> to <androidx.constraintlayout.motion.widget.j: long getNanoTime()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: long nanoTime()>
UI update?

<androidx.constraintlayout.motion.widget.j: void dispatchDraw(android.graphics.Canvas)>
null to <androidx.constraintlayout.motion.widget.j: void dispatchDraw(android.graphics.Canvas)>
UI update?

<androidx.constraintlayout.motion.widget.j: int[] getConstraintSetIds()>
null to <androidx.constraintlayout.motion.widget.j: int[] getConstraintSetIds()>
UI update?

<androidx.constraintlayout.motion.widget.j: int getCurrentState()>
null to <androidx.constraintlayout.motion.widget.j: int getCurrentState()>
UI update?

<androidx.constraintlayout.motion.widget.j: java.util.ArrayList getDefinedTransitions()>
null to <androidx.constraintlayout.motion.widget.j: java.util.ArrayList getDefinedTransitions()>
UI update?

<androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.b getDesignTool()>
null to <androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.b getDesignTool()>
UI update?

<androidx.constraintlayout.motion.widget.j: int getEndState()>
null to <androidx.constraintlayout.motion.widget.j: int getEndState()>
UI update?

<androidx.constraintlayout.motion.widget.j: long getNanoTime()>
null to <androidx.constraintlayout.motion.widget.j: long getNanoTime()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: long getNanoTime()> to <java.lang.System: long nanoTime()>
UI update?

<androidx.constraintlayout.motion.widget.j: float getProgress()>
null to <androidx.constraintlayout.motion.widget.j: float getProgress()>
UI update?

<androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.l getScene()>
null to <androidx.constraintlayout.motion.widget.j: androidx.constraintlayout.motion.widget.l getScene()>
UI update?

<androidx.constraintlayout.motion.widget.j: int getStartState()>
null to <androidx.constraintlayout.motion.widget.j: int getStartState()>
UI update?

<androidx.constraintlayout.motion.widget.j: float getTargetPosition()>
null to <androidx.constraintlayout.motion.widget.j: float getTargetPosition()>
UI update?

<androidx.constraintlayout.motion.widget.j: android.os.Bundle getTransitionState()>
null to <androidx.constraintlayout.motion.widget.j: android.os.Bundle getTransitionState()>
UI update?

<androidx.constraintlayout.motion.widget.j: long getTransitionTimeMs()>
null to <androidx.constraintlayout.motion.widget.j: long getTransitionTimeMs()>
UI update?

<androidx.constraintlayout.motion.widget.j: float getVelocity()>
null to <androidx.constraintlayout.motion.widget.j: float getVelocity()>
UI update?

<androidx.constraintlayout.motion.widget.j: void i(android.view.View,int)>
null to <androidx.constraintlayout.motion.widget.j: void i(android.view.View,int)>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
null to <androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.constraintlayout.motion.widget.j: boolean isAttachedToWindow()> to <android.view.ViewGroup: boolean isAttachedToWindow()>
UI update?

<androidx.constraintlayout.motion.widget.j: void j(android.view.View,int,int,int[],int)>
null to <androidx.constraintlayout.motion.widget.j: void j(android.view.View,int,int,int[],int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void m(android.view.View,int,int,int,int,int,int[])>
null to <androidx.constraintlayout.motion.widget.j: void m(android.view.View,int,int,int,int,int,int[])>
UI update?

<androidx.constraintlayout.motion.widget.j: void n(android.view.View,int,int,int,int,int)>
null to <androidx.constraintlayout.motion.widget.j: void n(android.view.View,int,int,int,int,int)>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean o(android.view.View,android.view.View,int,int)>
null to <androidx.constraintlayout.motion.widget.j: boolean o(android.view.View,android.view.View,int,int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onAttachedToWindow()>
null to <androidx.constraintlayout.motion.widget.j: void onAttachedToWindow()>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.constraintlayout.motion.widget.j: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onLayout(boolean,int,int,int,int)>
null to <androidx.constraintlayout.motion.widget.j: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onMeasure(int,int)>
null to <androidx.constraintlayout.motion.widget.j: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean onNestedFling(android.view.View,float,float,boolean)>
null to <androidx.constraintlayout.motion.widget.j: boolean onNestedFling(android.view.View,float,float,boolean)>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean onNestedPreFling(android.view.View,float,float)>
null to <androidx.constraintlayout.motion.widget.j: boolean onNestedPreFling(android.view.View,float,float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onRtlPropertiesChanged(int)>
null to <androidx.constraintlayout.motion.widget.j: void onRtlPropertiesChanged(int)>
UI update?

<androidx.constraintlayout.motion.widget.j: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.constraintlayout.motion.widget.j: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.constraintlayout.motion.widget.j: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onViewAdded(android.view.View)>
null to <androidx.constraintlayout.motion.widget.j: void onViewAdded(android.view.View)>
UI update?

<androidx.constraintlayout.motion.widget.j: void onViewRemoved(android.view.View)>
null to <androidx.constraintlayout.motion.widget.j: void onViewRemoved(android.view.View)>
UI update?

<androidx.constraintlayout.motion.widget.j: void requestLayout()>
null to <androidx.constraintlayout.motion.widget.j: void requestLayout()>
<androidx.constraintlayout.motion.widget.j: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.constraintlayout.motion.widget.j: void setDebugMode(int)>
null to <androidx.constraintlayout.motion.widget.j: void setDebugMode(int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setDelayedApplicationOfInitialState(boolean)>
null to <androidx.constraintlayout.motion.widget.j: void setDelayedApplicationOfInitialState(boolean)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setInteractionEnabled(boolean)>
null to <androidx.constraintlayout.motion.widget.j: void setInteractionEnabled(boolean)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setInterpolatedProgress(float)>
null to <androidx.constraintlayout.motion.widget.j: void setInterpolatedProgress(float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setOnHide(float)>
null to <androidx.constraintlayout.motion.widget.j: void setOnHide(float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setOnShow(float)>
null to <androidx.constraintlayout.motion.widget.j: void setOnShow(float)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setScene(androidx.constraintlayout.motion.widget.l)>
null to <androidx.constraintlayout.motion.widget.j: void setScene(androidx.constraintlayout.motion.widget.l)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setStartState(int)>
null to <androidx.constraintlayout.motion.widget.j: void setStartState(int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setTransition(int)>
null to <androidx.constraintlayout.motion.widget.j: void setTransition(int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setTransition(androidx.constraintlayout.motion.widget.l$a)>
null to <androidx.constraintlayout.motion.widget.j: void setTransition(androidx.constraintlayout.motion.widget.l$a)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setTransitionDuration(int)>
null to <androidx.constraintlayout.motion.widget.j: void setTransitionDuration(int)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setTransitionListener(androidx.constraintlayout.motion.widget.j$d)>
null to <androidx.constraintlayout.motion.widget.j: void setTransitionListener(androidx.constraintlayout.motion.widget.j$d)>
UI update?

<androidx.constraintlayout.motion.widget.j: void setTransitionState(android.os.Bundle)>
null to <androidx.constraintlayout.motion.widget.j: void setTransitionState(android.os.Bundle)>
UI update?

<androidx.constraintlayout.motion.widget.j: void t(int)>
null to <androidx.constraintlayout.motion.widget.j: void t(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.FitWindowsFrameLayout

<androidx.constraintlayout.motion.widget.j: java.lang.String toString()>
null to <androidx.constraintlayout.motion.widget.j: java.lang.String toString()>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.motion.widget.j: java.lang.String toString()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.motion.widget.a: java.lang.String a(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.appcompat.widget.FitWindowsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.FitWindowsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)>
null to <androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.FitWindowsLinearLayout

<androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.h0$a)>
null to <androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.h0$a)>
UI update?

<androidx.appcompat.widget.FitWindowsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.FitWindowsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)>
null to <androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)>
UI update?
------------------------------------------------------
com.google.android.material.datepicker.MaterialCalendarGridView

<androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.h0$a)>
null to <androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.h0$a)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void a(int,android.graphics.Rect)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void a(int,android.graphics.Rect)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: int c(android.view.View)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: int c(android.view.View)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: boolean d(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: boolean d(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.m b()>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.m b()>
<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.m b()> to <android.widget.GridView: android.widget.ListAdapter getAdapter()>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.Adapter getAdapter()>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.Adapter getAdapter()>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.ListAdapter getAdapter()>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: android.widget.ListAdapter getAdapter()>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void onAttachedToWindow()>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void onAttachedToWindow()>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void onDraw(android.graphics.Canvas)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void onDraw(android.graphics.Canvas)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: boolean onKeyDown(int,android.view.KeyEvent)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: boolean onKeyDown(int,android.view.KeyEvent)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void onMeasure(int,int)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void onMeasure(int,int)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.Adapter)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.Adapter)>
UI update?

<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)> to <java.lang.String: void <clinit>()>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)> to <java.lang.Class: java.lang.String getCanonicalName()>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)> to <android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)> to <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<java.lang.String: void <clinit>()> to <java.lang.String: void <clinit>()>
<java.lang.Class: java.lang.String getCanonicalName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
com.google.android.material.textfield.TextInputLayout

<com.google.android.material.datepicker.MaterialCalendarGridView: void setSelection(int)>
null to <com.google.android.material.datepicker.MaterialCalendarGridView: void setSelection(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void <clinit>()>
null to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean A()>
null to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void A0()>
null to <com.google.android.material.textfield.TextInputLayout: void A0()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <i0.w: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.widget.TextView: int getCompoundPaddingBottom()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.widget.TextView: int getCompoundPaddingTop()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <com.google.android.material.textfield.TextInputLayout: boolean Q()>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <i0.w: int I(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void A0()> to <i0.w: void A0(android.view.View,int,int,int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<com.google.android.material.textfield.TextInputLayout: boolean Q()> to <android.widget.ImageView: int getVisibility()>
<i0.w: int I(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.widget.FrameLayout: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.Spinner: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.TextView: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.ViewGroup: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingStart()>
<i0.w: int I(android.view.View)> to <android.widget.LinearLayout: int getPaddingStart()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPaddingRelative(int,int,int,int)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int I(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int H(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.widget.FrameLayout: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.Spinner: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.TextView: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.ViewGroup: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingEnd()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void C(int)>
null to <com.google.android.material.textfield.TextInputLayout: void C(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void C0(boolean,boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void C0(boolean,boolean)>
<com.google.android.material.textfield.TextInputLayout: void C0(boolean,boolean)> to <android.content.res.ColorStateList: int getDefaultColor()>
<com.google.android.material.textfield.TextInputLayout: void C0(boolean,boolean)> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void D0()>
null to <com.google.android.material.textfield.TextInputLayout: void D0()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <i0.w: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.widget.TextView: int getPaddingBottom()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.widget.TextView: int getPaddingTop()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <com.google.android.material.textfield.TextInputLayout: boolean L()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <com.google.android.material.textfield.TextInputLayout: boolean K()>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <i0.w: int H(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void D0()> to <i0.w: void A0(android.view.View,int,int,int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<com.google.android.material.textfield.TextInputLayout: boolean L()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.ImageView: int getVisibility()>
<i0.w: int H(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.widget.FrameLayout: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.Spinner: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.TextView: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.ViewGroup: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingEnd()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPaddingRelative(int,int,int,int)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int I(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int H(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.widget.FrameLayout: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.Spinner: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.TextView: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.ViewGroup: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingStart()>
<i0.w: int I(android.view.View)> to <android.widget.LinearLayout: int getPaddingStart()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void E(android.graphics.Canvas)>
null to <com.google.android.material.textfield.TextInputLayout: void E(android.graphics.Canvas)>
<com.google.android.material.textfield.TextInputLayout: void E(android.graphics.Canvas)> to <com.google.android.material.internal.a: void m(android.graphics.Canvas)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.Canvas: int save()>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <com.google.android.material.internal.a: boolean h0()>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.text.TextPaint: void setTextSize(float)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.text.Layout: void draw(android.graphics.Canvas)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.text.Layout: float getLineLeft(int)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.text.StaticLayout: int getLineStart(int)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.Canvas: void restoreToCount(int)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.Canvas: void translate(float,float)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.RecordingCanvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void m(android.graphics.Canvas)> to <android.graphics.Canvas: void scale(float,float,float,float)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.Math: int min(int,int)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.String: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.String: java.lang.String substring(int,int)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.String: boolean endsWith(java.lang.String)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.String: java.lang.String trim()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.String: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.PrecomputedText: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.SpannableString: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.StringBuffer: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <g0.c: java.lang.String toString()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.StringBuilder: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.PrecomputedText: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.SpannableString: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <java.lang.StringBuffer: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <g0.c: int length()>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.Layout: int getLineEnd(int)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.Layout: int getLineBaseline(int)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.Layout: void draw(android.graphics.Canvas)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.RecordingCanvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.RecordingCanvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.Canvas: void translate(float,float)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.text.TextPaint: void setAlpha(int)>
<com.google.android.material.internal.a: void n(android.graphics.Canvas,float,float)> to <android.graphics.Paint: int getAlpha()>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean endsWith(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: java.lang.String toString()> to <android.text.PrecomputedText: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <java.lang.Object: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableString: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <g0.c: java.lang.String toString()>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int G(int,boolean)>
null to <com.google.android.material.textfield.TextInputLayout: int G(int,boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int H(int,boolean)>
null to <com.google.android.material.textfield.TextInputLayout: int H(int,boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean I()>
null to <com.google.android.material.textfield.TextInputLayout: boolean I()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void J()>
null to <com.google.android.material.textfield.TextInputLayout: void J()>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
UI update?
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<com.google.android.material.textfield.TextInputLayout: boolean L()>
null to <com.google.android.material.textfield.TextInputLayout: boolean L()>
<com.google.android.material.textfield.TextInputLayout: boolean L()> to <android.widget.ImageView: int getVisibility()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean P()>
null to <com.google.android.material.textfield.TextInputLayout: boolean P()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)>
null to <com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)>
<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)> to <java.lang.System: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)> to <android.widget.ImageView: int[] getDrawableState()>
<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)> to <android.view.View: int[] getDrawableState()>
<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)> to <java.util.Arrays: int[] copyOf(int[],int)>
<com.google.android.material.textfield.TextInputLayout: int[] R(com.google.android.material.internal.CheckableImageButton)> to <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void T()>
null to <com.google.android.material.textfield.TextInputLayout: void T()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.c: void q0(android.graphics.RectF)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.graphics.RectF: void offset(float,float)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.widget.TextView: int getGravity()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.widget.TextView: int getWidth()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.view.ViewGroup: int getPaddingLeft()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.TextInputLayout: void l(android.graphics.RectF)>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.android.material.textfield.c: void q0(android.graphics.RectF)> to <com.google.android.material.textfield.c: void p0(float,float,float,float)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: boolean g(java.lang.CharSequence)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float r()>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float t(android.graphics.RectF,int,int)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float s(int,int)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <android.graphics.RectF: void set(float,float,float,float)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <c2.g: void invalidateSelf()>
<com.google.android.material.internal.a: boolean g(java.lang.CharSequence)> to <com.google.android.material.internal.a: boolean D()>
<com.google.android.material.internal.a: boolean g(java.lang.CharSequence)> to <com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)>
<com.google.android.material.internal.a: float r()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float r()> to <android.graphics.Paint: float ascent()>
<com.google.android.material.internal.a: float t(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float c()>
<com.google.android.material.internal.a: float s(int,int)> to <com.google.android.material.internal.a: float c()>
<c2.g: void invalidateSelf()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<com.google.android.material.internal.a: boolean D()> to <i0.w: void <clinit>()>
<com.google.android.material.internal.a: boolean D()> to <i0.w: int C(android.view.View)>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.e: void <clinit>()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.e$d: boolean a(java.lang.CharSequence,int,int)>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.String: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.StringBuilder: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.PrecomputedText: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.SpannableString: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.StringBuffer: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.c: int length()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: void setLetterSpacing(float)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.text.TextPaint: void setTextSize(float)>
<com.google.android.material.internal.a: float c()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float c()> to <android.text.TextPaint: float measureText(java.lang.CharSequence,int,int)>
<com.google.android.material.internal.a: float c()> to <java.lang.String: int length()>
<com.google.android.material.internal.a: float c()> to <java.lang.StringBuilder: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.PrecomputedText: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.SpannableString: int length()>
<com.google.android.material.internal.a: float c()> to <java.lang.StringBuffer: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.internal.a: float c()> to <g0.c: int length()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<g0.e: void <clinit>()> to <g0.e: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$e: void <init>(g0.e$c,boolean)>
<g0.e: void <clinit>()> to <g0.e$b: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$a: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$f: void <clinit>()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.c: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.IllegalArgumentException: void <init>()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$d: boolean c(java.lang.CharSequence,int,int)>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$f: boolean b()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$e: boolean b()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.String: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: int length()>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<g0.e$e: void <init>(g0.e$c,boolean)> to <g0.e$d: void <init>(g0.e$c)>
<g0.e$b: void <clinit>()> to <g0.e$b: void <clinit>()>
<g0.e$b: void <clinit>()> to <g0.e$b: void <init>()>
<g0.e$a: void <clinit>()> to <g0.e$a: void <clinit>()>
<g0.e$a: void <clinit>()> to <g0.e$a: void <init>(boolean)>
<g0.e$f: void <clinit>()> to <g0.e$f: void <clinit>()>
<g0.e$f: void <clinit>()> to <g0.e$f: void <init>()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$a: int a(java.lang.CharSequence,int,int)>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$f: boolean b()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$e: boolean b()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$b: int a(java.lang.CharSequence,int,int)>
<g0.e$f: boolean b()> to <java.util.Locale: void <clinit>()>
<g0.e$f: boolean b()> to <g0.f: void <clinit>()>
<g0.e$f: boolean b()> to <java.util.Locale: java.util.Locale getDefault()>
<g0.e$f: boolean b()> to <g0.f: int b(java.util.Locale)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.e$d: void <init>(g0.e$c)> to <java.lang.Object: void <init>()>
<g0.e$b: void <init>()> to <java.lang.Object: void <init>()>
<g0.e$a: void <init>(boolean)> to <java.lang.Object: void <init>()>
<g0.e$f: void <init>()> to <g0.e$d: void <init>(g0.e$c)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: void <clinit>()>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.String: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.c: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.e: void <clinit>()>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: byte getDirectionality(char)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.e: int a(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: void <clinit>()>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.String: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.c: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.e: void <clinit>()>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: byte getDirectionality(char)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.e: int b(int)>
<g0.f: void <clinit>()> to <java.util.Locale: void <clinit>()>
<g0.f: void <clinit>()> to <java.util.Locale: void <init>(java.lang.String,java.lang.String)>
<g0.f: void <clinit>()> to <g0.f: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <android.os.Build$VERSION: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<g0.f: int b(java.util.Locale)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.f: int b(java.util.Locale)> to <android.text.TextUtils: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <g0.f: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>
<g0.f: int b(java.util.Locale)> to <g0.b: java.lang.String c(java.util.Locale)>
<g0.f: int b(java.util.Locale)> to <g0.f: int a(java.util.Locale)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.StringBuffer: char charAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: char charAt(int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.Spannable: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableString: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.c: char charAt(int)> to <g0.c: char charAt(int)>
<java.lang.Character: byte getDirectionality(char)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<g0.b: void <clinit>()> to <java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<g0.b: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<g0.b: void <clinit>()> to <g0.b: void <clinit>()>
<g0.b: void <clinit>()> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
<g0.b: void <clinit>()> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.os.Build$VERSION: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <java.util.Locale: java.lang.String getScript()>
<g0.b: java.lang.String c(java.util.Locale)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: java.lang.String getScript()>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: android.icu.util.ULocale forLocale(java.util.Locale)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: android.icu.util.ULocale addLikelySubtags(android.icu.util.ULocale)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: java.lang.String a(java.util.Locale)>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: java.lang.String b(java.lang.String)>
<g0.f: int a(java.util.Locale)> to <java.lang.Character: void <clinit>()>
<g0.f: int a(java.util.Locale)> to <java.lang.String: char charAt(int)>
<g0.f: int a(java.util.Locale)> to <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<g0.f: int a(java.util.Locale)> to <java.lang.Character: byte getDirectionality(char)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.Class forName(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.b: java.lang.String a(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String a(java.util.Locale)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String a(java.util.Locale)> to <java.util.Locale: java.lang.String toString()>
<g0.b: java.lang.String a(java.util.Locale)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String b(java.lang.String)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String b(java.lang.String)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String b(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ImageView: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.Spinner: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.View: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.TextView: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ListView: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ListView: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <android.widget.LinearLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void Z()>
null to <com.google.android.material.textfield.TextInputLayout: void Z()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean a(com.google.android.material.textfield.TextInputLayout)>
null to <com.google.android.material.textfield.TextInputLayout: boolean a(com.google.android.material.textfield.TextInputLayout)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean b(com.google.android.material.textfield.TextInputLayout)>
null to <com.google.android.material.textfield.TextInputLayout: boolean b(com.google.android.material.textfield.TextInputLayout)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void b0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void b0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void c(com.google.android.material.textfield.TextInputLayout,int)>
null to <com.google.android.material.textfield.TextInputLayout: void c(com.google.android.material.textfield.TextInputLayout,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void c0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void c0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton d(com.google.android.material.textfield.TextInputLayout)>
null to <com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton d(com.google.android.material.textfield.TextInputLayout)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void d0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void d0(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean f0()>
null to <com.google.android.material.textfield.TextInputLayout: boolean f0()>
<com.google.android.material.textfield.TextInputLayout: boolean f0()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean f0()> to <android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.textfield.TextInputLayout: boolean f0()> to <com.google.android.material.textfield.TextInputLayout: boolean K()>
<com.google.android.material.textfield.TextInputLayout: boolean f0()> to <com.google.android.material.textfield.TextInputLayout: boolean I()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.ImageView: int getVisibility()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void g()>
null to <com.google.android.material.textfield.TextInputLayout: void g()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean g0()>
null to <com.google.android.material.textfield.TextInputLayout: boolean g0()>
<com.google.android.material.textfield.TextInputLayout: boolean g0()> to <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()>
<com.google.android.material.textfield.TextInputLayout: boolean g0()> to <android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
UI update?

<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.e getEndIconDelegate()>
null to <com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.e getEndIconDelegate()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.e getEndIconDelegate()> to <android.util.SparseArray: java.lang.Object get(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void h()>
null to <com.google.android.material.textfield.TextInputLayout: void h()>
<com.google.android.material.textfield.TextInputLayout: void h()> to <i0.w: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void h()> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void h()> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.textfield.TextInputLayout: void h()> to <z1.c: boolean h(android.content.Context)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <i0.w: int I(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <i0.w: int H(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <i0.w: void A0(android.view.View,int,int,int,int)>
<com.google.android.material.textfield.TextInputLayout: void h()> to <z1.c: boolean g(android.content.Context)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<z1.c: boolean h(android.content.Context)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<z1.c: boolean h(android.content.Context)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<z1.c: boolean h(android.content.Context)> to <h.d: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <android.app.Application: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<i0.w: int I(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.widget.FrameLayout: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.Spinner: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.TextView: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.ViewGroup: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingStart()>
<i0.w: int I(android.view.View)> to <android.widget.LinearLayout: int getPaddingStart()>
<i0.w: int H(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.widget.FrameLayout: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.Spinner: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.TextView: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.ViewGroup: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingEnd()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void A0(android.view.View,int,int,int,int)> to <androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPadding(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <n.a: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<i0.w: void A0(android.view.View,int,int,int,int)> to <android.view.View: void setPaddingRelative(int,int,int,int)>
<z1.c: boolean g(android.content.Context)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<z1.c: boolean g(android.content.Context)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<z1.c: boolean g(android.content.Context)> to <h.d: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <android.app.Application: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int I(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int H(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()>
null to <com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()> to <com.google.android.material.textfield.TextInputLayout: boolean K()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()> to <com.google.android.material.textfield.TextInputLayout: boolean I()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.ImageView: int getVisibility()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean h0()>
null to <com.google.android.material.textfield.TextInputLayout: boolean h0()>
<com.google.android.material.textfield.TextInputLayout: boolean h0()> to <android.widget.EditText: android.graphics.drawable.Drawable getBackground()>
<com.google.android.material.textfield.TextInputLayout: boolean h0()> to <android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getBackground()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void i0()>
null to <com.google.android.material.textfield.TextInputLayout: void i0()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.view.View: void bringToFront()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
UI update?
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<com.google.android.material.textfield.TextInputLayout: void k0()>
null to <com.google.android.material.textfield.TextInputLayout: void k0()>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <z1.c: boolean h(android.content.Context)>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.textfield.TextInputLayout: void k0()> to <z1.c: boolean g(android.content.Context)>
<z1.c: boolean h(android.content.Context)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<z1.c: boolean h(android.content.Context)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<z1.c: boolean h(android.content.Context)> to <h.d: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <android.app.Application: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<z1.c: boolean h(android.content.Context)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <android.content.res.Resources: int getDimensionPixelSize(int)>
<androidx.appcompat.widget.o0: int getDimensionPixelSize(int)> to <androidx.appcompat.widget.o0: int getDimensionPixelSize(int)>
<z1.c: boolean g(android.content.Context)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<z1.c: boolean g(android.content.Context)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<z1.c: boolean g(android.content.Context)> to <h.d: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <android.app.Application: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<z1.c: boolean g(android.content.Context)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void l(android.graphics.RectF)>
null to <com.google.android.material.textfield.TextInputLayout: void l(android.graphics.RectF)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void l0(android.graphics.Rect)>
null to <com.google.android.material.textfield.TextInputLayout: void l0(android.graphics.Rect)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void m0()>
null to <com.google.android.material.textfield.TextInputLayout: void m0()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void o()>
null to <com.google.android.material.textfield.TextInputLayout: void o()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)>
<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)> to <android.widget.TextView: void setContentDescription(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)> to <android.view.ContextThemeWrapper: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)> to <android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.material.textfield.TextInputLayout: void o0(android.content.Context,android.widget.TextView,int,int,boolean)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int q()>
null to <com.google.android.material.textfield.TextInputLayout: int q()>
<com.google.android.material.textfield.TextInputLayout: int q()> to <s1.a: int d(android.view.View,int,int)>
<com.google.android.material.textfield.TextInputLayout: int q()> to <s1.a: int e(int,int)>
<s1.a: int d(android.view.View,int,int)> to <s1.a: int a(android.content.Context,int,int)>
<s1.a: int d(android.view.View,int,int)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.HorizontalScrollView: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.ImageButton: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.ImageView: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.Spinner: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.view.View: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.view.ViewGroup: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.TextView: android.content.Context getContext()>
<s1.a: int d(android.view.View,int,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<s1.a: int e(int,int)> to <z.a: void <clinit>()>
<s1.a: int e(int,int)> to <z.a: int b(int,int)>
<s1.a: int a(android.content.Context,int,int)> to <z1.b: android.util.TypedValue a(android.content.Context,int)>
<z.a: void <clinit>()> to <z.a: void <clinit>()>
<z.a: void <clinit>()> to <java.lang.ThreadLocal: void <init>()>
<z.a: int b(int,int)> to <z.a: void <clinit>()>
<z.a: int b(int,int)> to <android.graphics.Color: int alpha(int)>
<z.a: int b(int,int)> to <z.a: int a(int,int)>
<z.a: int b(int,int)> to <android.graphics.Color: int red(int)>
<z.a: int b(int,int)> to <z.a: int c(int,int,int,int,int)>
<z.a: int b(int,int)> to <android.graphics.Color: int green(int)>
<z.a: int b(int,int)> to <android.graphics.Color: int blue(int)>
<z.a: int b(int,int)> to <android.graphics.Color: int argb(int,int,int,int)>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.util.TypedValue: void <init>()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <h.d: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<z1.b: android.util.TypedValue a(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void q0()>
null to <com.google.android.material.textfield.TextInputLayout: void q0()>
<com.google.android.material.textfield.TextInputLayout: void q0()> to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: void q0()> to <com.google.android.material.textfield.TextInputLayout: void T()>
<com.google.android.material.textfield.TextInputLayout: void q0()> to <com.google.android.material.textfield.TextInputLayout: void y()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.c: void q0(android.graphics.RectF)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.graphics.RectF: void offset(float,float)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.widget.TextView: int getGravity()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.widget.TextView: int getWidth()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <android.view.ViewGroup: int getPaddingLeft()>
<com.google.android.material.textfield.TextInputLayout: void T()> to <com.google.android.material.textfield.TextInputLayout: void l(android.graphics.RectF)>
<com.google.android.material.textfield.TextInputLayout: void y()> to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: void y()> to <com.google.android.material.textfield.c: void n0()>
<com.google.android.material.textfield.c: void q0(android.graphics.RectF)> to <com.google.android.material.textfield.c: void p0(float,float,float,float)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: boolean g(java.lang.CharSequence)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float r()>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float t(android.graphics.RectF,int,int)>
<com.google.android.material.internal.a: void p(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float s(int,int)>
<com.google.android.material.textfield.c: void n0()> to <com.google.android.material.textfield.c: void p0(float,float,float,float)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <android.graphics.RectF: void set(float,float,float,float)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <c2.g: void invalidateSelf()>
<com.google.android.material.internal.a: boolean g(java.lang.CharSequence)> to <com.google.android.material.internal.a: boolean D()>
<com.google.android.material.internal.a: boolean g(java.lang.CharSequence)> to <com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)>
<com.google.android.material.internal.a: float r()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float r()> to <android.graphics.Paint: float ascent()>
<com.google.android.material.internal.a: float t(android.graphics.RectF,int,int)> to <com.google.android.material.internal.a: float c()>
<com.google.android.material.internal.a: float s(int,int)> to <com.google.android.material.internal.a: float c()>
<c2.g: void invalidateSelf()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<com.google.android.material.internal.a: boolean D()> to <i0.w: void <clinit>()>
<com.google.android.material.internal.a: boolean D()> to <i0.w: int C(android.view.View)>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.e: void <clinit>()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.e$d: boolean a(java.lang.CharSequence,int,int)>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.String: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.StringBuilder: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.PrecomputedText: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.SpannableString: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <java.lang.StringBuffer: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.internal.a: boolean F(java.lang.CharSequence,boolean)> to <g0.c: int length()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: void setLetterSpacing(float)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.text.TextPaint: void setTextSize(float)>
<com.google.android.material.internal.a: float c()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float c()> to <android.text.TextPaint: float measureText(java.lang.CharSequence,int,int)>
<com.google.android.material.internal.a: float c()> to <java.lang.String: int length()>
<com.google.android.material.internal.a: float c()> to <java.lang.StringBuilder: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.PrecomputedText: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.SpannableString: int length()>
<com.google.android.material.internal.a: float c()> to <java.lang.StringBuffer: int length()>
<com.google.android.material.internal.a: float c()> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.internal.a: float c()> to <g0.c: int length()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<g0.e: void <clinit>()> to <g0.e: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$e: void <init>(g0.e$c,boolean)>
<g0.e: void <clinit>()> to <g0.e$b: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$a: void <clinit>()>
<g0.e: void <clinit>()> to <g0.e$f: void <clinit>()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.c: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.IllegalArgumentException: void <init>()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$d: boolean c(java.lang.CharSequence,int,int)>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$f: boolean b()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <g0.e$e: boolean b()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.String: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: int length()>
<g0.e$d: boolean a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: int length()>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<g0.e$e: void <init>(g0.e$c,boolean)> to <g0.e$d: void <init>(g0.e$c)>
<g0.e$b: void <clinit>()> to <g0.e$b: void <clinit>()>
<g0.e$b: void <clinit>()> to <g0.e$b: void <init>()>
<g0.e$a: void <clinit>()> to <g0.e$a: void <clinit>()>
<g0.e$a: void <clinit>()> to <g0.e$a: void <init>(boolean)>
<g0.e$f: void <clinit>()> to <g0.e$f: void <clinit>()>
<g0.e$f: void <clinit>()> to <g0.e$f: void <init>()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$a: int a(java.lang.CharSequence,int,int)>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$f: boolean b()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$e: boolean b()>
<g0.e$d: boolean c(java.lang.CharSequence,int,int)> to <g0.e$b: int a(java.lang.CharSequence,int,int)>
<g0.e$f: boolean b()> to <java.util.Locale: void <clinit>()>
<g0.e$f: boolean b()> to <g0.f: void <clinit>()>
<g0.e$f: boolean b()> to <java.util.Locale: java.util.Locale getDefault()>
<g0.e$f: boolean b()> to <g0.f: int b(java.util.Locale)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.e$d: void <init>(g0.e$c)> to <java.lang.Object: void <init>()>
<g0.e$b: void <init>()> to <java.lang.Object: void <init>()>
<g0.e$a: void <init>(boolean)> to <java.lang.Object: void <init>()>
<g0.e$f: void <init>()> to <g0.e$d: void <init>(g0.e$c)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: void <clinit>()>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.String: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.c: char charAt(int)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.e: void <clinit>()>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: byte getDirectionality(char)>
<g0.e$a: int a(java.lang.CharSequence,int,int)> to <g0.e: int a(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: void <clinit>()>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.String: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuilder: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableString: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.StringBuffer: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.c: char charAt(int)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.e: void <clinit>()>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <java.lang.Character: byte getDirectionality(char)>
<g0.e$b: int a(java.lang.CharSequence,int,int)> to <g0.e: int b(int)>
<g0.f: void <clinit>()> to <java.util.Locale: void <clinit>()>
<g0.f: void <clinit>()> to <java.util.Locale: void <init>(java.lang.String,java.lang.String)>
<g0.f: void <clinit>()> to <g0.f: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <android.os.Build$VERSION: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<g0.f: int b(java.util.Locale)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.f: int b(java.util.Locale)> to <android.text.TextUtils: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <g0.f: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.f: int b(java.util.Locale)> to <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>
<g0.f: int b(java.util.Locale)> to <g0.b: java.lang.String c(java.util.Locale)>
<g0.f: int b(java.util.Locale)> to <g0.f: int a(java.util.Locale)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.StringBuffer: char charAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: char charAt(int)> to <android.text.PrecomputedText: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.Spannable: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableString: char charAt(int)>
<g0.c: char charAt(int)> to <android.text.SpannableStringBuilder: char charAt(int)>
<g0.c: char charAt(int)> to <g0.c: char charAt(int)>
<java.lang.Character: byte getDirectionality(char)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<g0.b: void <clinit>()> to <java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<g0.b: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<g0.b: void <clinit>()> to <g0.b: void <clinit>()>
<g0.b: void <clinit>()> to <java.lang.Class: java.lang.Class forName(java.lang.String)>
<g0.b: void <clinit>()> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.os.Build$VERSION: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <java.util.Locale: java.lang.String getScript()>
<g0.b: java.lang.String c(java.util.Locale)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: java.lang.String getScript()>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: android.icu.util.ULocale forLocale(java.util.Locale)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.icu.util.ULocale: android.icu.util.ULocale addLikelySubtags(android.icu.util.ULocale)>
<g0.b: java.lang.String c(java.util.Locale)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: java.lang.String a(java.util.Locale)>
<g0.b: java.lang.String c(java.util.Locale)> to <g0.b: java.lang.String b(java.lang.String)>
<g0.f: int a(java.util.Locale)> to <java.lang.Character: void <clinit>()>
<g0.f: int a(java.util.Locale)> to <java.lang.String: char charAt(int)>
<g0.f: int a(java.util.Locale)> to <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<g0.f: int a(java.util.Locale)> to <java.lang.Character: byte getDirectionality(char)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.Class forName(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.b: java.lang.String a(java.util.Locale)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String a(java.util.Locale)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String a(java.util.Locale)> to <java.util.Locale: java.lang.String toString()>
<g0.b: java.lang.String a(java.util.Locale)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<g0.b: java.lang.String b(java.lang.String)> to <g0.b: void <clinit>()>
<g0.b: java.lang.String b(java.lang.String)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<g0.b: java.lang.String b(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.Throwable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect r(android.graphics.Rect)>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.Rect r(android.graphics.Rect)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int s(android.graphics.Rect,android.graphics.Rect,float)>
null to <com.google.android.material.textfield.TextInputLayout: int s(android.graphics.Rect,android.graphics.Rect,float)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int t(android.graphics.Rect,float)>
null to <com.google.android.material.textfield.TextInputLayout: int t(android.graphics.Rect,float)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean t0()>
null to <com.google.android.material.textfield.TextInputLayout: boolean t0()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect u(android.graphics.Rect)>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.Rect u(android.graphics.Rect)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void u0()>
null to <com.google.android.material.textfield.TextInputLayout: void u0()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <com.google.android.material.textfield.TextInputLayout: int v()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <android.widget.ScrollView: void requestLayout()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <android.widget.HorizontalScrollView: void requestLayout()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <androidx.core.widget.NestedScrollView: void requestLayout()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <android.widget.FrameLayout: void requestLayout()>
<com.google.android.material.textfield.TextInputLayout: void u0()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.textfield.TextInputLayout: int v()> to <com.google.android.material.internal.a: float r()>
<androidx.core.widget.NestedScrollView: void requestLayout()> to <android.widget.FrameLayout: void requestLayout()>
<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()> to <android.widget.HorizontalScrollView: void requestLayout()>
<com.google.android.material.internal.a: float r()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float r()> to <android.graphics.Paint: float ascent()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: void setLetterSpacing(float)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.text.TextPaint: void setTextSize(float)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int v()>
null to <com.google.android.material.textfield.TextInputLayout: int v()>
<com.google.android.material.textfield.TextInputLayout: int v()> to <com.google.android.material.internal.a: float r()>
<com.google.android.material.internal.a: float r()> to <com.google.android.material.internal.a: void z(android.text.TextPaint)>
<com.google.android.material.internal.a: float r()> to <android.graphics.Paint: float ascent()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: void setLetterSpacing(float)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.android.material.internal.a: void z(android.text.TextPaint)> to <android.text.TextPaint: void setTextSize(float)>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean w()>
null to <com.google.android.material.textfield.TextInputLayout: boolean w()>
<com.google.android.material.textfield.TextInputLayout: boolean w()> to <com.google.android.material.textfield.TextInputLayout: boolean x()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean x()>
null to <com.google.android.material.textfield.TextInputLayout: boolean x()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void x0()>
null to <com.google.android.material.textfield.TextInputLayout: void x0()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void y()>
null to <com.google.android.material.textfield.TextInputLayout: void y()>
<com.google.android.material.textfield.TextInputLayout: void y()> to <com.google.android.material.textfield.TextInputLayout: boolean A()>
<com.google.android.material.textfield.TextInputLayout: void y()> to <com.google.android.material.textfield.c: void n0()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: boolean A()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.android.material.textfield.c: void n0()> to <com.google.android.material.textfield.c: void p0(float,float,float,float)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <android.graphics.RectF: void set(float,float,float,float)>
<com.google.android.material.textfield.c: void p0(float,float,float,float)> to <c2.g: void invalidateSelf()>
<c2.g: void invalidateSelf()> to <android.graphics.drawable.Drawable: void invalidateSelf()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void y0()>
null to <com.google.android.material.textfield.TextInputLayout: void y0()>
<com.google.android.material.textfield.TextInputLayout: void y0()> to <android.widget.EditText: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputLayout: void y0()> to <com.google.android.material.textfield.TextInputLayout: void z0(int)>
<com.google.android.material.textfield.TextInputLayout: void y0()> to <android.text.SpannableStringBuilder: int length()>
<com.google.android.material.textfield.TextInputLayout: void y0()> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputLayout: void y0()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <com.google.android.material.textfield.TextInputLayout: void i0()>
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <com.google.android.material.textfield.TextInputLayout: void J()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.view.View: void bringToFront()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
UI update?
<com.google.android.material.textfield.TextInputLayout: void y0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true
<com.google.android.material.textfield.TextInputLayout: void y0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<com.google.android.material.textfield.TextInputLayout: void z0(int)>
null to <com.google.android.material.textfield.TextInputLayout: void z0(int)>
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <com.google.android.material.textfield.TextInputLayout: void i0()>
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <com.google.android.material.textfield.TextInputLayout: void J()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.view.View: void bringToFront()>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void i0()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckedTextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CompoundButton: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.CheckBox: void setVisibility(int)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputLayout: void J()> to <android.widget.EditText: void setText(java.lang.CharSequence)>
UI update?
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true
<com.google.android.material.textfield.TextInputLayout: void z0(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<com.google.android.material.textfield.TextInputLayout: boolean K()>
null to <com.google.android.material.textfield.TextInputLayout: boolean K()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.textfield.TextInputLayout: boolean K()> to <android.widget.ImageView: int getVisibility()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean M()>
null to <com.google.android.material.textfield.TextInputLayout: boolean M()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean N()>
null to <com.google.android.material.textfield.TextInputLayout: boolean N()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean O()>
null to <com.google.android.material.textfield.TextInputLayout: boolean O()>
UI update?

<com.google.android.material.textfield.TextInputLayout: boolean Q()>
null to <com.google.android.material.textfield.TextInputLayout: boolean Q()>
<com.google.android.material.textfield.TextInputLayout: boolean Q()> to <android.widget.ImageView: int getVisibility()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
null to <com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>
null to <com.google.android.material.textfield.TextInputLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>
null to <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void e(com.google.android.material.textfield.TextInputLayout$f)>
null to <com.google.android.material.textfield.TextInputLayout: void e(com.google.android.material.textfield.TextInputLayout$f)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void f(com.google.android.material.textfield.TextInputLayout$g)>
null to <com.google.android.material.textfield.TextInputLayout: void f(com.google.android.material.textfield.TextInputLayout$g)>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBaseline()>
null to <com.google.android.material.textfield.TextInputLayout: int getBaseline()>
UI update?

<com.google.android.material.textfield.TextInputLayout: c2.g getBoxBackground()>
null to <com.google.android.material.textfield.TextInputLayout: c2.g getBoxBackground()>
<com.google.android.material.textfield.TextInputLayout: c2.g getBoxBackground()> to <java.lang.IllegalStateException: void <init>()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()>
null to <com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()>
null to <com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()>
UI update?

<com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()>
null to <com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()>
UI update?

<com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()>
null to <com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()>
UI update?

<com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()>
null to <com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()>
UI update?

<com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()>
null to <com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()>
null to <com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()>
null to <com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()>
null to <com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()>
null to <com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>
null to <com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getEndIconMode()>
null to <com.google.android.material.textfield.TextInputLayout: int getEndIconMode()>
UI update?

<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()>
null to <com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()>
null to <com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()>
null to <com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
UI update?

<com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()>
null to <com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getMaxWidth()>
null to <com.google.android.material.textfield.TextInputLayout: int getMaxWidth()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getMinWidth()>
null to <com.google.android.material.textfield.TextInputLayout: int getMinWidth()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()>
UI update?

<com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()>
null to <com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()>
null to <com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
UI update?

<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()>
null to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()>
null to <com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()>
null to <com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()>
null to <com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void i(float)>
null to <com.google.android.material.textfield.TextInputLayout: void i(float)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <m1.a: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <com.google.android.material.textfield.TextInputLayout$d: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <android.animation.ValueAnimator: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void i(float)> to <com.google.android.material.internal.a: float y()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout$d: void <init>(com.google.android.material.textfield.TextInputLayout)> to <java.lang.Object: void <init>()>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void onMeasure(int,int)>
null to <com.google.android.material.textfield.TextInputLayout: void onMeasure(int,int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: android.os.Parcelable onSaveInstanceState()>
null to <com.google.android.material.textfield.TextInputLayout: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <android.widget.LinearLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)> to <com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ImageView: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.Spinner: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.View: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.TextView: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: void setEnabled(boolean)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ListView: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.ListView: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.widget.FrameLayout: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)> to <com.google.android.material.textfield.TextInputLayout: void U(android.view.ViewGroup,boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)> to <com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)> to <android.view.View: void sendAccessibilityEvent(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)>
UI update?
------------------------------------------------------
p1.a
------------------------------------------------------
com.simplemobiletools.commons.views.PatternTab
------------------------------------------------------
com.simplemobiletools.commons.views.LineColorPicker
------------------------------------------------------
com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller
------------------------------------------------------
com.google.android.material.timepicker.ClockHandView
------------------------------------------------------
androidx.constraintlayout.widget.k
------------------------------------------------------
androidx.constraintlayout.widget.g
------------------------------------------------------
androidx.constraintlayout.widget.e
------------------------------------------------------
androidx.constraintlayout.widget.b

<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)>
UI update?

<androidx.constraintlayout.widget.b: android.view.View[] m(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: android.view.View[] m(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void j(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: void j(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void g(android.view.View)>
null to <androidx.constraintlayout.widget.b: void g(android.view.View)>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.util.Log: int e(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.view.View: void requestLayout()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void g(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
UI update?

<androidx.constraintlayout.widget.b: int[] getReferencedIds()>
null to <androidx.constraintlayout.widget.b: int[] getReferencedIds()>
<androidx.constraintlayout.widget.b: int[] getReferencedIds()> to <java.util.Arrays: int[] copyOf(int[],int)>
UI update?

<androidx.constraintlayout.widget.b: int l(java.lang.String)>
null to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void e(int)>
null to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
UI update?

<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
null to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void f(java.lang.String)>
null to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.b: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.b: void o(s.e,boolean)>
null to <androidx.constraintlayout.widget.b: void o(s.e,boolean)>
UI update?

<androidx.constraintlayout.widget.b: void d(java.lang.String)>
null to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.e: void onLayout(boolean,int,int,int,int)>
null to <androidx.constraintlayout.widget.e: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.constraintlayout.widget.e: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.e$a b(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.e$a b(android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.e$a a()>
null to <androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.e$a a()>
UI update?

<androidx.constraintlayout.widget.g: void setEmptyVisibility(int)>
null to <androidx.constraintlayout.widget.g: void setEmptyVisibility(int)>
UI update?

<androidx.constraintlayout.widget.b: void <init>(android.content.Context)>
null to <androidx.constraintlayout.widget.b: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <android.view.View: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void <init>(android.content.Context)> to <androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.motion.widget.h: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void B1(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void z1(boolean)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <s.a: void <init>()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.Barrier: void setType(int)>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.Barrier: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: float getFloat(int,float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void C2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void G2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void w2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void E2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void u2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void F2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void A2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void s2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void y2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void q2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void v2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void B2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void t2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void z2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void r2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void H2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void x2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void I2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void J1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void M1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void O1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void L1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void K1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void N1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void I1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void D2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void <init>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<s.a: void <init>()> to <s.j: void <init>()>
<androidx.constraintlayout.widget.b: void t()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<s.g: void <init>()> to <s.l: void <init>()>
<s.g: void <init>()> to <java.util.ArrayList: void <init>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<s.j: void <init>()> to <s.e: void <clinit>()>
<s.j: void <init>()> to <s.e: void <init>()>
<s.l: void <init>()> to <t.b$a: void <clinit>()>
<s.l: void <init>()> to <t.b$a: void <init>()>
<s.l: void <init>()> to <s.j: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.e: void <init>()> to <r.a: void <clinit>()>
<s.e: void <init>()> to <java.util.ArrayList: void <init>()>
<s.e: void <init>()> to <s.d: void <init>(s.e,s.d$b)>
<s.e: void <init>()> to <r.a: void <init>(s.e)>
<s.e: void <init>()> to <s.e: void d()>
<s.e: void <init>()> to <java.lang.Object: void <init>()>
<s.e: void <init>()> to <s.d$b: void <clinit>()>
<s.e: void <init>()> to <s.e$b: void <clinit>()>
<s.e: void <init>()> to <s.e: void <clinit>()>
<t.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<s.d: void <init>(s.e,s.d$b)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.util.HashMap: void <init>()>
<s.e: void d()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <clinit>()> to <s.d$b: void <clinit>()>
<s.d$b: void <clinit>()> to <s.d$b: void <init>(java.lang.String,int)>
<s.e$b: void <clinit>()> to <s.e$b: void <clinit>()>
<s.e$b: void <clinit>()> to <s.e$b: void <init>(java.lang.String,int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<s.e$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.d getConstraintSet()>
null to <androidx.constraintlayout.widget.e: androidx.constraintlayout.widget.d getConstraintSet()>
UI update?

<androidx.constraintlayout.widget.k: void u(s.l,int,int)>
null to <androidx.constraintlayout.widget.k: void u(s.l,int,int)>
UI update?

<androidx.constraintlayout.widget.k: void onAttachedToWindow()>
null to <androidx.constraintlayout.widget.k: void onAttachedToWindow()>
UI update?

<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.g: void setContentId(int)>
null to <androidx.constraintlayout.widget.g: void setContentId(int)>
UI update?

<androidx.constraintlayout.widget.g: void b(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.g: void b(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.g: android.view.View getContent()>
null to <androidx.constraintlayout.widget.g: android.view.View getContent()>
UI update?

<androidx.constraintlayout.widget.g: int getEmptyVisibility()>
null to <androidx.constraintlayout.widget.g: int getEmptyVisibility()>
UI update?

<androidx.constraintlayout.widget.g: void onDraw(android.graphics.Canvas)>
null to <androidx.constraintlayout.widget.g: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.constraintlayout.widget.g: void a(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.g: void a(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.k: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.k: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.timepicker.ClockHandView: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void onDraw(android.graphics.Canvas)>
null to <com.google.android.material.timepicker.ClockHandView: void onDraw(android.graphics.Canvas)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void k(float)>
null to <com.google.android.material.timepicker.ClockHandView: void k(float)>
UI update?

<com.google.android.material.timepicker.ClockHandView: int g()>
null to <com.google.android.material.timepicker.ClockHandView: int g()>
UI update?

<com.google.android.material.timepicker.ClockHandView: float f()>
null to <com.google.android.material.timepicker.ClockHandView: float f()>
UI update?

<com.google.android.material.timepicker.ClockHandView: void b(com.google.android.material.timepicker.ClockHandView$d)>
null to <com.google.android.material.timepicker.ClockHandView: void b(com.google.android.material.timepicker.ClockHandView$d)>
UI update?

<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)>
null to <com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)> to <java.lang.Float: void <clinit>()>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)> to <android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)> to <com.google.android.material.timepicker.ClockHandView: float f()>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)> to <java.lang.Math: float abs(float)>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair h(float)> to <java.lang.Float: java.lang.Float valueOf(float)>
<java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
<java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.timepicker.ClockHandView: int e(float,float)>
null to <com.google.android.material.timepicker.ClockHandView: int e(float,float)>
<com.google.android.material.timepicker.ClockHandView: int e(float,float)> to <java.lang.Math: double atan2(double,double)>
<com.google.android.material.timepicker.ClockHandView: int e(float,float)> to <android.view.View: int getHeight()>
<com.google.android.material.timepicker.ClockHandView: int e(float,float)> to <android.view.View: int getWidth()>
<com.google.android.material.timepicker.ClockHandView: int e(float,float)> to <java.lang.Math: double toDegrees(double)>
UI update?

<com.google.android.material.timepicker.ClockHandView: android.graphics.RectF d()>
null to <com.google.android.material.timepicker.ClockHandView: android.graphics.RectF d()>
UI update?

<com.google.android.material.timepicker.ClockHandView: void a(com.google.android.material.timepicker.ClockHandView,float,boolean)>
null to <com.google.android.material.timepicker.ClockHandView: void a(com.google.android.material.timepicker.ClockHandView,float,boolean)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.timepicker.ClockHandView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.timepicker.ClockHandView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean y()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean y()>
UI update?

<com.google.android.material.timepicker.ClockHandView: void c(android.graphics.Canvas)>
null to <com.google.android.material.timepicker.ClockHandView: void c(android.graphics.Canvas)>
UI update?

<com.google.android.material.timepicker.ClockHandView: void j(int)>
null to <com.google.android.material.timepicker.ClockHandView: void j(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackMarginEnd(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackMarginEnd(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackDrawable(android.graphics.drawable.Drawable)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTextStyle(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTextStyle(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setScrollVertically(boolean)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setScrollVertically(boolean)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackMarginStart(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setTrackMarginStart(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setPopupTextView(android.widget.TextView)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setPopupTextView(android.widget.TextView)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setPopupDrawable(android.graphics.drawable.Drawable)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setPopupDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleVisibilityDuration(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleVisibilityDuration(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleWidth(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleWidth(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleStateListener(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$HandleStateListener)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleStateListener(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$HandleStateListener)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleHeight(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleHeight(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleDrawable(android.graphics.drawable.Drawable)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setHandleDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setFastScrollEnabled(boolean)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setFastScrollEnabled(boolean)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setFastScrollDirection(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void setFastScrollDirection(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void onFinishInflate()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void onFinishInflate()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void onDetachedFromWindow()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void onDetachedFromWindow()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTrackMarginStart()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTrackMarginStart()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTrackMarginEnd()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTrackMarginEnd()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getTrackDrawable()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getTrackDrawable()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTextStyle()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getTextStyle()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.TextView getPopupTextView()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.TextView getPopupTextView()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.TextView getPopupTextView()> to <k3.k: void m(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getPopupDrawable()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getPopupDrawable()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleWidth()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleWidth()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleVisibilityDuration()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleVisibilityDuration()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleHeight()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int getHandleHeight()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getHandleDrawable()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable getHandleDrawable()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c getFastScrollDirection()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c getFastScrollDirection()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void attachFastScrollerToRecyclerView(androidx.recyclerview.widget.RecyclerView)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void attachFastScrollerToRecyclerView(androidx.recyclerview.widget.RecyclerView)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()> to <android.content.res.Configuration: int getLayoutDirection()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean z()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void x()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void x()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int w(androidx.recyclerview.widget.LinearLayoutManager)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int w(androidx.recyclerview.widget.LinearLayoutManager)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void v()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void v()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int t(androidx.recyclerview.widget.RecyclerView,float)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int t(androidx.recyclerview.widget.RecyclerView,float)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void o()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void o()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void n()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void n()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void p()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void p()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void m()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void m()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void l(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void l(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean i(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean i(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.LinearLayout h(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.LinearLayout h(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <kotlin.NoWhenBranchMatchedException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <android.widget.LinearLayout: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <android.widget.LinearLayout: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <k3.k: void m(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()>
<kotlin.NoWhenBranchMatchedException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<java.lang.Enum: int ordinal()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Object: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Object: java.lang.Object clone()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: java.lang.Object clone()> to <androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<b1.q: java.lang.Object clone()> to <b1.q: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.m: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.q: b1.m m()>
<o.h: java.lang.Object clone()> to <o.h: o.h c()>
<o.d: java.lang.Object clone()> to <o.d: o.d c()>
<java.lang.Thread: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.VirtualMachineError: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$a: void <init>()>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$e: void a(androidx.constraintlayout.widget.d$e)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$d: void a(androidx.constraintlayout.widget.d$d)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$c: void a(androidx.constraintlayout.widget.d$c)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)>
<b1.q: b1.m m()> to <b1.m: b1.m m()>
<b1.q: b1.m m()> to <b1.q: void f0(b1.m)>
<b1.q: b1.m m()> to <b1.q: b1.m m()>
<b1.q: b1.m m()> to <java.util.ArrayList: java.lang.Object get(int)>
<b1.q: b1.m m()> to <java.util.ArrayList: int size()>
<b1.q: b1.m m()> to <java.util.ArrayList: void <init>()>
<b1.m: b1.m m()> to <java.lang.Object: java.lang.Object clone()>
<b1.m: b1.m m()> to <b1.t: void <init>()>
<b1.m: b1.m m()> to <java.util.ArrayList: void <init>()>
<o.h: o.h c()> to <java.lang.Object: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.h: o.h c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.h: o.h c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Date: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.h: o.h c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Locale: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.Bundle: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.h: o.h c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Vector: java.lang.Object clone()>
<o.h: o.h c()> to <b1.q: java.lang.Object clone()>
<o.h: o.h c()> to <b1.m: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.h: o.h c()> to <o.h: java.lang.Object clone()>
<o.h: o.h c()> to <o.d: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Thread: java.lang.Object clone()>
<o.h: o.h c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.Intent: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.BitSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Enum: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Object: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.d: o.d c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.d: o.d c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Date: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.d: o.d c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Locale: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.Bundle: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.d: o.d c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Vector: java.lang.Object clone()>
<o.d: o.d c()> to <b1.q: java.lang.Object clone()>
<o.d: o.d c()> to <b1.m: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.d: o.d c()> to <o.h: java.lang.Object clone()>
<o.d: o.d c()> to <o.d: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Thread: java.lang.Object clone()>
<o.d: o.d c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.Intent: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.BitSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Enum: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$d: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)> to <java.util.Arrays: int[] copyOf(int[],int)>
<b1.q: void f0(b1.m)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.t: void <init>()> to <o.d: void <clinit>()>
<b1.t: void <init>()> to <o.d: void <init>()>
<b1.t: void <init>()> to <android.util.SparseArray: void <init>()>
<b1.t: void <init>()> to <o.a: void <init>()>
<b1.t: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$d: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <clinit>()> to <o.d: void <clinit>()>
<o.d: void <clinit>()> to <java.lang.Object: void <init>()>
<o.d: void <init>()> to <o.d: void <init>(int)>
<o.a: void <init>()> to <o.g: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <init>(int)> to <o.c: void <clinit>()>
<o.d: void <init>(int)> to <java.lang.Object: void <init>()>
<o.d: void <init>(int)> to <o.c: int f(int)>
<o.g: void <init>()> to <o.c: void <clinit>()>
<o.g: void <init>()> to <java.lang.Object: void <init>()>
<o.c: void <clinit>()> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: int d(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <kotlin.NoWhenBranchMatchedException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <android.widget.TextView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <android.widget.TextView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.TextView getPopupTextView()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getPopupLength()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()>
<kotlin.NoWhenBranchMatchedException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.widget.TextView getPopupTextView()> to <k3.k: void m(java.lang.String)>
<java.lang.Enum: int ordinal()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Object: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Object: java.lang.Object clone()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: java.lang.Object clone()> to <androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<b1.q: java.lang.Object clone()> to <b1.q: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.m: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.q: b1.m m()>
<o.h: java.lang.Object clone()> to <o.h: o.h c()>
<o.d: java.lang.Object clone()> to <o.d: o.d c()>
<java.lang.Thread: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.VirtualMachineError: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$a: void <init>()>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$e: void a(androidx.constraintlayout.widget.d$e)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$d: void a(androidx.constraintlayout.widget.d$d)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$c: void a(androidx.constraintlayout.widget.d$c)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)>
<b1.q: b1.m m()> to <b1.m: b1.m m()>
<b1.q: b1.m m()> to <b1.q: void f0(b1.m)>
<b1.q: b1.m m()> to <b1.q: b1.m m()>
<b1.q: b1.m m()> to <java.util.ArrayList: java.lang.Object get(int)>
<b1.q: b1.m m()> to <java.util.ArrayList: int size()>
<b1.q: b1.m m()> to <java.util.ArrayList: void <init>()>
<b1.m: b1.m m()> to <java.lang.Object: java.lang.Object clone()>
<b1.m: b1.m m()> to <b1.t: void <init>()>
<b1.m: b1.m m()> to <java.util.ArrayList: void <init>()>
<o.h: o.h c()> to <java.lang.Object: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.h: o.h c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.h: o.h c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Date: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.h: o.h c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Locale: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.Bundle: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.h: o.h c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Vector: java.lang.Object clone()>
<o.h: o.h c()> to <b1.q: java.lang.Object clone()>
<o.h: o.h c()> to <b1.m: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.h: o.h c()> to <o.h: java.lang.Object clone()>
<o.h: o.h c()> to <o.d: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Thread: java.lang.Object clone()>
<o.h: o.h c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.Intent: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.BitSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Enum: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Object: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.d: o.d c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.d: o.d c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Date: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.d: o.d c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Locale: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.Bundle: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.d: o.d c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Vector: java.lang.Object clone()>
<o.d: o.d c()> to <b1.q: java.lang.Object clone()>
<o.d: o.d c()> to <b1.m: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.d: o.d c()> to <o.h: java.lang.Object clone()>
<o.d: o.d c()> to <o.d: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Thread: java.lang.Object clone()>
<o.d: o.d c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.Intent: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.BitSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Enum: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$d: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)> to <java.util.Arrays: int[] copyOf(int[],int)>
<b1.q: void f0(b1.m)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.t: void <init>()> to <o.d: void <clinit>()>
<b1.t: void <init>()> to <o.d: void <init>()>
<b1.t: void <init>()> to <android.util.SparseArray: void <init>()>
<b1.t: void <init>()> to <o.a: void <init>()>
<b1.t: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$d: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <clinit>()> to <o.d: void <clinit>()>
<o.d: void <clinit>()> to <java.lang.Object: void <init>()>
<o.d: void <init>()> to <o.d: void <init>(int)>
<o.a: void <init>()> to <o.g: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <init>(int)> to <o.c: void <clinit>()>
<o.d: void <init>(int)> to <java.lang.Object: void <init>()>
<o.d: void <init>(int)> to <o.c: int f(int)>
<o.g: void <init>()> to <o.c: void <clinit>()>
<o.g: void <init>()> to <java.lang.Object: void <init>()>
<o.c: void <clinit>()> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: int d(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <kotlin.NoWhenBranchMatchedException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <android.widget.ImageView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <android.widget.ImageView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <k3.k: void m(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()>
<kotlin.NoWhenBranchMatchedException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<java.lang.Enum: int ordinal()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Object: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Object: java.lang.Object clone()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: java.lang.Object clone()> to <androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<b1.q: java.lang.Object clone()> to <b1.q: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.m: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.q: b1.m m()>
<o.h: java.lang.Object clone()> to <o.h: o.h c()>
<o.d: java.lang.Object clone()> to <o.d: o.d c()>
<java.lang.Thread: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.VirtualMachineError: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$a: void <init>()>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$e: void a(androidx.constraintlayout.widget.d$e)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$d: void a(androidx.constraintlayout.widget.d$d)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$c: void a(androidx.constraintlayout.widget.d$c)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)>
<b1.q: b1.m m()> to <b1.m: b1.m m()>
<b1.q: b1.m m()> to <b1.q: void f0(b1.m)>
<b1.q: b1.m m()> to <b1.q: b1.m m()>
<b1.q: b1.m m()> to <java.util.ArrayList: java.lang.Object get(int)>
<b1.q: b1.m m()> to <java.util.ArrayList: int size()>
<b1.q: b1.m m()> to <java.util.ArrayList: void <init>()>
<b1.m: b1.m m()> to <java.lang.Object: java.lang.Object clone()>
<b1.m: b1.m m()> to <b1.t: void <init>()>
<b1.m: b1.m m()> to <java.util.ArrayList: void <init>()>
<o.h: o.h c()> to <java.lang.Object: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.h: o.h c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.h: o.h c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Date: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.h: o.h c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Locale: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.Bundle: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.h: o.h c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Vector: java.lang.Object clone()>
<o.h: o.h c()> to <b1.q: java.lang.Object clone()>
<o.h: o.h c()> to <b1.m: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.h: o.h c()> to <o.h: java.lang.Object clone()>
<o.h: o.h c()> to <o.d: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Thread: java.lang.Object clone()>
<o.h: o.h c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.Intent: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.BitSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Enum: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Object: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.d: o.d c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.d: o.d c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Date: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.d: o.d c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Locale: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.Bundle: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.d: o.d c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Vector: java.lang.Object clone()>
<o.d: o.d c()> to <b1.q: java.lang.Object clone()>
<o.d: o.d c()> to <b1.m: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.d: o.d c()> to <o.h: java.lang.Object clone()>
<o.d: o.d c()> to <o.d: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Thread: java.lang.Object clone()>
<o.d: o.d c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.Intent: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.BitSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Enum: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$d: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)> to <java.util.Arrays: int[] copyOf(int[],int)>
<b1.q: void f0(b1.m)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.t: void <init>()> to <o.d: void <clinit>()>
<b1.t: void <init>()> to <o.d: void <init>()>
<b1.t: void <init>()> to <android.util.SparseArray: void <init>()>
<b1.t: void <init>()> to <o.a: void <init>()>
<b1.t: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$d: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <clinit>()> to <o.d: void <clinit>()>
<o.d: void <clinit>()> to <java.lang.Object: void <init>()>
<o.d: void <init>()> to <o.d: void <init>(int)>
<o.a: void <init>()> to <o.g: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <init>(int)> to <o.c: void <clinit>()>
<o.d: void <init>(int)> to <java.lang.Object: void <init>()>
<o.d: void <init>(int)> to <o.c: int f(int)>
<o.g: void <init>()> to <o.c: void <clinit>()>
<o.g: void <init>()> to <java.lang.Object: void <init>()>
<o.c: void <clinit>()> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: int d(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: androidx.appcompat.widget.o f(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: androidx.appcompat.widget.o f(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float g(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float g(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float g(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <kotlin.NoWhenBranchMatchedException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <android.widget.ImageView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <android.widget.ImageView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getHandleLength()> to <k3.k: void m(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()>
<kotlin.NoWhenBranchMatchedException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<java.lang.Enum: int ordinal()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Object: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Object: java.lang.Object clone()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: java.lang.Object clone()> to <androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<b1.q: java.lang.Object clone()> to <b1.q: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.m: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.q: b1.m m()>
<o.h: java.lang.Object clone()> to <o.h: o.h c()>
<o.d: java.lang.Object clone()> to <o.d: o.d c()>
<java.lang.Thread: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.VirtualMachineError: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$a: void <init>()>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$e: void a(androidx.constraintlayout.widget.d$e)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$d: void a(androidx.constraintlayout.widget.d$d)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$c: void a(androidx.constraintlayout.widget.d$c)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)>
<b1.q: b1.m m()> to <b1.m: b1.m m()>
<b1.q: b1.m m()> to <b1.q: void f0(b1.m)>
<b1.q: b1.m m()> to <b1.q: b1.m m()>
<b1.q: b1.m m()> to <java.util.ArrayList: java.lang.Object get(int)>
<b1.q: b1.m m()> to <java.util.ArrayList: int size()>
<b1.q: b1.m m()> to <java.util.ArrayList: void <init>()>
<b1.m: b1.m m()> to <java.lang.Object: java.lang.Object clone()>
<b1.m: b1.m m()> to <b1.t: void <init>()>
<b1.m: b1.m m()> to <java.util.ArrayList: void <init>()>
<o.h: o.h c()> to <java.lang.Object: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.h: o.h c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.h: o.h c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Date: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.h: o.h c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Locale: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.Bundle: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.h: o.h c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Vector: java.lang.Object clone()>
<o.h: o.h c()> to <b1.q: java.lang.Object clone()>
<o.h: o.h c()> to <b1.m: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.h: o.h c()> to <o.h: java.lang.Object clone()>
<o.h: o.h c()> to <o.d: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Thread: java.lang.Object clone()>
<o.h: o.h c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.Intent: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.BitSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Enum: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Object: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.d: o.d c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.d: o.d c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Date: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.d: o.d c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Locale: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.Bundle: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.d: o.d c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Vector: java.lang.Object clone()>
<o.d: o.d c()> to <b1.q: java.lang.Object clone()>
<o.d: o.d c()> to <b1.m: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.d: o.d c()> to <o.h: java.lang.Object clone()>
<o.d: o.d c()> to <o.d: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Thread: java.lang.Object clone()>
<o.d: o.d c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.Intent: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.BitSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Enum: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$d: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)> to <java.util.Arrays: int[] copyOf(int[],int)>
<b1.q: void f0(b1.m)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.t: void <init>()> to <o.d: void <clinit>()>
<b1.t: void <init>()> to <o.d: void <init>()>
<b1.t: void <init>()> to <android.util.SparseArray: void <init>()>
<b1.t: void <init>()> to <o.a: void <init>()>
<b1.t: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$d: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <clinit>()> to <o.d: void <clinit>()>
<o.d: void <clinit>()> to <java.lang.Object: void <init>()>
<o.d: void <init>()> to <o.d: void <init>(int)>
<o.a: void <init>()> to <o.g: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <init>(int)> to <o.c: void <clinit>()>
<o.d: void <init>(int)> to <java.lang.Object: void <init>()>
<o.d: void <init>(int)> to <o.c: int f(int)>
<o.g: void <init>()> to <o.c: void <clinit>()>
<o.g: void <init>()> to <java.lang.Object: void <init>()>
<o.c: void <clinit>()> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: int d(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean c(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,android.view.MotionEvent)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean c(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,android.view.MotionEvent)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void b(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void b(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void b(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void b(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void b(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <android.view.View: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <g2.g: void <init>(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void m(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<g2.g: void <init>(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <java.lang.Object: void <init>()>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()> to <java.lang.Object: void <init>()>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void a(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void a(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void a(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void a(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void a(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <android.view.View: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void setScaleY(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void setScaleX(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void m(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()> to <java.lang.Object: void <init>()>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void N(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void N(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void M()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void M()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void L(androidx.recyclerview.widget.RecyclerView,int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void L(androidx.recyclerview.widget.RecyclerView,int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void K()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void K()>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void J(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int,int,java.lang.Object)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void J(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,int,int,java.lang.Object)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void I(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void I(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean H(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,android.view.MotionEvent)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: boolean H(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,android.view.MotionEvent)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <g2.g: void <init>(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void m(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<g2.g: void <init>(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <java.lang.Object: void <init>()>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ImageView: void setY(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.View: void setY(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ScrollView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ListView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ImageView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.FrameLayout: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.View: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.ViewGroup: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.TextView: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.LinearLayout: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ImageView: void setX(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.View: void setX(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.View: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <java.lang.Math: float max(float,float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void F(android.view.View,float)> to <java.lang.Math: float min(float,float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$e: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <kotlin.NoWhenBranchMatchedException: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <android.widget.LinearLayout: int getHeight()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <android.widget.LinearLayout: int getWidth()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <java.lang.Enum: int ordinal()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: float getTrackLength()> to <k3.k: void m(java.lang.String)>
<java.lang.Enum: int ordinal()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] values()> to <java.lang.Object: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.LinkedList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Attributes: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.app.Notification$Action: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <javax.crypto.Mac: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Date: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.icu.util.ULocale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.widget.RemoteViews: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Locale: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseIntArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.PersistableBundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.AbstractMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.LongSparseArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.os.Bundle: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayList: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DecimalFormat: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Vector: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.q: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <b1.m: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.jar.Manifest: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.transition.TransitionSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.h: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <o.d: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Thread: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.Intent: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.ArrayDeque: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.Hashtable: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.TreeSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.BitSet: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Enum: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.content.ComponentName: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.util.HashMap: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] values()> to <java.lang.Object: java.lang.Object clone()>
<kotlin.NoWhenBranchMatchedException: void <init>()> to <java.lang.RuntimeException: void <init>()>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <init>(java.lang.String,int,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d[] a()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d: void <clinit>()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableDateTime: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: java.lang.Object clone()> to <androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutableInterval: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.Object: java.lang.Object clone()>
<org.joda.time.MutablePeriod: java.lang.Object clone()> to <java.lang.InternalError: void <init>(java.lang.String)>
<b1.q: java.lang.Object clone()> to <b1.q: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.m: b1.m m()>
<b1.m: java.lang.Object clone()> to <b1.q: b1.m m()>
<o.h: java.lang.Object clone()> to <o.h: o.h c()>
<o.d: java.lang.Object clone()> to <o.d: o.d c()>
<java.lang.Thread: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$c$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.VirtualMachineError: void <init>()>
<java.lang.InternalError: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$a: void <init>()>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$e: void a(androidx.constraintlayout.widget.d$e)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$d: void a(androidx.constraintlayout.widget.d$d)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$c: void a(androidx.constraintlayout.widget.d$c)>
<androidx.constraintlayout.widget.d$a: androidx.constraintlayout.widget.d$a e()> to <androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)>
<b1.q: b1.m m()> to <b1.m: b1.m m()>
<b1.q: b1.m m()> to <b1.q: void f0(b1.m)>
<b1.q: b1.m m()> to <b1.q: b1.m m()>
<b1.q: b1.m m()> to <java.util.ArrayList: java.lang.Object get(int)>
<b1.q: b1.m m()> to <java.util.ArrayList: int size()>
<b1.q: b1.m m()> to <java.util.ArrayList: void <init>()>
<b1.m: b1.m m()> to <java.lang.Object: java.lang.Object clone()>
<b1.m: b1.m m()> to <b1.t: void <init>()>
<b1.m: b1.m m()> to <java.util.ArrayList: void <init>()>
<o.h: o.h c()> to <java.lang.Object: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.h: o.h c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.h: o.h c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.h: o.h c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Date: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.h: o.h c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Locale: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.h: o.h c()> to <android.os.Bundle: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.h: o.h c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.h: o.h c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Vector: java.lang.Object clone()>
<o.h: o.h c()> to <b1.q: java.lang.Object clone()>
<o.h: o.h c()> to <b1.m: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.h: o.h c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.h: o.h c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.h: o.h c()> to <o.h: java.lang.Object clone()>
<o.h: o.h c()> to <o.d: java.lang.Object clone()>
<o.h: o.h c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Thread: java.lang.Object clone()>
<o.h: o.h c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.Intent: java.lang.Object clone()>
<o.h: o.h c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.BitSet: java.lang.Object clone()>
<o.h: o.h c()> to <java.lang.Enum: java.lang.Object clone()>
<o.h: o.h c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.h: o.h c()> to <java.util.HashMap: java.lang.Object clone()>
<o.h: o.h c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Object: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.AssertionError: void <init>(java.lang.Object)>
<o.d: o.d c()> to <android.animation.AnimatorSet: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableDateTime: java.lang.Object clone()>
<o.d: o.d c()> to <androidx.constraintlayout.widget.d$a: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.LinkedList: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Attributes: java.lang.Object clone()>
<o.d: o.d c()> to <android.app.Notification$Action: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.IdentityHashMap: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.SimpleDateFormat: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <javax.crypto.Mac: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Date: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.SimpleTimeZone: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.icu.util.ULocale: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.PropertyValuesHolder: java.lang.Object clone()>
<o.d: o.d c()> to <android.widget.RemoteViews: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Locale: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.OvalShape: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseIntArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.PersistableBundle: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ValueAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.AbstractMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.LongSparseArray: java.lang.Object clone()>
<o.d: o.d c()> to <android.os.Bundle: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayList: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.StateListAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DecimalFormat: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutableInterval: java.lang.Object clone()>
<o.d: o.d c()> to <android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>
<o.d: o.d c()> to <org.joda.time.MutablePeriod: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Vector: java.lang.Object clone()>
<o.d: o.d c()> to <b1.q: java.lang.Object clone()>
<o.d: o.d c()> to <b1.m: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.GregorianCalendar: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.jar.Manifest: java.lang.Object clone()>
<o.d: o.d c()> to <android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>
<o.d: o.d c()> to <android.transition.TransitionSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.animation.ObjectAnimator: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.zip.ZipEntry: java.lang.Object clone()>
<o.d: o.d c()> to <o.h: java.lang.Object clone()>
<o.d: o.d c()> to <o.d: java.lang.Object clone()>
<o.d: o.d c()> to <java.text.DateFormatSymbols: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Thread: java.lang.Object clone()>
<o.d: o.d c()> to <android.view.animation.AnimationSet: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.Intent: java.lang.Object clone()>
<o.d: o.d c()> to <android.util.SparseBooleanArray: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.ArrayDeque: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.Hashtable: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.TreeSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.BitSet: java.lang.Object clone()>
<o.d: o.d c()> to <java.lang.Enum: java.lang.Object clone()>
<o.d: o.d c()> to <android.content.ComponentName: java.lang.Object clone()>
<o.d: o.d c()> to <java.util.HashMap: java.lang.Object clone()>
<o.d: o.d c()> to <android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.util.HashMap: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$c: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$d: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$a: void <init>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void a(androidx.constraintlayout.widget.d$b)> to <java.util.Arrays: int[] copyOf(int[],int)>
<b1.q: void f0(b1.m)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.t: void <init>()> to <o.d: void <clinit>()>
<b1.t: void <init>()> to <o.d: void <init>()>
<b1.t: void <init>()> to <android.util.SparseArray: void <init>()>
<b1.t: void <init>()> to <o.a: void <init>()>
<b1.t: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.Error: void <init>()>
<java.lang.AssertionError: void <init>(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.d$c: void <clinit>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$c: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$c: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$d: void <init>()> to <java.lang.Object: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.d$b: void <clinit>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$b: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.d$e: void <clinit>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void append(int,int)>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <android.util.SparseIntArray: void <init>()>
<androidx.constraintlayout.widget.d$e: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <clinit>()> to <o.d: void <clinit>()>
<o.d: void <clinit>()> to <java.lang.Object: void <init>()>
<o.d: void <init>()> to <o.d: void <init>(int)>
<o.a: void <init>()> to <o.g: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Error: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<o.d: void <init>(int)> to <o.c: void <clinit>()>
<o.d: void <init>(int)> to <java.lang.Object: void <init>()>
<o.d: void <init>(int)> to <o.c: int f(int)>
<o.g: void <init>()> to <o.c: void <clinit>()>
<o.g: void <init>()> to <java.lang.Object: void <init>()>
<o.c: void <clinit>()> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: void <clinit>()>
<o.c: int f(int)> to <o.c: int d(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void setScaleY(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.view.View: void setScaleX(float)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void E(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <k3.k: void m(java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void C(java.lang.String)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void C(java.lang.String)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int A(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: int A(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable B(int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: android.graphics.drawable.Drawable B(int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet,int,int,k3.g)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet,int,int,k3.g)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
null to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void <clinit>()> to <android.view.View: void <clinit>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>(k3.g)> to <com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void setListener(v2.c)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void setListener(v2.c)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: v2.c getListener()>
null to <com.simplemobiletools.commons.views.LineColorPicker: v2.c getListener()>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()>
null to <com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <k3.k: void c(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Integer: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Byte: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.math.BigInteger: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Short: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Double: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.util.concurrent.atomic.AtomicInteger: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Long: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.lang.Float: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <android.icu.math.BigDecimal: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.math.BigDecimal: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.util.concurrent.atomic.AtomicLong: int intValue()>
<com.simplemobiletools.commons.views.LineColorPicker: int getCurrentColor()> to <java.util.ArrayList: java.lang.Object get(int)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void c(java.lang.Object,java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Byte: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Short: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Double: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Long: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.constraintlayout.motion.widget.j: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.core.widget.NestedScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.RelativeLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.ScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.ListView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.HorizontalScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.FrameLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.AbsSpinner: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.View: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.AbsListView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.TextView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.ViewGroup: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<androidx.constraintlayout.motion.widget.j: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()> to <android.widget.HorizontalScrollView: void requestLayout()>
<androidx.core.widget.NestedScrollView: void requestLayout()> to <android.widget.FrameLayout: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void o(com.simplemobiletools.commons.views.LineColorPicker,java.util.ArrayList,int,int,java.lang.Object)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void o(com.simplemobiletools.commons.views.LineColorPicker,java.util.ArrayList,int,int,java.lang.Object)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void m(int)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void m(int)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void k(com.simplemobiletools.commons.views.LineColorPicker,int,boolean)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void k(com.simplemobiletools.commons.views.LineColorPicker,int,boolean)>
<com.simplemobiletools.commons.views.LineColorPicker: void k(com.simplemobiletools.commons.views.LineColorPicker,int,boolean)> to <com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.constraintlayout.motion.widget.j: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.core.widget.NestedScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.RelativeLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.ScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.ListView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.HorizontalScrollView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.FrameLayout: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.AbsSpinner: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.View: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.AbsListView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.TextView: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.ViewGroup: void requestLayout()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.simplemobiletools.commons.views.LineColorPicker: void p(int,boolean)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<androidx.constraintlayout.motion.widget.j: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()> to <android.widget.HorizontalScrollView: void requestLayout()>
<androidx.core.widget.NestedScrollView: void requestLayout()> to <android.widget.FrameLayout: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void j(com.simplemobiletools.commons.views.LineColorPicker,boolean)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void j(com.simplemobiletools.commons.views.LineColorPicker,boolean)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void h(com.simplemobiletools.commons.views.LineColorPicker,int)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void h(com.simplemobiletools.commons.views.LineColorPicker,int)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void i(com.simplemobiletools.commons.views.LineColorPicker,int)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void i(com.simplemobiletools.commons.views.LineColorPicker,int)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: boolean f(com.simplemobiletools.commons.views.LineColorPicker)>
null to <com.simplemobiletools.commons.views.LineColorPicker: boolean f(com.simplemobiletools.commons.views.LineColorPicker)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: int e(com.simplemobiletools.commons.views.LineColorPicker)>
null to <com.simplemobiletools.commons.views.LineColorPicker: int e(com.simplemobiletools.commons.views.LineColorPicker)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: int d(com.simplemobiletools.commons.views.LineColorPicker)>
null to <com.simplemobiletools.commons.views.LineColorPicker: int d(com.simplemobiletools.commons.views.LineColorPicker)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: int c(com.simplemobiletools.commons.views.LineColorPicker)>
null to <com.simplemobiletools.commons.views.LineColorPicker: int c(com.simplemobiletools.commons.views.LineColorPicker)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: boolean b(com.simplemobiletools.commons.views.LineColorPicker,android.view.View,android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.LineColorPicker: boolean b(com.simplemobiletools.commons.views.LineColorPicker,android.view.View,android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: boolean a(com.simplemobiletools.commons.views.LineColorPicker,android.view.View,android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.LineColorPicker: boolean a(com.simplemobiletools.commons.views.LineColorPicker,android.view.View,android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.LineColorPicker: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.LineColorPicker: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: void setHashListener(v2.b)>
null to <com.simplemobiletools.commons.views.PatternTab: void setHashListener(v2.b)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()>
null to <com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()>
<com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()> to <k3.k: void m(java.lang.String)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.PatternTab: void onFinishInflate()>
UI update?

<com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)>
null to <com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)>
<com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)> to <com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()> to <k3.k: void m(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: boolean f(com.simplemobiletools.commons.views.PatternTab,android.view.View,android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.PatternTab: boolean f(com.simplemobiletools.commons.views.PatternTab,android.view.View,android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)>
null to <com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)>
<com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.PatternTab: void h(com.simplemobiletools.commons.views.PatternTab)> to <com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<com.simplemobiletools.commons.views.PatternTab: v2.b getHashListener()> to <k3.k: void m(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void m(java.lang.String)> to <k3.k: void l(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: void m(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<k3.k: void l(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: void l(java.lang.String)> to <kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: boolean a(com.simplemobiletools.commons.views.PatternTab,android.view.View,android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.PatternTab: boolean a(com.simplemobiletools.commons.views.PatternTab,android.view.View,android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.PatternTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.PatternTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<p1.a: void setUseMaterialThemeColors(boolean)>
null to <p1.a: void setUseMaterialThemeColors(boolean)>
UI update?

<p1.a: void onAttachedToWindow()>
null to <p1.a: void onAttachedToWindow()>
UI update?

<p1.a: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
null to <p1.a: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
UI update?

<p1.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <p1.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<p1.a: void <init>(android.content.Context,android.util.AttributeSet)>
null to <p1.a: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<p1.a: void <clinit>()>
null to <p1.a: void <clinit>()>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>
null to <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$e)>
null to <com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$e)>
<com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$e)> to <i0.w: void <clinit>()>
<com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$e)> to <i0.w: void o0(android.view.View,i0.a)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: android.view.View$AccessibilityDelegate d()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <init>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.a: void <clinit>()>
<i0.w: void o0(android.view.View,i0.a)> to <i0.w: android.view.View$AccessibilityDelegate m(android.view.View)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.a: void <init>()> to <i0.a: void <clinit>()>
<i0.a: void <init>()> to <i0.a: void <init>(android.view.View$AccessibilityDelegate)>
<i0.a: void <clinit>()> to <i0.a: void <clinit>()>
<i0.a: void <clinit>()> to <android.view.View$AccessibilityDelegate: void <init>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate m(android.view.View)> to <i0.w: android.view.View$AccessibilityDelegate n(android.view.View)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <java.lang.Object: void <init>()>
<i0.a: void <init>(android.view.View$AccessibilityDelegate)> to <i0.a$a: void <init>(i0.a)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: android.view.View$AccessibilityDelegate n(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.a$a: void <init>(i0.a)> to <android.view.View$AccessibilityDelegate: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)>
<com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)> to <android.widget.TextView: void setMinWidth(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)>
<com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)> to <android.widget.TextView: void setMaxWidth(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHint(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setHint(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>
null to <com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)>
UI update?

<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void onAttachedToWindow()>
null to <androidx.constraintlayout.widget.b: void onAttachedToWindow()>
UI update?

<androidx.constraintlayout.widget.b: void onDraw(android.graphics.Canvas)>
null to <androidx.constraintlayout.widget.b: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.constraintlayout.widget.b: void onMeasure(int,int)>
null to <androidx.constraintlayout.widget.b: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.widget.b: void p(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: void p(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void q(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: void q(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void r(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: void r(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void s(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.b: void s(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
null to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
null to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.b: void setReferencedIds(int[])>
null to <androidx.constraintlayout.widget.b: void setReferencedIds(int[])>
<androidx.constraintlayout.widget.b: void setReferencedIds(int[])> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
UI update?

<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
null to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
UI update?
------------------------------------------------------
com.google.android.material.textfield.TextInputEditText

<androidx.constraintlayout.widget.b: void t()>
null to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.widget.b: void t()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
UI update?

<com.google.android.material.textfield.TextInputEditText: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.textfield.TextInputEditText: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.textfield.TextInputEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.textfield.TextInputEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)>
null to <com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: void <init>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.String: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.PrecomputedText: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.SpannableString: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuffer: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <g0.c: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.view.View: void setLabelFor(int)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.String: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: java.lang.String toString()> to <android.text.PrecomputedText: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <java.lang.Object: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableString: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <g0.c: java.lang.String toString()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()>
null to <com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()>
UI update?

<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()>
null to <com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
UI update?

<com.google.android.material.textfield.TextInputEditText: void getFocusedRect(android.graphics.Rect)>
null to <com.google.android.material.textfield.TextInputEditText: void getFocusedRect(android.graphics.Rect)>
UI update?

<com.google.android.material.textfield.TextInputEditText: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
null to <com.google.android.material.textfield.TextInputEditText: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
UI update?

<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()>
null to <com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()>
<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.TextInputLayout: boolean O()>
<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()> to <android.widget.EditText: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
UI update?

<com.google.android.material.textfield.TextInputEditText: void onAttachedToWindow()>
null to <com.google.android.material.textfield.TextInputEditText: void onAttachedToWindow()>
UI update?

<com.google.android.material.textfield.TextInputEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <com.google.android.material.textfield.TextInputEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()>
<com.google.android.material.textfield.TextInputEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.TextUtils: void <clinit>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: void <init>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.String: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.PrecomputedText: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.SpannableString: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <java.lang.StringBuffer: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <g0.c: java.lang.String toString()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.view.View: void setLabelFor(int)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.textfield.TextInputEditText: java.lang.String b(com.google.android.material.textfield.TextInputLayout)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<java.lang.String: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: java.lang.String toString()> to <android.text.PrecomputedText: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <java.lang.Object: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableString: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<g0.c: java.lang.String toString()> to <g0.c: java.lang.String toString()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.textfield.TextInputEditText: boolean requestRectangleOnScreen(android.graphics.Rect)>
null to <com.google.android.material.textfield.TextInputEditText: boolean requestRectangleOnScreen(android.graphics.Rect)>
UI update?
------------------------------------------------------
com.google.android.material.button.MaterialButton

<com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)>
null to <com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)>
UI update?

<com.google.android.material.button.MaterialButton: void <clinit>()>
null to <com.google.android.material.button.MaterialButton: void <clinit>()>
<com.google.android.material.button.MaterialButton: void <clinit>()> to <com.google.android.material.button.MaterialButton: void <clinit>()>
<com.google.android.material.button.MaterialButton: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.button.MaterialButton: boolean c()>
null to <com.google.android.material.button.MaterialButton: boolean c()>
UI update?

<com.google.android.material.button.MaterialButton: boolean d()>
null to <com.google.android.material.button.MaterialButton: boolean d()>
UI update?

<com.google.android.material.button.MaterialButton: boolean e()>
null to <com.google.android.material.button.MaterialButton: boolean e()>
UI update?

<com.google.android.material.button.MaterialButton: boolean f()>
null to <com.google.android.material.button.MaterialButton: boolean f()>
UI update?

<com.google.android.material.button.MaterialButton: boolean g()>
null to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
UI update?

<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
null to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButton: int getTextHeight()>
null to <com.google.android.material.button.MaterialButton: int getTextHeight()>
UI update?

<com.google.android.material.button.MaterialButton: int getTextWidth()>
null to <com.google.android.material.button.MaterialButton: int getTextWidth()>
UI update?

<com.google.android.material.button.MaterialButton: void i()>
null to <com.google.android.material.button.MaterialButton: void i()>
UI update?

<com.google.android.material.button.MaterialButton: void j(boolean)>
null to <com.google.android.material.button.MaterialButton: void j(boolean)>
UI update?

<com.google.android.material.button.MaterialButton: void k(int,int)>
null to <com.google.android.material.button.MaterialButton: void k(int,int)>
UI update?

<com.google.android.material.button.MaterialButton: void a(com.google.android.material.button.MaterialButton$a)>
null to <com.google.android.material.button.MaterialButton: void a(com.google.android.material.button.MaterialButton$a)>
<com.google.android.material.button.MaterialButton: void a(com.google.android.material.button.MaterialButton$a)> to <java.util.HashSet: boolean add(java.lang.Object)>
UI update?

<com.google.android.material.button.MaterialButton: boolean b()>
null to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
UI update?

<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()>
null to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()> to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <com.google.android.material.button.a: android.content.res.ColorStateList l()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
<androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
null to <com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()> to <com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <com.google.android.material.button.a: android.graphics.PorterDuff$Mode m()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
<androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<com.google.android.material.button.MaterialButton: int getCornerRadius()>
null to <com.google.android.material.button.MaterialButton: int getCornerRadius()>
UI update?

<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()>
null to <com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()>
UI update?

<com.google.android.material.button.MaterialButton: int getIconGravity()>
null to <com.google.android.material.button.MaterialButton: int getIconGravity()>
UI update?

<com.google.android.material.button.MaterialButton: int getIconPadding()>
null to <com.google.android.material.button.MaterialButton: int getIconPadding()>
UI update?

<com.google.android.material.button.MaterialButton: int getIconSize()>
null to <com.google.android.material.button.MaterialButton: int getIconSize()>
UI update?

<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()>
null to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()>
UI update?

<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()>
null to <com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()>
UI update?

<com.google.android.material.button.MaterialButton: int getInsetBottom()>
null to <com.google.android.material.button.MaterialButton: int getInsetBottom()>
UI update?

<com.google.android.material.button.MaterialButton: int getInsetTop()>
null to <com.google.android.material.button.MaterialButton: int getInsetTop()>
UI update?

<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()>
null to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()>
UI update?

<com.google.android.material.button.MaterialButton: c2.k getShapeAppearanceModel()>
null to <com.google.android.material.button.MaterialButton: c2.k getShapeAppearanceModel()>
<com.google.android.material.button.MaterialButton: c2.k getShapeAppearanceModel()> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: c2.k getShapeAppearanceModel()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: c2.k getShapeAppearanceModel()> to <com.google.android.material.button.a: c2.k i()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
UI update?

<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()>
null to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()>
UI update?

<com.google.android.material.button.MaterialButton: int getStrokeWidth()>
null to <com.google.android.material.button.MaterialButton: int getStrokeWidth()>
UI update?

<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <com.google.android.material.button.a: android.content.res.ColorStateList l()>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
<androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <com.google.android.material.button.a: android.graphics.PorterDuff$Mode m()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
<androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<com.google.android.material.button.MaterialButton: void h(com.google.android.material.button.MaterialButton$a)>
null to <com.google.android.material.button.MaterialButton: void h(com.google.android.material.button.MaterialButton$a)>
UI update?

<com.google.android.material.button.MaterialButton: boolean isChecked()>
null to <com.google.android.material.button.MaterialButton: boolean isChecked()>
UI update?

<com.google.android.material.button.MaterialButton: void onAttachedToWindow()>
null to <com.google.android.material.button.MaterialButton: void onAttachedToWindow()>
UI update?

<com.google.android.material.button.MaterialButton: int[] onCreateDrawableState(int)>
null to <com.google.android.material.button.MaterialButton: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: boolean isClickable()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Class: java.lang.String getName()>
<com.google.android.material.button.MaterialButton: boolean b()> to <com.google.android.material.button.a: boolean p()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <com.google.android.material.button.MaterialButton: boolean b()>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()> to <java.lang.Class: java.lang.String getName()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButton: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.button.MaterialButton: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.button.MaterialButton: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.google.android.material.button.MaterialButton: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.google.android.material.button.MaterialButton: android.os.Parcelable onSaveInstanceState()>
null to <com.google.android.material.button.MaterialButton: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.google.android.material.button.MaterialButton: void onSizeChanged(int,int,int,int)>
null to <com.google.android.material.button.MaterialButton: void onSizeChanged(int,int,int,int)>
UI update?

<com.google.android.material.button.MaterialButton: void onTextChanged(java.lang.CharSequence,int,int,int)>
null to <com.google.android.material.button.MaterialButton: void onTextChanged(java.lang.CharSequence,int,int,int)>
UI update?

<com.google.android.material.button.MaterialButton: boolean performClick()>
null to <com.google.android.material.button.MaterialButton: boolean performClick()>
UI update?

<com.google.android.material.button.MaterialButton: void setCheckable(boolean)>
null to <com.google.android.material.button.MaterialButton: void setCheckable(boolean)>
<com.google.android.material.button.MaterialButton: void setCheckable(boolean)> to <com.google.android.material.button.MaterialButton: boolean g()>
<com.google.android.material.button.MaterialButton: void setCheckable(boolean)> to <com.google.android.material.button.a: void t(boolean)>
<com.google.android.material.button.MaterialButton: boolean g()> to <com.google.android.material.button.a: boolean o()>
UI update?

<com.google.android.material.button.MaterialButton: void setCornerRadius(int)>
null to <com.google.android.material.button.MaterialButton: void setCornerRadius(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)>
null to <com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)>
null to <com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconGravity(int)>
null to <com.google.android.material.button.MaterialButton: void setIconGravity(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconPadding(int)>
null to <com.google.android.material.button.MaterialButton: void setIconPadding(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconResource(int)>
null to <com.google.android.material.button.MaterialButton: void setIconResource(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconSize(int)>
null to <com.google.android.material.button.MaterialButton: void setIconSize(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)>
null to <com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<com.google.android.material.button.MaterialButton: void setIconTintResource(int)>
null to <com.google.android.material.button.MaterialButton: void setIconTintResource(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setInsetBottom(int)>
null to <com.google.android.material.button.MaterialButton: void setInsetBottom(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setInsetTop(int)>
null to <com.google.android.material.button.MaterialButton: void setInsetTop(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)>
null to <com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$b)>
null to <com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$b)>
UI update?

<com.google.android.material.button.MaterialButton: void setPressed(boolean)>
null to <com.google.android.material.button.MaterialButton: void setPressed(boolean)>
<com.google.android.material.button.MaterialButton: void setPressed(boolean)> to <com.google.android.material.button.MaterialButtonToggleGroup$f: void a(com.google.android.material.button.MaterialButton,boolean)>
<com.google.android.material.button.MaterialButton: void setPressed(boolean)> to <android.widget.Button: void setPressed(boolean)>
<com.google.android.material.button.MaterialButtonToggleGroup$f: void a(com.google.android.material.button.MaterialButton,boolean)> to <android.view.ViewGroup: void invalidate()>
UI update?

<com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>
null to <com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.button.MaterialButton: void setRippleColorResource(int)>
null to <com.google.android.material.button.MaterialButton: void setRippleColorResource(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(c2.k)>
null to <com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(c2.k)>
UI update?

<com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)>
null to <com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)>
null to <com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setStrokeWidth(int)>
null to <com.google.android.material.button.MaterialButton: void setStrokeWidth(int)>
UI update?

<com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)>
null to <com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyFloatingActionButton

<com.google.android.material.button.MaterialButton: void toggle()>
null to <com.google.android.material.button.MaterialButton: void toggle()>
UI update?

<com.simplemobiletools.commons.views.MyFloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyFloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
com.google.android.material.internal.m

<com.google.android.material.internal.m: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.m: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.m: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.m: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.m: void b(int,boolean)>
null to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<com.google.android.material.internal.m: int getUserSetVisibility()>
null to <com.google.android.material.internal.m: int getUserSetVisibility()>
UI update?
------------------------------------------------------
i1.b

<com.google.android.material.internal.m: void setVisibility(int)>
null to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<i1.b: void <init>(android.content.Context,android.util.AttributeSet)>
null to <i1.b: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<i1.b: androidx.viewpager.widget.a S(i1.b)>
null to <i1.b: androidx.viewpager.widget.a S(i1.b)>
<i1.b: androidx.viewpager.widget.a S(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
UI update?

<i1.b: boolean T(i1.b)>
null to <i1.b: boolean T(i1.b)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
UI update?

<i1.b: androidx.viewpager.widget.a U(i1.b)>
null to <i1.b: androidx.viewpager.widget.a U(i1.b)>
<i1.b: androidx.viewpager.widget.a U(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
UI update?

<i1.b: boolean V()>
null to <i1.b: boolean V()>
UI update?

<i1.b: void J(androidx.viewpager.widget.b$j)>
null to <i1.b: void J(androidx.viewpager.widget.b$j)>
UI update?

<i1.b: void N(int,boolean)>
null to <i1.b: void N(int,boolean)>
UI update?

<i1.b: void c(androidx.viewpager.widget.b$j)>
null to <i1.b: void c(androidx.viewpager.widget.b$j)>
UI update?

<i1.b: androidx.viewpager.widget.a getAdapter()>
null to <i1.b: androidx.viewpager.widget.a getAdapter()>
UI update?

<i1.b: int getCurrentItem()>
null to <i1.b: int getCurrentItem()>
UI update?

<i1.b: void onMeasure(int,int)>
null to <i1.b: void onMeasure(int,int)>
UI update?

<i1.b: void onRestoreInstanceState(android.os.Parcelable)>
null to <i1.b: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<i1.b: void onRtlPropertiesChanged(int)>
null to <i1.b: void onRtlPropertiesChanged(int)>
UI update?

<i1.b: android.os.Parcelable onSaveInstanceState()>
null to <i1.b: android.os.Parcelable onSaveInstanceState()>
UI update?

<i1.b: void setAdapter(androidx.viewpager.widget.a)>
null to <i1.b: void setAdapter(androidx.viewpager.widget.a)>
UI update?
------------------------------------------------------
com.google.android.material.internal.d

<i1.b: void setOnPageChangeListener(androidx.viewpager.widget.b$j)>
null to <i1.b: void setOnPageChangeListener(androidx.viewpager.widget.b$j)>
UI update?

<com.google.android.material.internal.d: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.d: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.d: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.d: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)>
null to <com.google.android.material.internal.d: void drawableHotspotChanged(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.view.ViewGroup: void drawableHotspotChanged(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <androidx.appcompat.widget.g0$a: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <f.b: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <f.c: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <f.a: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <a0.e: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>
<com.google.android.material.internal.d: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<androidx.appcompat.widget.g0$a: void setHotspot(float,float)> to <f.c: void setHotspot(float,float)>
<f.b: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
<f.c: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
<f.a: void setHotspot(float,float)> to <f.b: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.appcompat.widget.g0$a: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.b: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.c: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <f.a: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <a0.e: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)>
<a0.e: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)> to <androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.appcompat.widget.g0$a: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.b: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.c: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <f.a: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.vectordrawable.graphics.drawable.h: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <a0.e: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <androidx.vectordrawable.graphics.drawable.b: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>
<a0.a: void k(android.graphics.drawable.Drawable,float,float)> to <android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<androidx.vectordrawable.graphics.drawable.g: void setHotspot(float,float)> to <a0.a: void k(android.graphics.drawable.Drawable,float,float)>
UI update?

<com.google.android.material.internal.d: void drawableStateChanged()>
null to <com.google.android.material.internal.d: void drawableStateChanged()>
UI update?

<com.google.android.material.internal.d: android.graphics.drawable.Drawable getForeground()>
null to <com.google.android.material.internal.d: android.graphics.drawable.Drawable getForeground()>
UI update?

<com.google.android.material.internal.d: int getForegroundGravity()>
null to <com.google.android.material.internal.d: int getForegroundGravity()>
UI update?

<com.google.android.material.internal.d: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.internal.d: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.internal.d: void onSizeChanged(int,int,int,int)>
null to <com.google.android.material.internal.d: void onSizeChanged(int,int,int,int)>
UI update?

<com.google.android.material.internal.d: void setForeground(android.graphics.drawable.Drawable)>
null to <com.google.android.material.internal.d: void setForeground(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.internal.d: void setForegroundGravity(int)>
null to <com.google.android.material.internal.d: void setForegroundGravity(int)>
UI update?
------------------------------------------------------
com.google.android.material.internal.c

<com.google.android.material.internal.d: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.internal.d: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.internal.c: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.c: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.c: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.c: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.c: int a(int,int,int)>
null to <com.google.android.material.internal.c: int a(int,int,int)>
UI update?

<com.google.android.material.internal.c: void d(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.c: void d(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.c: int b(android.view.View)>
null to <com.google.android.material.internal.c: int b(android.view.View)>
<com.google.android.material.internal.c: int b(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<com.google.android.material.internal.c: int b(android.view.View)> to <java.lang.Integer: int intValue()>
<com.google.android.material.internal.c: int b(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.internal.c: boolean c()>
null to <com.google.android.material.internal.c: boolean c()>
UI update?

<com.google.android.material.internal.c: int getItemSpacing()>
null to <com.google.android.material.internal.c: int getItemSpacing()>
UI update?

<com.google.android.material.internal.c: int getLineSpacing()>
null to <com.google.android.material.internal.c: int getLineSpacing()>
UI update?

<com.google.android.material.internal.c: int getRowCount()>
null to <com.google.android.material.internal.c: int getRowCount()>
UI update?

<com.google.android.material.internal.c: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.internal.c: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.internal.c: void onMeasure(int,int)>
null to <com.google.android.material.internal.c: void onMeasure(int,int)>
UI update?

<com.google.android.material.internal.c: void setItemSpacing(int)>
null to <com.google.android.material.internal.c: void setItemSpacing(int)>
UI update?

<com.google.android.material.internal.c: void setLineSpacing(int)>
null to <com.google.android.material.internal.c: void setLineSpacing(int)>
UI update?
------------------------------------------------------
com.google.android.material.card.a

<com.google.android.material.internal.c: void setSingleLine(boolean)>
null to <com.google.android.material.internal.c: void setSingleLine(boolean)>
UI update?

<com.google.android.material.card.a: void <clinit>()>
null to <com.google.android.material.card.a: void <clinit>()>
UI update?

<com.google.android.material.card.a: float c(com.google.android.material.card.a)>
null to <com.google.android.material.card.a: float c(com.google.android.material.card.a)>
UI update?

<com.google.android.material.card.a: void d()>
null to <com.google.android.material.card.a: void d()>
UI update?

<com.google.android.material.card.a: android.graphics.RectF getBoundsAsRectF()>
null to <com.google.android.material.card.a: android.graphics.RectF getBoundsAsRectF()>
UI update?

<com.google.android.material.card.a: boolean e()>
null to <com.google.android.material.card.a: boolean e()>
UI update?

<com.google.android.material.card.a: boolean f()>
null to <com.google.android.material.card.a: boolean f()>
UI update?

<com.google.android.material.card.a: android.content.res.ColorStateList getCardBackgroundColor()>
null to <com.google.android.material.card.a: android.content.res.ColorStateList getCardBackgroundColor()>
UI update?

<com.google.android.material.card.a: android.content.res.ColorStateList getCardForegroundColor()>
null to <com.google.android.material.card.a: android.content.res.ColorStateList getCardForegroundColor()>
UI update?

<com.google.android.material.card.a: float getCardViewRadius()>
null to <com.google.android.material.card.a: float getCardViewRadius()>
UI update?

<com.google.android.material.card.a: android.graphics.drawable.Drawable getCheckedIcon()>
null to <com.google.android.material.card.a: android.graphics.drawable.Drawable getCheckedIcon()>
UI update?

<com.google.android.material.card.a: int getCheckedIconMargin()>
null to <com.google.android.material.card.a: int getCheckedIconMargin()>
UI update?

<com.google.android.material.card.a: int getCheckedIconSize()>
null to <com.google.android.material.card.a: int getCheckedIconSize()>
UI update?

<com.google.android.material.card.a: android.content.res.ColorStateList getCheckedIconTint()>
null to <com.google.android.material.card.a: android.content.res.ColorStateList getCheckedIconTint()>
UI update?

<com.google.android.material.card.a: int getContentPaddingBottom()>
null to <com.google.android.material.card.a: int getContentPaddingBottom()>
UI update?

<com.google.android.material.card.a: int getContentPaddingLeft()>
null to <com.google.android.material.card.a: int getContentPaddingLeft()>
UI update?

<com.google.android.material.card.a: int getContentPaddingRight()>
null to <com.google.android.material.card.a: int getContentPaddingRight()>
UI update?

<com.google.android.material.card.a: int getContentPaddingTop()>
null to <com.google.android.material.card.a: int getContentPaddingTop()>
UI update?

<com.google.android.material.card.a: float getProgress()>
null to <com.google.android.material.card.a: float getProgress()>
UI update?

<com.google.android.material.card.a: float getRadius()>
null to <com.google.android.material.card.a: float getRadius()>
UI update?

<com.google.android.material.card.a: android.content.res.ColorStateList getRippleColor()>
null to <com.google.android.material.card.a: android.content.res.ColorStateList getRippleColor()>
UI update?

<com.google.android.material.card.a: c2.k getShapeAppearanceModel()>
null to <com.google.android.material.card.a: c2.k getShapeAppearanceModel()>
UI update?

<com.google.android.material.card.a: int getStrokeColor()>
null to <com.google.android.material.card.a: int getStrokeColor()>
UI update?

<com.google.android.material.card.a: android.content.res.ColorStateList getStrokeColorStateList()>
null to <com.google.android.material.card.a: android.content.res.ColorStateList getStrokeColorStateList()>
UI update?

<com.google.android.material.card.a: int getStrokeWidth()>
null to <com.google.android.material.card.a: int getStrokeWidth()>
UI update?

<com.google.android.material.card.a: boolean isChecked()>
null to <com.google.android.material.card.a: boolean isChecked()>
UI update?

<com.google.android.material.card.a: void onAttachedToWindow()>
null to <com.google.android.material.card.a: void onAttachedToWindow()>
UI update?

<com.google.android.material.card.a: int[] onCreateDrawableState(int)>
null to <com.google.android.material.card.a: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <com.google.android.material.card.a: boolean isChecked()>
UI update?

<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.card.a: boolean isChecked()>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: boolean isClickable()>
<com.google.android.material.card.a: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.card.a: boolean e()>
UI update?

<com.google.android.material.card.a: void onMeasure(int,int)>
null to <com.google.android.material.card.a: void onMeasure(int,int)>
UI update?

<com.google.android.material.card.a: void setBackground(android.graphics.drawable.Drawable)>
null to <com.google.android.material.card.a: void setBackground(android.graphics.drawable.Drawable)>
<com.google.android.material.card.a: void setBackground(android.graphics.drawable.Drawable)> to <com.google.android.material.card.a: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.card.a: void setBackgroundDrawable(android.graphics.drawable.Drawable)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.card.a: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.card.a: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.card.a: void setBackgroundDrawable(android.graphics.drawable.Drawable)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.card.a: void setBackgroundInternal(android.graphics.drawable.Drawable)>
null to <com.google.android.material.card.a: void setBackgroundInternal(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.card.a: void setCardBackgroundColor(int)>
null to <com.google.android.material.card.a: void setCardBackgroundColor(int)>
UI update?

<com.google.android.material.card.a: void setCardBackgroundColor(android.content.res.ColorStateList)>
null to <com.google.android.material.card.a: void setCardBackgroundColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.card.a: void setCardElevation(float)>
null to <com.google.android.material.card.a: void setCardElevation(float)>
UI update?

<com.google.android.material.card.a: void setCardForegroundColor(android.content.res.ColorStateList)>
null to <com.google.android.material.card.a: void setCardForegroundColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.card.a: void setCheckable(boolean)>
null to <com.google.android.material.card.a: void setCheckable(boolean)>
UI update?

<com.google.android.material.card.a: void setChecked(boolean)>
null to <com.google.android.material.card.a: void setChecked(boolean)>
UI update?

<com.google.android.material.card.a: void setCheckedIcon(android.graphics.drawable.Drawable)>
null to <com.google.android.material.card.a: void setCheckedIcon(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.card.a: void setCheckedIconMargin(int)>
null to <com.google.android.material.card.a: void setCheckedIconMargin(int)>
UI update?

<com.google.android.material.card.a: void setCheckedIconMarginResource(int)>
null to <com.google.android.material.card.a: void setCheckedIconMarginResource(int)>
UI update?

<com.google.android.material.card.a: void setCheckedIconResource(int)>
null to <com.google.android.material.card.a: void setCheckedIconResource(int)>
UI update?

<com.google.android.material.card.a: void setCheckedIconSize(int)>
null to <com.google.android.material.card.a: void setCheckedIconSize(int)>
UI update?

<com.google.android.material.card.a: void setCheckedIconSizeResource(int)>
null to <com.google.android.material.card.a: void setCheckedIconSizeResource(int)>
UI update?

<com.google.android.material.card.a: void setCheckedIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.card.a: void setCheckedIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.card.a: void setClickable(boolean)>
null to <com.google.android.material.card.a: void setClickable(boolean)>
UI update?

<com.google.android.material.card.a: void setDragged(boolean)>
null to <com.google.android.material.card.a: void setDragged(boolean)>
UI update?

<com.google.android.material.card.a: void setMaxCardElevation(float)>
null to <com.google.android.material.card.a: void setMaxCardElevation(float)>
UI update?

<com.google.android.material.card.a: void setOnCheckedChangeListener(com.google.android.material.card.a$a)>
null to <com.google.android.material.card.a: void setOnCheckedChangeListener(com.google.android.material.card.a$a)>
UI update?

<com.google.android.material.card.a: void setPreventCornerOverlap(boolean)>
null to <com.google.android.material.card.a: void setPreventCornerOverlap(boolean)>
UI update?

<com.google.android.material.card.a: void setProgress(float)>
null to <com.google.android.material.card.a: void setProgress(float)>
UI update?

<com.google.android.material.card.a: void setRadius(float)>
null to <com.google.android.material.card.a: void setRadius(float)>
UI update?

<com.google.android.material.card.a: void setRippleColor(android.content.res.ColorStateList)>
null to <com.google.android.material.card.a: void setRippleColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.card.a: void setRippleColorResource(int)>
null to <com.google.android.material.card.a: void setRippleColorResource(int)>
UI update?

<com.google.android.material.card.a: void setShapeAppearanceModel(c2.k)>
null to <com.google.android.material.card.a: void setShapeAppearanceModel(c2.k)>
UI update?

<com.google.android.material.card.a: void setStrokeColor(int)>
null to <com.google.android.material.card.a: void setStrokeColor(int)>
UI update?

<com.google.android.material.card.a: void setStrokeColor(android.content.res.ColorStateList)>
null to <com.google.android.material.card.a: void setStrokeColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.card.a: void setStrokeWidth(int)>
null to <com.google.android.material.card.a: void setStrokeWidth(int)>
UI update?

<com.google.android.material.card.a: void setUseCompatPadding(boolean)>
null to <com.google.android.material.card.a: void setUseCompatPadding(boolean)>
UI update?
------------------------------------------------------
com.google.android.material.bottomappbar.BottomAppBar

<com.google.android.material.card.a: void toggle()>
null to <com.google.android.material.card.a: void toggle()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void <clinit>()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void <clinit>()>
<com.google.android.material.bottomappbar.BottomAppBar: void <clinit>()> to <com.google.android.material.bottomappbar.BottomAppBar: void <clinit>()>
<com.google.android.material.bottomappbar.BottomAppBar: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: boolean O(com.google.android.material.bottomappbar.BottomAppBar,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: boolean O(com.google.android.material.bottomappbar.BottomAppBar,boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void P(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void P(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void Q(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void Q(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator S(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator S(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float T(com.google.android.material.bottomappbar.BottomAppBar,int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: float T(com.google.android.material.bottomappbar.BottomAppBar,int)>
<com.google.android.material.bottomappbar.BottomAppBar: float T(com.google.android.material.bottomappbar.BottomAppBar,int)> to <com.google.android.material.bottomappbar.BottomAppBar: float p0(int)>
<com.google.android.material.bottomappbar.BottomAppBar: float p0(int)> to <com.google.android.material.internal.l: boolean d(android.view.View)>
<com.google.android.material.bottomappbar.BottomAppBar: float p0(int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: void <clinit>()>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: int C(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator U(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator U(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int V(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int V(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void W(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void W(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton X(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton X(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float Y(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: float Y(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int Z(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int Z(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int a0(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int a0(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int b0(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int b0(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int c0(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int c0(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.view.View d0(com.google.android.material.bottomappbar.BottomAppBar)>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.view.View d0(com.google.android.material.bottomappbar.BottomAppBar)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void e0(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void e0(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void f0(com.google.android.material.floatingactionbutton.FloatingActionButton)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void f0(com.google.android.material.floatingactionbutton.FloatingActionButton)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void g0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void g0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()>
null to <com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()>
null to <com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()>
null to <com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()>
null to <com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()>
null to <com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()>
null to <com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.a getTopEdgeTreatment()>
null to <com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.a getTopEdgeTreatment()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void i0(int,java.util.List)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void i0(int,java.util.List)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void j0(int,boolean,java.util.List)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void j0(int,boolean,java.util.List)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void l0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void l0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton m0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton m0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.view.View n0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.view.View n0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float p0(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: float p0(int)>
<com.google.android.material.bottomappbar.BottomAppBar: float p0(int)> to <com.google.android.material.internal.l: boolean d(android.view.View)>
<com.google.android.material.bottomappbar.BottomAppBar: float p0(int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: void <clinit>()>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: int C(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: boolean q0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: boolean q0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void r0(int,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void r0(int,boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void s0(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void s0(int)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void u0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void u0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void v0()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void v0()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void y0(androidx.appcompat.widget.ActionMenuView,int,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void y0(androidx.appcompat.widget.ActionMenuView,int,boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void z0(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void z0(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
null to <com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()>
null to <com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()>
<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()> to <android.graphics.Rect: void <clinit>()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()> to <android.graphics.Rect: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()> to <com.google.android.material.bottomappbar.BottomAppBar$Behavior$a: void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()> to <com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior$a: void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior)> to <java.lang.Object: void <init>()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void <init>()> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$c: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()>
null to <com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()>
null to <com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()>
null to <com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()>
null to <com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()>
null to <com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()>
null to <com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void h0(int,java.util.List)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void h0(int,java.util.List)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <com.google.android.material.internal.l: boolean d(android.view.View)>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.View: int getLeft()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.View: int getRight()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <java.lang.Math: int min(int,int)>
<com.google.android.material.bottomappbar.BottomAppBar: int o0(androidx.appcompat.widget.ActionMenuView,int,boolean)> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: void <clinit>()>
<com.google.android.material.internal.l: boolean d(android.view.View)> to <i0.w: int C(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void onAttachedToWindow()>
null to <com.google.android.material.bottomappbar.BottomAppBar: void onAttachedToWindow()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: android.os.Parcelable onSaveInstanceState()>
null to <com.google.android.material.bottomappbar.BottomAppBar: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void t0(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void t0(int)>
UI update?

<com.google.android.material.bottomappbar.BottomAppBar: void w0(int,int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: void w0(int,int)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyScrollView

<com.google.android.material.bottomappbar.BottomAppBar: boolean x0(int)>
null to <com.google.android.material.bottomappbar.BottomAppBar: boolean x0(int)>
UI update?

<com.simplemobiletools.commons.views.MyScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.MyScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<com.simplemobiletools.commons.views.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.simplemobiletools.commons.views.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.simplemobiletools.commons.views.MyScrollView: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getAction()>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
androidx.constraintlayout.widget.ConstraintLayout

<com.simplemobiletools.commons.views.MyScrollView: void setScrollable(boolean)>
null to <com.simplemobiletools.commons.views.MyScrollView: void setScrollable(boolean)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void <clinit>()>
null to <androidx.constraintlayout.widget.ConstraintLayout: void <clinit>()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: boolean A()>
null to <androidx.constraintlayout.widget.ConstraintLayout: boolean A()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int b(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.ConstraintLayout: int b(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList c(androidx.constraintlayout.widget.ConstraintLayout)>
null to <androidx.constraintlayout.widget.ConstraintLayout: java.util.ArrayList c(androidx.constraintlayout.widget.ConstraintLayout)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.j getSharedValues()>
null to <androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.j getSharedValues()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: s.e k(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: s.e k(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void q(android.util.AttributeSet,int,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void q(android.util.AttributeSet,int,int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void s()>
null to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void w()>
null to <androidx.constraintlayout.widget.ConstraintLayout: void w()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void z(s.e,androidx.constraintlayout.widget.ConstraintLayout$b,android.util.SparseArray,int,s.d$b)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void z(s.e,androidx.constraintlayout.widget.ConstraintLayout$b,android.util.SparseArray,int,s.d$b)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.constraintlayout.widget.ConstraintLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void dispatchDraw(android.graphics.Canvas)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void dispatchDraw(android.graphics.Canvas)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void e(boolean,android.view.View,s.e,androidx.constraintlayout.widget.ConstraintLayout$b,android.util.SparseArray)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void e(boolean,android.view.View,s.e,androidx.constraintlayout.widget.ConstraintLayout$b,android.util.SparseArray)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$b f()>
null to <androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$b f()>
<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$b f()> to <androidx.constraintlayout.widget.ConstraintLayout$b: void <init>(int,int)>
<androidx.constraintlayout.widget.ConstraintLayout$b: void <init>(int,int)> to <s.e: void <clinit>()>
<androidx.constraintlayout.widget.ConstraintLayout$b: void <init>(int,int)> to <s.e: void <init>()>
<androidx.constraintlayout.widget.ConstraintLayout$b: void <init>(int,int)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
<s.e: void <init>()> to <r.a: void <clinit>()>
<s.e: void <init>()> to <java.util.ArrayList: void <init>()>
<s.e: void <init>()> to <s.d: void <init>(s.e,s.d$b)>
<s.e: void <init>()> to <r.a: void <init>(s.e)>
<s.e: void <init>()> to <s.e: void d()>
<s.e: void <init>()> to <java.lang.Object: void <init>()>
<s.e: void <init>()> to <s.d$b: void <clinit>()>
<s.e: void <init>()> to <s.e$b: void <clinit>()>
<s.e: void <init>()> to <s.e: void <clinit>()>
<s.d: void <init>(s.e,s.d$b)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.util.HashMap: void <init>()>
<s.e: void d()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <clinit>()> to <s.d$b: void <clinit>()>
<s.d$b: void <clinit>()> to <s.d$b: void <init>(java.lang.String,int)>
<s.e$b: void <clinit>()> to <s.e$b: void <clinit>()>
<s.e$b: void <clinit>()> to <s.e$b: void <init>(java.lang.String,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<s.e$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void forceLayout()>
null to <androidx.constraintlayout.widget.ConstraintLayout: void forceLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void forceLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void forceLayout()> to <android.view.ViewGroup: void forceLayout()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$b g(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$b g(android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()>
null to <androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()>
null to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
null to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: android.view.View l(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: android.view.View l(int)>
<androidx.constraintlayout.widget.ConstraintLayout: android.view.View l(int)> to <android.util.SparseArray: java.lang.Object get(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void onLayout(boolean,int,int,int,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: s.e p(android.view.View)>
null to <androidx.constraintlayout.widget.ConstraintLayout: s.e p(android.view.View)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: boolean r()>
null to <androidx.constraintlayout.widget.ConstraintLayout: boolean r()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
null to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.d)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.d)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setId(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setId(int)>
<androidx.constraintlayout.widget.ConstraintLayout: void setId(int)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.ConstraintLayout: void setId(int)> to <android.util.SparseArray: void put(int,java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: void setId(int)> to <android.util.SparseArray: void remove(int)>
<androidx.constraintlayout.widget.ConstraintLayout: void setId(int)> to <android.view.ViewGroup: void setId(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.f)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.f)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: boolean shouldDelayChildPressedState()>
null to <androidx.constraintlayout.widget.ConstraintLayout: boolean shouldDelayChildPressedState()>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void t(int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void t(int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void u(int,int,int,int,boolean,boolean)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void u(int,int,int,int,boolean,boolean)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void v(s.f,int,int,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void v(s.f,int,int,int)>
UI update?

<androidx.constraintlayout.widget.ConstraintLayout: void x(int,java.lang.Object,java.lang.Object)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void x(int,java.lang.Object,java.lang.Object)>
UI update?
------------------------------------------------------
com.google.android.material.tabs.TabItem

<androidx.constraintlayout.widget.ConstraintLayout: void y(s.f,int,int,int,int)>
null to <androidx.constraintlayout.widget.ConstraintLayout: void y(s.f,int,int,int,int)>
UI update?
------------------------------------------------------
androidx.viewpager.widget.b

<com.google.android.material.tabs.TabItem: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.tabs.TabItem: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.viewpager.widget.b: void <clinit>()>
null to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$n: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$b: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$a: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.viewpager.widget.b: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.viewpager.widget.b: boolean C(int)>
null to <androidx.viewpager.widget.b: boolean C(int)>
<androidx.viewpager.widget.b: boolean C(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: boolean C(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: void y(int,float,int)>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <java.lang.Math: int max(int,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getLeft()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: void offsetLeftAndRight(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ListView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.FrameLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.TextView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.LinearLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: void j(int,float,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <i1.b$c: void a(int,float,int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.b: androidx.viewpager.widget.a S(i1.b)>
<i1.b$c: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$c: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: int c()>
<i1.b$c: void a(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<i1.b$c: void a(int,float,int)> to <i1.b: boolean T(i1.b)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.a: int c()> to <i1.a: int c()>
<i1.b: androidx.viewpager.widget.a S(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.viewpager.widget.b: boolean D(float)>
null to <androidx.viewpager.widget.b: boolean D(float)>
<androidx.viewpager.widget.b: boolean D(float)> to <java.lang.Math: float abs(float)>
<androidx.viewpager.widget.b: boolean D(float)> to <android.widget.EdgeEffect: void onPull(float)>
<androidx.viewpager.widget.b: boolean D(float)> to <i1.a: int c()>
<androidx.viewpager.widget.b: boolean D(float)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: boolean D(float)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: boolean D(float)> to <androidx.viewpager.widget.b: boolean C(int)>
<androidx.viewpager.widget.b: boolean D(float)> to <android.view.View: void scrollTo(int,int)>
<androidx.viewpager.widget.b: boolean D(float)> to <android.view.ViewGroup: int getScrollY()>
<androidx.viewpager.widget.b: boolean D(float)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: boolean D(float)> to <android.view.ViewGroup: int getScrollX()>
<i1.a: int c()> to <i1.a: int c()>
<androidx.viewpager.widget.b: boolean C(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: boolean C(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: void y(int,float,int)>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: boolean C(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <java.lang.Math: int max(int,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getLeft()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: void offsetLeftAndRight(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ListView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.FrameLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.TextView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.LinearLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: void j(int,float,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <i1.b$c: void a(int,float,int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.b: androidx.viewpager.widget.a S(i1.b)>
<i1.b$c: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$c: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: int c()>
<i1.b$c: void a(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<i1.b$c: void a(int,float,int)> to <i1.b: boolean T(i1.b)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.b: androidx.viewpager.widget.a S(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.viewpager.widget.b: void G(int,int,int,int)>
null to <androidx.viewpager.widget.b: void G(int,int,int,int)>
UI update?

<androidx.viewpager.widget.b: void H()>
null to <androidx.viewpager.widget.b: void H()>
UI update?

<androidx.viewpager.widget.b: boolean L()>
null to <androidx.viewpager.widget.b: boolean L()>
<androidx.viewpager.widget.b: boolean L()> to <androidx.viewpager.widget.b: void o()>
<androidx.viewpager.widget.b: boolean L()> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.viewpager.widget.b: boolean L()> to <android.widget.EdgeEffect: void onRelease()>
<androidx.viewpager.widget.b: void o()> to <android.view.VelocityTracker: void recycle()>
UI update?

<androidx.viewpager.widget.b: void R()>
null to <androidx.viewpager.widget.b: void R()>
<androidx.viewpager.widget.b: void R()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void clear()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void <init>()>
<androidx.viewpager.widget.b: void R()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$n: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$b: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$a: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)>
null to <androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: float f(int)>
<i1.a: int c()> to <i1.a: int c()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
UI update?

<androidx.viewpager.widget.b: int getClientWidth()>
null to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
UI update?

<androidx.viewpager.widget.b: int i(int,float,int,int)>
null to <androidx.viewpager.widget.b: int i(int,float,int,int)>
<androidx.viewpager.widget.b: int i(int,float,int,int)> to <java.lang.Math: int abs(int)>
<androidx.viewpager.widget.b: int i(int,float,int,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: int i(int,float,int,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: int i(int,float,int,int)> to <java.lang.Math: int min(int,int)>
<androidx.viewpager.widget.b: int i(int,float,int,int)> to <java.lang.Math: int max(int,int)>
UI update?

<androidx.viewpager.widget.b: void j(int,float,int)>
null to <androidx.viewpager.widget.b: void j(int,float,int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <i1.b$c: void a(int,float,int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b: androidx.viewpager.widget.a S(i1.b)>
<i1.b$c: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$c: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: int c()>
<i1.b$c: void a(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<i1.b$c: void a(int,float,int)> to <i1.b: boolean T(i1.b)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<i1.b: androidx.viewpager.widget.a S(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.a: int c()> to <i1.a: int c()>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.viewpager.widget.b: void l(int)>
null to <androidx.viewpager.widget.b: void l(int)>
<androidx.viewpager.widget.b: void l(int)> to <com.google.android.material.tabs.TabLayout$h: void b(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void l(int)> to <i1.b$c: void b(int)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i1.b$c: void b(int)> to <i1.b$c: void b(int)>
<i1.b$c: void b(int)> to <com.google.android.material.tabs.TabLayout$h: void b(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void n(boolean)>
null to <androidx.viewpager.widget.b: void n(boolean)>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.View: void setLayerType(int,android.graphics.Paint)>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
UI update?

<androidx.viewpager.widget.b: void o()>
null to <androidx.viewpager.widget.b: void o()>
<androidx.viewpager.widget.b: void o()> to <android.view.VelocityTracker: void recycle()>
UI update?

<androidx.viewpager.widget.b: android.graphics.Rect q(android.graphics.Rect,android.view.View)>
null to <androidx.viewpager.widget.b: android.graphics.Rect q(android.graphics.Rect,android.view.View)>
UI update?

<androidx.viewpager.widget.b: void setScrollingCacheEnabled(boolean)>
null to <androidx.viewpager.widget.b: void setScrollingCacheEnabled(boolean)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f t()> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.a: int c()> to <i1.a: int c()>
UI update?

<androidx.viewpager.widget.b: boolean w(android.view.View)>
null to <androidx.viewpager.widget.b: boolean w(android.view.View)>
<androidx.viewpager.widget.b: boolean w(android.view.View)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.viewpager.widget.b: boolean w(android.view.View)> to <java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: boolean x(float,float)>
null to <androidx.viewpager.widget.b: boolean x(float,float)>
UI update?

<androidx.viewpager.widget.b: void z(android.view.MotionEvent)>
null to <androidx.viewpager.widget.b: void z(android.view.MotionEvent)>
<androidx.viewpager.widget.b: void z(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionIndex()>
<androidx.viewpager.widget.b: void z(android.view.MotionEvent)> to <android.view.VelocityTracker: void clear()>
<androidx.viewpager.widget.b: void z(android.view.MotionEvent)> to <android.view.MotionEvent: int getPointerId(int)>
<androidx.viewpager.widget.b: void z(android.view.MotionEvent)> to <android.view.MotionEvent: float getX(int)>
UI update?

<androidx.viewpager.widget.b: boolean A()>
null to <androidx.viewpager.widget.b: boolean A()>
UI update?

<androidx.viewpager.widget.b: boolean B()>
null to <androidx.viewpager.widget.b: boolean B()>
UI update?

<androidx.viewpager.widget.b: void E()>
null to <androidx.viewpager.widget.b: void E()>
<androidx.viewpager.widget.b: void E()> to <androidx.viewpager.widget.b: void F(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Integer: void <clinit>()>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: void <init>()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceName(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.content.res.Resources: java.lang.String getResourceName(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.View: boolean requestFocus(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: java.lang.Object remove(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void b(android.view.ViewGroup)>
<androidx.viewpager.widget.b: void F(int)> to <i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void o(android.view.ViewGroup)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getId()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.View findFocus()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: void R()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Math: int max(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Math: int min(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.o0: java.lang.String getResourceName(int)> to <android.content.res.Resources: java.lang.String getResourceName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceName(int)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i1.a: void b(android.view.ViewGroup)> to <i1.a: void b(android.view.ViewGroup)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.b: boolean T(i1.b)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: int c()>
<i1.a: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.b: boolean T(i1.b)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: int c()>
<i1.a: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: int c()> to <i1.a: int c()>
<i1.a: void o(android.view.ViewGroup)> to <i1.a: void o(android.view.ViewGroup)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: void R()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void clear()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void <init>()>
<androidx.viewpager.widget.b: void R()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <androidx.viewpager.widget.b$f: void <init>()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<java.lang.Integer: java.lang.String toHexString(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.a: boolean h(android.view.View,java.lang.Object)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$n: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$b: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$a: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <android.view.View: void <clinit>()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b$f: void <init>()> to <java.lang.Object: void <init>()>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: int c()>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void F(int)>
null to <androidx.viewpager.widget.b: void F(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Integer: void <clinit>()>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.StringBuilder: void <init>()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceName(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.content.res.Resources: java.lang.String getResourceName(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.View: boolean requestFocus(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void F(int)> to <java.util.ArrayList: java.lang.Object remove(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void b(android.view.ViewGroup)>
<androidx.viewpager.widget.b: void F(int)> to <i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void F(int)> to <i1.a: void o(android.view.ViewGroup)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getId()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.view.View findFocus()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: void R()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void F(int)> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<androidx.viewpager.widget.b: void F(int)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Math: int max(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Math: int min(int,int)>
<androidx.viewpager.widget.b: void F(int)> to <java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.o0: java.lang.String getResourceName(int)> to <android.content.res.Resources: java.lang.String getResourceName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceName(int)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i1.a: void b(android.view.ViewGroup)> to <i1.a: void b(android.view.ViewGroup)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.b: boolean T(i1.b)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: int c()>
<i1.a: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: void m(android.view.ViewGroup,int,java.lang.Object)> to <i1.b$b: void m(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.b: boolean T(i1.b)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: int c()>
<i1.a: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.a: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: void a(android.view.ViewGroup,int,java.lang.Object)> to <i1.b$b: void a(android.view.ViewGroup,int,java.lang.Object)>
<i1.a: int c()> to <i1.a: int c()>
<i1.a: void o(android.view.ViewGroup)> to <i1.a: void o(android.view.ViewGroup)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: void R()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void R()> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void clear()>
<androidx.viewpager.widget.b: void R()> to <java.util.ArrayList: void <init>()>
<androidx.viewpager.widget.b: void R()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void <clinit>()>
<androidx.viewpager.widget.b: void R()> to <java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: void e(androidx.viewpager.widget.b$f,int,androidx.viewpager.widget.b$f)> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <androidx.viewpager.widget.b$f: void <init>()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<java.lang.Integer: java.lang.String toHexString(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.a: boolean h(android.view.View,java.lang.Object)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$n: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$b: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$a: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <android.view.View: void <clinit>()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b$f: void <init>()> to <java.lang.Object: void <init>()>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: int c()>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void I(androidx.viewpager.widget.b$i)>
null to <androidx.viewpager.widget.b: void I(androidx.viewpager.widget.b$i)>
UI update?

<androidx.viewpager.widget.b: void J(androidx.viewpager.widget.b$j)>
null to <androidx.viewpager.widget.b: void J(androidx.viewpager.widget.b$j)>
UI update?

<androidx.viewpager.widget.b: void N(int,boolean)>
null to <androidx.viewpager.widget.b: void N(int,boolean)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <androidx.viewpager.widget.b$f: void <init>()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: float f(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f a(int,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<androidx.viewpager.widget.b$f: void <init>()> to <java.lang.Object: void <init>()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.b$b: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: int c()>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.a: java.lang.Object g(android.view.ViewGroup,int)>
<i1.a: java.lang.Object g(android.view.ViewGroup,int)> to <i1.b$b: java.lang.Object g(android.view.ViewGroup,int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<i1.a: int c()> to <i1.a: int c()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void addFocusables(java.util.ArrayList,int,int)>
null to <androidx.viewpager.widget.b: void addFocusables(java.util.ArrayList,int,int)>
UI update?

<androidx.viewpager.widget.b: void addTouchables(java.util.ArrayList)>
null to <androidx.viewpager.widget.b: void addTouchables(java.util.ArrayList)>
UI update?

<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
null to <androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: boolean w(android.view.View)>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b: void <clinit>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$n: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$b: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <androidx.viewpager.widget.b$a: void <init>()>
<androidx.viewpager.widget.b: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<androidx.viewpager.widget.b: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: boolean w(android.view.View)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.viewpager.widget.b: boolean w(android.view.View)> to <java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
<androidx.viewpager.widget.b$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$b: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b$a: void <init>()> to <java.lang.Object: void <init>()>
<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.viewpager.widget.b$g: void <init>()>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.viewpager.widget.b$g: void <init>()> to <android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void b(androidx.viewpager.widget.b$i)>
null to <androidx.viewpager.widget.b: void b(androidx.viewpager.widget.b$i)>
UI update?

<androidx.viewpager.widget.b: void c(androidx.viewpager.widget.b$j)>
null to <androidx.viewpager.widget.b: void c(androidx.viewpager.widget.b$j)>
UI update?

<androidx.viewpager.widget.b: boolean canScrollHorizontally(int)>
null to <androidx.viewpager.widget.b: boolean canScrollHorizontally(int)>
UI update?

<androidx.viewpager.widget.b: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.viewpager.widget.b: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.viewpager.widget.b: void computeScroll()>
null to <androidx.viewpager.widget.b: void computeScroll()>
UI update?

<androidx.viewpager.widget.b: boolean d(int)>
null to <androidx.viewpager.widget.b: boolean d(int)>
UI update?

<androidx.viewpager.widget.b: boolean dispatchKeyEvent(android.view.KeyEvent)>
null to <androidx.viewpager.widget.b: boolean dispatchKeyEvent(android.view.KeyEvent)>
UI update?

<androidx.viewpager.widget.b: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.viewpager.widget.b: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
UI update?

<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)>
null to <androidx.viewpager.widget.b: void draw(android.graphics.Canvas)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <i0.w: void <clinit>()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void restoreToCount(int)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void translate(float,float)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void rotate(float)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: int save()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: void finish()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <i1.a: int c()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: int getPaddingTop()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: int getPaddingBottom()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: int getHeight()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: int getWidth()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: int getOverScrollMode()>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <android.view.ViewGroup: void draw(android.graphics.Canvas)>
<androidx.viewpager.widget.b: void draw(android.graphics.Canvas)> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i1.a: int c()> to <i1.a: int c()>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: void drawableStateChanged()>
null to <androidx.viewpager.widget.b: void drawableStateChanged()>
UI update?

<androidx.viewpager.widget.b: boolean f(android.view.View,boolean,int,int,int)>
null to <androidx.viewpager.widget.b: boolean f(android.view.View,boolean,int,int,int)>
UI update?

<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.viewpager.widget.b$g: void <init>()>
<androidx.viewpager.widget.b$g: void <init>()> to <android.view.ViewGroup$LayoutParams: void <init>(int,int)>
UI update?

<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> to <androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<androidx.viewpager.widget.b: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> to <androidx.viewpager.widget.b$g: void <init>()>
<androidx.viewpager.widget.b$g: void <init>()> to <android.view.ViewGroup$LayoutParams: void <init>(int,int)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
UI update?

<androidx.viewpager.widget.b: int getChildDrawingOrder(int,int)>
null to <androidx.viewpager.widget.b: int getChildDrawingOrder(int,int)>
UI update?

<androidx.viewpager.widget.b: int getCurrentItem()>
null to <androidx.viewpager.widget.b: int getCurrentItem()>
UI update?

<androidx.viewpager.widget.b: int getOffscreenPageLimit()>
null to <androidx.viewpager.widget.b: int getOffscreenPageLimit()>
UI update?

<androidx.viewpager.widget.b: int getPageMargin()>
null to <androidx.viewpager.widget.b: int getPageMargin()>
UI update?

<androidx.viewpager.widget.b: void h()>
null to <androidx.viewpager.widget.b: void h()>
UI update?

<androidx.viewpager.widget.b: float m(float)>
null to <androidx.viewpager.widget.b: float m(float)>
<androidx.viewpager.widget.b: float m(float)> to <java.lang.Math: double sin(double)>
UI update?

<androidx.viewpager.widget.b: void onAttachedToWindow()>
null to <androidx.viewpager.widget.b: void onAttachedToWindow()>
UI update?

<androidx.viewpager.widget.b: void onDetachedFromWindow()>
null to <androidx.viewpager.widget.b: void onDetachedFromWindow()>
UI update?

<androidx.viewpager.widget.b: void onDraw(android.graphics.Canvas)>
null to <androidx.viewpager.widget.b: void onDraw(android.graphics.Canvas)>
UI update?

<androidx.viewpager.widget.b: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.viewpager.widget.b: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.viewpager.widget.b: void onLayout(boolean,int,int,int,int)>
null to <androidx.viewpager.widget.b: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.viewpager.widget.b: void onMeasure(int,int)>
null to <androidx.viewpager.widget.b: void onMeasure(int,int)>
UI update?

<androidx.viewpager.widget.b: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
null to <androidx.viewpager.widget.b: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
UI update?

<androidx.viewpager.widget.b: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.viewpager.widget.b: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.viewpager.widget.b: android.os.Parcelable onSaveInstanceState()>
null to <androidx.viewpager.widget.b: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.viewpager.widget.b: void onSizeChanged(int,int,int,int)>
null to <androidx.viewpager.widget.b: void onSizeChanged(int,int,int,int)>
UI update?

<androidx.viewpager.widget.b: boolean p(android.view.KeyEvent)>
null to <androidx.viewpager.widget.b: boolean p(android.view.KeyEvent)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f r(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<i1.a: boolean h(android.view.View,java.lang.Object)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
UI update?

<androidx.viewpager.widget.b: void removeView(android.view.View)>
null to <androidx.viewpager.widget.b: void removeView(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeView(android.view.View)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f s(android.view.View)> to <java.util.ArrayList: java.lang.Object get(int)>
<i1.a: boolean h(android.view.View,java.lang.Object)> to <i1.a: boolean h(android.view.View,java.lang.Object)>
UI update?

<androidx.viewpager.widget.b: void setAdapter(androidx.viewpager.widget.a)>
null to <androidx.viewpager.widget.b: void setAdapter(androidx.viewpager.widget.a)>
UI update?

<androidx.viewpager.widget.b: void setOffscreenPageLimit(int)>
null to <androidx.viewpager.widget.b: void setOffscreenPageLimit(int)>
UI update?

<androidx.viewpager.widget.b: void setOnPageChangeListener(androidx.viewpager.widget.b$j)>
null to <androidx.viewpager.widget.b: void setOnPageChangeListener(androidx.viewpager.widget.b$j)>
UI update?

<androidx.viewpager.widget.b: void setPageMargin(int)>
null to <androidx.viewpager.widget.b: void setPageMargin(int)>
UI update?

<androidx.viewpager.widget.b: void setPageMarginDrawable(int)>
null to <androidx.viewpager.widget.b: void setPageMarginDrawable(int)>
UI update?

<androidx.viewpager.widget.b: void setPageMarginDrawable(android.graphics.drawable.Drawable)>
null to <androidx.viewpager.widget.b: void setPageMarginDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.viewpager.widget.b: void setScrollState(int)>
null to <androidx.viewpager.widget.b: void setScrollState(int)>
<androidx.viewpager.widget.b: void setScrollState(int)> to <androidx.viewpager.widget.b: void n(boolean)>
<androidx.viewpager.widget.b: void setScrollState(int)> to <androidx.viewpager.widget.b: void l(int)>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.View: void setLayerType(int,android.graphics.Paint)>
<androidx.viewpager.widget.b: void n(boolean)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void l(int)> to <com.google.android.material.tabs.TabLayout$h: void b(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void l(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void l(int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void l(int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void l(int)> to <i1.b$c: void b(int)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i1.b$c: void b(int)> to <i1.b$c: void b(int)>
<i1.b$c: void b(int)> to <com.google.android.material.tabs.TabLayout$h: void b(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)>
null to <androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: androidx.viewpager.widget.b$f u(int)> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<androidx.viewpager.widget.b: void v()>
null to <androidx.viewpager.widget.b: void v()>
UI update?

<androidx.viewpager.widget.b: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <androidx.viewpager.widget.b: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?
------------------------------------------------------
com.google.android.material.timepicker.b

<androidx.viewpager.widget.b: void y(int,float,int)>
null to <androidx.viewpager.widget.b: void y(int,float,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <java.lang.Math: int max(int,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getLeft()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: void offsetLeftAndRight(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ListView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.HorizontalScrollView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.ImageView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.FrameLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.Spinner: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.View: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.TextView: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.widget.LinearLayout: int getWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: int getClientWidth()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getChildCount()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getScrollX()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <androidx.viewpager.widget.b: void j(int,float,int)>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: void y(int,float,int)> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getMeasuredWidth()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingRight()>
<androidx.viewpager.widget.b: int getClientWidth()> to <android.view.ViewGroup: int getPaddingLeft()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <i1.b$c: void a(int,float,int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: java.lang.Object get(int)>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.ArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.LinkedList: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <z2.t: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <java.util.Vector: int size()>
<androidx.viewpager.widget.b: void j(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b: androidx.viewpager.widget.a S(i1.b)>
<i1.b$c: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout$h: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$c: void a(int,float,int)>
<i1.b$c: void a(int,float,int)> to <i1.b$b: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: float f(int)>
<i1.b$c: void a(int,float,int)> to <i1.a: int c()>
<i1.b$c: void a(int,float,int)> to <android.view.ViewGroup: int getWidth()>
<i1.b$c: void a(int,float,int)> to <i1.b: boolean T(i1.b)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.tabs.TabLayout$h: void a(int,float,int)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<i1.b: androidx.viewpager.widget.a S(i1.b)> to <androidx.viewpager.widget.b: androidx.viewpager.widget.a getAdapter()>
<i1.b$b: float f(int)> to <i1.b: boolean T(i1.b)>
<i1.b$b: float f(int)> to <i1.a: float f(int)>
<i1.b$b: float f(int)> to <i1.a: int c()>
<i1.a: float f(int)> to <i1.a: float f(int)>
<i1.a: float f(int)> to <i1.b$b: float f(int)>
<i1.a: int c()> to <i1.a: int c()>
<i1.b: boolean T(i1.b)> to <i1.b: boolean V()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.timepicker.b: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.timepicker.b: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.timepicker.b: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.timepicker.b: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.timepicker.b: android.graphics.drawable.Drawable B()>
null to <com.google.android.material.timepicker.b: android.graphics.drawable.Drawable B()>
UI update?

<com.google.android.material.timepicker.b: boolean E(android.view.View)>
null to <com.google.android.material.timepicker.b: boolean E(android.view.View)>
<com.google.android.material.timepicker.b: boolean E(android.view.View)> to <android.view.View: java.lang.Object getTag()>
<com.google.android.material.timepicker.b: boolean E(android.view.View)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.timepicker.b: int C()>
null to <com.google.android.material.timepicker.b: int C()>
UI update?

<com.google.android.material.timepicker.b: void D(int)>
null to <com.google.android.material.timepicker.b: void D(int)>
UI update?

<com.google.android.material.timepicker.b: void onFinishInflate()>
null to <com.google.android.material.timepicker.b: void onFinishInflate()>
UI update?

<com.google.android.material.timepicker.b: void onViewRemoved(android.view.View)>
null to <com.google.android.material.timepicker.b: void onViewRemoved(android.view.View)>
UI update?
------------------------------------------------------
androidx.constraintlayout.helper.widget.Flow

<androidx.constraintlayout.helper.widget.Flow: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.helper.widget.Flow: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)>
null to <androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getInt(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: float getFloat(int,float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void C2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void G2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void w2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void E2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void u2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void F2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void A2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void s2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void y2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void q2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void v2(float)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void B2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void t2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void z2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void r2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void H2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void x2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void I2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void J1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void M1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void O1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void L1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void K1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void N1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.l: void I1(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void D2(int)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <s.g: void <init>()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void t()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)>
<androidx.constraintlayout.helper.widget.Flow: void n(android.util.AttributeSet)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.constraintlayout.widget.i: void <clinit>()> to <androidx.constraintlayout.widget.i: void <clinit>()>
<s.g: void <init>()> to <s.l: void <init>()>
<s.g: void <init>()> to <java.util.ArrayList: void <init>()>
<androidx.constraintlayout.widget.b: void t()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<androidx.constraintlayout.widget.k: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)>
<s.l: void <init>()> to <t.b$a: void <clinit>()>
<s.l: void <init>()> to <t.b$a: void <init>()>
<s.l: void <init>()> to <s.j: void <init>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.i: void <clinit>()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: void recycle()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: java.lang.String getString(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndex(int)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.res.TypedArray: int getIndexCount()>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <androidx.constraintlayout.widget.b: void setIds(java.lang.String)>
<androidx.constraintlayout.widget.b: void n(android.util.AttributeSet)> to <android.view.View: android.content.Context getContext()>
<t.b$a: void <init>()> to <java.lang.Object: void <init>()>
<s.j: void <init>()> to <s.e: void <clinit>()>
<s.j: void <init>()> to <s.e: void <init>()>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <androidx.constraintlayout.widget.b: void f(java.lang.String)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setReferenceTags(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: int indexOf(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <androidx.constraintlayout.widget.b: void d(java.lang.String)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int,int)>
<androidx.constraintlayout.widget.b: void setIds(java.lang.String)> to <java.lang.String: java.lang.String substring(int)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.e: void <init>()> to <r.a: void <clinit>()>
<s.e: void <init>()> to <java.util.ArrayList: void <init>()>
<s.e: void <init>()> to <s.d: void <init>(s.e,s.d$b)>
<s.e: void <init>()> to <r.a: void <init>(s.e)>
<s.e: void <init>()> to <s.e: void d()>
<s.e: void <init>()> to <java.lang.Object: void <init>()>
<s.e: void <init>()> to <s.d$b: void <clinit>()>
<s.e: void <init>()> to <s.e$b: void <clinit>()>
<s.e: void <init>()> to <s.e: void <clinit>()>
<java.lang.String: int indexOf(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Class: java.lang.String getSimpleName()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void f(java.lang.String)> to <java.lang.String: int length()>
<java.lang.String: java.lang.String substring(int,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: void e(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <androidx.constraintlayout.widget.b: int l(java.lang.String)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: java.lang.String trim()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.String: int length()>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.constraintlayout.widget.b: void d(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d: void <init>(s.e,s.d$b)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.lang.Object: void <init>()>
<r.a: void <init>(s.e)> to <java.util.HashMap: void <init>()>
<s.e: void d()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<s.d$b: void <clinit>()> to <s.d$b: void <clinit>()>
<s.d$b: void <clinit>()> to <s.d$b: void <init>(java.lang.String,int)>
<s.e$b: void <clinit>()> to <s.e$b: void <clinit>()>
<s.e$b: void <clinit>()> to <s.e$b: void <init>(java.lang.String,int)>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: android.view.ViewParent getParent()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.reflect.Field: int getInt(java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <java.lang.Integer: int intValue()>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)>
<androidx.constraintlayout.widget.b: int l(java.lang.String)> to <android.view.View: boolean isInEditMode()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<s.d$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<s.e$b: void <init>(java.lang.String,int)> to <java.lang.Enum: void <init>(java.lang.String,int)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.o0: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object h(int,java.lang.Object)> to <java.util.HashMap: boolean containsKey(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.View: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getId()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ViewGroup: int getChildCount()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <h.d: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.constraintlayout.widget.b: int k(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Enum: void finalize()>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Enum: void <init>(java.lang.String,int)> to <java.lang.Object: void <init>()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)> to <androidx.appcompat.widget.o0: java.lang.String getResourceEntryName(int)>
<java.lang.Enum: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void o(s.e,boolean)>
null to <androidx.constraintlayout.helper.widget.Flow: void o(s.e,boolean)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void onMeasure(int,int)>
null to <androidx.constraintlayout.helper.widget.Flow: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setPadding(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setPadding(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)>
null to <androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)>
UI update?

<androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)>
null to <androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ActionBarContextView

<androidx.constraintlayout.helper.widget.Flow: void u(s.l,int,int)>
null to <androidx.constraintlayout.helper.widget.Flow: void u(s.l,int,int)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void i()>
null to <androidx.appcompat.widget.ActionBarContextView: void i()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: i0.a0 f(int,long)>
null to <androidx.appcompat.widget.ActionBarContextView: i0.a0 f(int,long)>
<androidx.appcompat.widget.ActionBarContextView: i0.a0 f(int,long)> to <androidx.appcompat.widget.a: i0.a0 f(int,long)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <androidx.appcompat.widget.a$a: androidx.appcompat.widget.a$a d(i0.a0,int)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <android.view.ViewGroup: void setAlpha(float)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <android.view.ViewGroup: int getVisibility()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 f(i0.b0)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 d(long)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 a(float)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: void b()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.w: i0.a0 d(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.a0: i0.a0 f(i0.b0)> to <android.os.Build$VERSION: void <clinit>()>
<i0.a0: i0.a0 f(i0.b0)> to <i0.a0$c: void <init>(i0.a0)>
<i0.a0: i0.a0 f(i0.b0)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <i0.a0: void g(android.view.View,i0.b0)>
<i0.a0: i0.a0 f(i0.b0)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 d(long)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 d(long)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>
<i0.a0: i0.a0 d(long)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: i0.a0 a(float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 a(float)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>
<i0.a0: i0.a0 a(float)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: void b()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: void b()> to <android.view.ViewPropertyAnimator: void cancel()>
<i0.a0: void b()> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.w: i0.a0 d(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a0 d(android.view.View)> to <i0.a0: void <init>(android.view.View)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: void <init>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.a0$c: void <init>(i0.a0)> to <java.lang.Object: void <init>()>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.a0: void g(android.view.View,i0.b0)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: void g(android.view.View,i0.b0)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<i0.a0: void g(android.view.View,i0.b0)> to <i0.a0$a: void <init>(i0.a0,i0.b0,android.view.View)>
<i0.a0: void <init>(android.view.View)> to <java.lang.Object: void <init>()>
<i0.a0: void <init>(android.view.View)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.a0$a: void <init>(i0.a0,i0.b0,android.view.View)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void g()>
null to <androidx.appcompat.widget.ActionBarContextView: void g()>
<androidx.appcompat.widget.ActionBarContextView: void g()> to <androidx.appcompat.widget.ActionBarContextView: void k()>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.view.ViewGroup: void removeAllViews()>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.RelativeLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d$a: void <init>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()>
null to <androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: int getContentHeight()>
null to <androidx.appcompat.widget.ActionBarContextView: int getContentHeight()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
null to <androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
null to <androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void k()>
null to <androidx.appcompat.widget.ActionBarContextView: void k()>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.view.ViewGroup: void removeAllViews()>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.RelativeLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.widget.ActionBarContextView: void k()> to <android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)> to <com.google.android.material.snackbar.d: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.timepicker.ChipTextInputComboView: void setOnClickListener(android.view.View$OnClickListener)> to <android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d: void <clinit>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <com.google.android.material.snackbar.d$a: void <init>()>
<com.google.android.material.snackbar.d: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.snackbar.d$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: boolean j()>
null to <androidx.appcompat.widget.ActionBarContextView: boolean j()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: int getEventType()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ContextThemeWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.content.ContextWrapper: java.lang.String getPackageName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Object: java.lang.Class getClass()>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)> to <androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionMasked()>
<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)>
null to <androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)>
null to <androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
null to <androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
null to <androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)>
null to <androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)>
UI update?

<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>
null to <androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>
<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)> to <androidx.appcompat.widget.a: void setVisibility(int)>
<androidx.appcompat.widget.a: void setVisibility(int)> to <android.view.ViewGroup: int getVisibility()>
<androidx.appcompat.widget.a: void setVisibility(int)> to <i0.a0: void b()>
<androidx.appcompat.widget.a: void setVisibility(int)> to <android.view.ViewGroup: void setVisibility(int)>
<i0.a0: void b()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: void b()> to <android.view.ViewPropertyAnimator: void cancel()>
<i0.a0: void b()> to <android.view.View: android.view.ViewPropertyAnimator animate()>
UI update?
------------------------------------------------------
com.google.android.material.tabs.TabLayout$i

<androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()>
null to <androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void a(com.google.android.material.tabs.TabLayout$i,android.content.Context)>
null to <com.google.android.material.tabs.TabLayout$i: void a(com.google.android.material.tabs.TabLayout$i,android.content.Context)>
UI update?

<com.google.android.material.tabs.TabLayout$i: void b(com.google.android.material.tabs.TabLayout$i,android.view.View)>
null to <com.google.android.material.tabs.TabLayout$i: void b(com.google.android.material.tabs.TabLayout$i,android.view.View)>
UI update?

<com.google.android.material.tabs.TabLayout$i: void c(com.google.android.material.tabs.TabLayout$i,android.graphics.Canvas)>
null to <com.google.android.material.tabs.TabLayout$i: void c(com.google.android.material.tabs.TabLayout$i,android.graphics.Canvas)>
UI update?

<com.google.android.material.tabs.TabLayout$i: boolean d(com.google.android.material.tabs.TabLayout$i)>
null to <com.google.android.material.tabs.TabLayout$i: boolean d(com.google.android.material.tabs.TabLayout$i)>
<com.google.android.material.tabs.TabLayout$i: boolean d(com.google.android.material.tabs.TabLayout$i)> to <com.google.android.material.tabs.TabLayout$i: boolean l()>
UI update?

<com.google.android.material.tabs.TabLayout$i: n1.a e(com.google.android.material.tabs.TabLayout$i)>
null to <com.google.android.material.tabs.TabLayout$i: n1.a e(com.google.android.material.tabs.TabLayout$i)>
UI update?

<com.google.android.material.tabs.TabLayout$i: void f(android.view.View)>
null to <com.google.android.material.tabs.TabLayout$i: void f(android.view.View)>
<com.google.android.material.tabs.TabLayout$i: void f(android.view.View)> to <com.google.android.material.tabs.TabLayout$i$a: void <init>(com.google.android.material.tabs.TabLayout$i,android.view.View)>
<com.google.android.material.tabs.TabLayout$i: void f(android.view.View)> to <android.widget.TextView: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.google.android.material.tabs.TabLayout$i: void f(android.view.View)> to <android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.google.android.material.tabs.TabLayout$i$a: void <init>(com.google.android.material.tabs.TabLayout$i,android.view.View)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout$i: float g(android.text.Layout,int,float)>
null to <com.google.android.material.tabs.TabLayout$i: float g(android.text.Layout,int,float)>
UI update?

<com.google.android.material.tabs.TabLayout$i: n1.a getBadge()>
null to <com.google.android.material.tabs.TabLayout$i: n1.a getBadge()>
UI update?

<com.google.android.material.tabs.TabLayout$i: n1.a getOrCreateBadge()>
null to <com.google.android.material.tabs.TabLayout$i: n1.a getOrCreateBadge()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void h(boolean)>
null to <com.google.android.material.tabs.TabLayout$i: void h(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: void setClipChildren(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: void setClipToPadding(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void t0()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <android.view.ViewGroup: void setClipToPadding(boolean)>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()>
null to <com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()> to <android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()> to <android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout i()> to <android.widget.FrameLayout: void <init>(android.content.Context)>
UI update?

<com.google.android.material.tabs.TabLayout$i: void j(android.graphics.Canvas)>
null to <com.google.android.material.tabs.TabLayout$i: void j(android.graphics.Canvas)>
UI update?

<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)>
null to <com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <n1.b: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.tabs.TabLayout$i: android.widget.FrameLayout k(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<n1.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<n1.b: void <clinit>()> to <n1.b: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$i: boolean l()>
null to <com.google.android.material.tabs.TabLayout$i: boolean l()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void q()>
null to <com.google.android.material.tabs.TabLayout$i: void q()>
<com.google.android.material.tabs.TabLayout$i: void q()> to <n1.b: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void q()> to <com.google.android.material.tabs.TabLayout$i: void h(boolean)>
<com.google.android.material.tabs.TabLayout$i: void q()> to <com.google.android.material.tabs.TabLayout$i: boolean l()>
<com.google.android.material.tabs.TabLayout$i: void q()> to <n1.b: void b(n1.a,android.view.View)>
<n1.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<n1.b: void <clinit>()> to <n1.b: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: void setClipChildren(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: void setClipToPadding(boolean)>
<com.google.android.material.tabs.TabLayout$i: void h(boolean)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<n1.b: void b(n1.a,android.view.View)> to <n1.b: void <clinit>()>
<n1.b: void b(n1.a,android.view.View)> to <android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>
<n1.b: void b(n1.a,android.view.View)> to <android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>
<n1.b: void b(n1.a,android.view.View)> to <android.view.View: android.view.ViewOverlay getOverlay()>
<n1.b: void b(n1.a,android.view.View)> to <android.view.ViewGroup: android.view.ViewOverlay getOverlay()>
<n1.b: void b(n1.a,android.view.View)> to <n1.a: android.widget.FrameLayout h()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void t0()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)> to <android.view.ViewGroup: void setClipToPadding(boolean)>
<n1.a: android.widget.FrameLayout h()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void drawableStateChanged()>
null to <com.google.android.material.tabs.TabLayout$i: void drawableStateChanged()>
UI update?

<com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
null to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
UI update?

<com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
null to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
UI update?

<com.google.android.material.tabs.TabLayout$i: com.google.android.material.tabs.TabLayout$g getTab()>
null to <com.google.android.material.tabs.TabLayout$i: com.google.android.material.tabs.TabLayout$g getTab()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void o()>
null to <com.google.android.material.tabs.TabLayout$i: void o()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.content.res.Resources: java.lang.String getString(int)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void n0(java.lang.CharSequence)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: boolean P(j0.c$a)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void Y(boolean)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void a0(java.lang.Object)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.tabs.TabLayout$g: int g()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: java.lang.String toString()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.StringBuilder: void <init>()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <n1.a: java.lang.CharSequence g()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.graphics.drawable.Drawable: boolean isVisible()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: boolean isSelected()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.View: java.lang.CharSequence getContentDescription()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$a: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout$i: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<j0.c: void n0(java.lang.CharSequence)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void n0(java.lang.CharSequence)> to <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<j0.c: void n0(java.lang.CharSequence)> to <android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>
<j0.c: boolean P(j0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: boolean P(j0.c$a)> to <android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>
<j0.c: void Y(boolean)> to <android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<j0.c: void a0(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void a0(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>
<n1.a: java.lang.CharSequence g()> to <n1.a$b: void <clinit>()>
<n1.a: java.lang.CharSequence g()> to <androidx.appcompat.widget.o0: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<n1.a: java.lang.CharSequence g()> to <android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<n1.a: java.lang.CharSequence g()> to <android.view.ContextThemeWrapper: java.lang.String getString(int,java.lang.Object[])>
<n1.a: java.lang.CharSequence g()> to <android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<n1.a: java.lang.CharSequence g()> to <h.d: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <android.app.Application: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<n1.a: java.lang.CharSequence g()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<n1.a: java.lang.CharSequence g()> to <n1.a: int j()>
<n1.a: java.lang.CharSequence g()> to <n1.a: boolean k()>
<n1.a: java.lang.CharSequence g()> to <android.graphics.drawable.Drawable: boolean isVisible()>
<n1.a: java.lang.CharSequence g()> to <java.lang.Integer: void <clinit>()>
<n1.a: java.lang.CharSequence g()> to <n1.a$b: int o(n1.a$b)>
<n1.a: java.lang.CharSequence g()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<n1.a: java.lang.CharSequence g()> to <n1.a$b: int p(n1.a$b)>
<n1.a: java.lang.CharSequence g()> to <n1.a$b: java.lang.CharSequence n(n1.a$b)>
<j0.c$a: void <clinit>()> to <j0.c$a: void <clinit>()>
<j0.c$a: void <clinit>()> to <j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)>
<j0.c$a: void <clinit>()> to <j0.c$a: void <init>(int,java.lang.CharSequence,java.lang.Class)>
<j0.c$a: void <clinit>()> to <j0.c$a: void <init>(int,java.lang.CharSequence)>
<j0.c$a: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$a: void <clinit>()> to <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <j0.c$c: void <init>(java.lang.Object)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
<j0.c$c: j0.c$c a(int,int,int,int,boolean,boolean)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean)>
<n1.a$b: void <clinit>()> to <n1.a$b: void <clinit>()>
<n1.a$b: void <clinit>()> to <n1.a$b$a: void <init>()>
<androidx.appcompat.widget.o0: java.lang.String getQuantityString(int,int,java.lang.Object[])> to <android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<androidx.appcompat.widget.o0: java.lang.String getQuantityString(int,int,java.lang.Object[])> to <androidx.appcompat.widget.o0: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<n1.a: int j()> to <n1.a$b: void <clinit>()>
<n1.a: int j()> to <n1.a: boolean k()>
<n1.a: int j()> to <n1.a$b: int q(n1.a$b)>
<n1.a: boolean k()> to <n1.a$b: void <clinit>()>
<n1.a: boolean k()> to <n1.a$b: int q(n1.a$b)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)> to <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>
<j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)> to <java.lang.Object: void <init>()>
<j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)> to <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <clinit>()>
<j0.c$a: void <init>(int,java.lang.CharSequence,java.lang.Class)> to <j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)>
<j0.c$a: void <init>(int,java.lang.CharSequence)> to <j0.c$a: void <init>(java.lang.Object,int,java.lang.CharSequence,j0.f,java.lang.Class)>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$c: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<n1.a$b$a: void <init>()> to <java.lang.Object: void <init>()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout$i: void onMeasure(int,int)>
null to <com.google.android.material.tabs.TabLayout$i: void onMeasure(int,int)>
UI update?

<com.google.android.material.tabs.TabLayout$i: boolean performClick()>
null to <com.google.android.material.tabs.TabLayout$i: boolean performClick()>
UI update?

<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
null to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
UI update?
------------------------------------------------------
com.google.android.material.tabs.TabLayout$f

<com.google.android.material.tabs.TabLayout$i: void v()>
null to <com.google.android.material.tabs.TabLayout$i: void v()>
UI update?

<com.google.android.material.tabs.TabLayout$f: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>
null to <com.google.android.material.tabs.TabLayout$f: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>
UI update?

<com.google.android.material.tabs.TabLayout$f: void a(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View,float)>
null to <com.google.android.material.tabs.TabLayout$f: void a(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View,float)>
UI update?

<com.google.android.material.tabs.TabLayout$f: void d()>
null to <com.google.android.material.tabs.TabLayout$f: void d()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
null to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)>
null to <com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f: void d()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$f: void b(int,int)>
null to <com.google.android.material.tabs.TabLayout$f: void b(int,int)>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f: void d()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$f: boolean c()>
null to <com.google.android.material.tabs.TabLayout$f: boolean c()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
UI update?

<com.google.android.material.tabs.TabLayout$f: void e(int,float)>
null to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout$f: void f(int)>
null to <com.google.android.material.tabs.TabLayout$f: void f(int)>
UI update?

<com.google.android.material.tabs.TabLayout$f: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.tabs.TabLayout$f: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.tabs.TabLayout$f: void onMeasure(int,int)>
null to <com.google.android.material.tabs.TabLayout$f: void onMeasure(int,int)>
UI update?
------------------------------------------------------
androidx.fragment.app.h

<com.google.android.material.tabs.TabLayout$f: void onRtlPropertiesChanged(int)>
null to <com.google.android.material.tabs.TabLayout$f: void onRtlPropertiesChanged(int)>
UI update?

<androidx.fragment.app.h: void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.n)>
null to <androidx.fragment.app.h: void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.n)>
UI update?

<androidx.fragment.app.h: void a(android.view.View)>
null to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
null to <androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.fragment.app.n: void <clinit>()>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.StringBuilder: void <init>()>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.fragment.app.h: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <androidx.fragment.app.n: androidx.fragment.app.Fragment z0(android.view.View)>
<androidx.fragment.app.n: androidx.fragment.app.Fragment z0(android.view.View)> to <android.view.ViewGroup: java.lang.Object getTag(int)>
<androidx.fragment.app.n: androidx.fragment.app.Fragment z0(android.view.View)> to <android.view.View: java.lang.Object getTag(int)>
UI update?

<androidx.fragment.app.h: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>
null to <androidx.fragment.app.h: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>
UI update?

<androidx.fragment.app.h: void dispatchDraw(android.graphics.Canvas)>
null to <androidx.fragment.app.h: void dispatchDraw(android.graphics.Canvas)>
UI update?

<androidx.fragment.app.h: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
null to <androidx.fragment.app.h: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
UI update?

<androidx.fragment.app.h: void endViewTransition(android.view.View)>
null to <androidx.fragment.app.h: void endViewTransition(android.view.View)>
<androidx.fragment.app.h: void endViewTransition(android.view.View)> to <java.util.ArrayList: boolean remove(java.lang.Object)>
<androidx.fragment.app.h: void endViewTransition(android.view.View)> to <android.widget.FrameLayout: void endViewTransition(android.view.View)>
UI update?

<androidx.fragment.app.h: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
null to <androidx.fragment.app.h: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
UI update?

<androidx.fragment.app.h: void removeAllViewsInLayout()>
null to <androidx.fragment.app.h: void removeAllViewsInLayout()>
UI update?

<androidx.fragment.app.h: void removeDetachedView(android.view.View,boolean)>
null to <androidx.fragment.app.h: void removeDetachedView(android.view.View,boolean)>
UI update?

<androidx.fragment.app.h: void removeView(android.view.View)>
null to <androidx.fragment.app.h: void removeView(android.view.View)>
<androidx.fragment.app.h: void removeView(android.view.View)> to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void removeView(android.view.View)> to <android.widget.FrameLayout: void removeView(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<androidx.fragment.app.h: void removeViewAt(int)>
null to <androidx.fragment.app.h: void removeViewAt(int)>
<androidx.fragment.app.h: void removeViewAt(int)> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.fragment.app.h: void removeViewAt(int)> to <android.widget.FrameLayout: void removeViewAt(int)>
<androidx.fragment.app.h: void removeViewAt(int)> to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<androidx.fragment.app.h: void removeViewInLayout(android.view.View)>
null to <androidx.fragment.app.h: void removeViewInLayout(android.view.View)>
<androidx.fragment.app.h: void removeViewInLayout(android.view.View)> to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void removeViewInLayout(android.view.View)> to <android.widget.FrameLayout: void removeViewInLayout(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<androidx.fragment.app.h: void removeViews(int,int)>
null to <androidx.fragment.app.h: void removeViews(int,int)>
UI update?

<androidx.fragment.app.h: void removeViewsInLayout(int,int)>
null to <androidx.fragment.app.h: void removeViewsInLayout(int,int)>
UI update?

<androidx.fragment.app.h: void setDrawDisappearingViewsLast(boolean)>
null to <androidx.fragment.app.h: void setDrawDisappearingViewsLast(boolean)>
UI update?

<androidx.fragment.app.h: void setLayoutTransition(android.animation.LayoutTransition)>
null to <androidx.fragment.app.h: void setLayoutTransition(android.animation.LayoutTransition)>
<androidx.fragment.app.h: void setLayoutTransition(android.animation.LayoutTransition)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.fragment.app.h: void setLayoutTransition(android.animation.LayoutTransition)> to <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<androidx.fragment.app.h: void setLayoutTransition(android.animation.LayoutTransition)> to <android.widget.FrameLayout: void setLayoutTransition(android.animation.LayoutTransition)>
UI update?

<androidx.fragment.app.h: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>
null to <androidx.fragment.app.h: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>
UI update?
------------------------------------------------------
androidx.core.widget.NestedScrollView

<androidx.fragment.app.h: void startViewTransition(android.view.View)>
null to <androidx.fragment.app.h: void startViewTransition(android.view.View)>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.widget.FrameLayout: void startViewTransition(android.view.View)>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <java.util.ArrayList: void <init>()>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.fragment.app.h: void startViewTransition(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
UI update?

<androidx.core.widget.NestedScrollView: void <clinit>()>
null to <androidx.core.widget.NestedScrollView: void <clinit>()>
UI update?

<androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean A(android.view.View,android.view.View)>
null to <androidx.core.widget.NestedScrollView: boolean A(android.view.View,android.view.View)>
UI update?

<androidx.core.widget.NestedScrollView: boolean B(android.view.View,int,int)>
null to <androidx.core.widget.NestedScrollView: boolean B(android.view.View,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)>
null to <androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)>
<androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionIndex()>
<androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)> to <android.view.VelocityTracker: void clear()>
<androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)> to <android.view.MotionEvent: int getPointerId(int)>
<androidx.core.widget.NestedScrollView: void D(android.view.MotionEvent)> to <android.view.MotionEvent: float getY(int)>
UI update?

<androidx.core.widget.NestedScrollView: void G()>
null to <androidx.core.widget.NestedScrollView: void G()>
<androidx.core.widget.NestedScrollView: void G()> to <android.view.VelocityTracker: void recycle()>
UI update?

<androidx.core.widget.NestedScrollView: boolean I(int,int,int)>
null to <androidx.core.widget.NestedScrollView: boolean I(int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void J(android.view.View)>
null to <androidx.core.widget.NestedScrollView: void J(android.view.View)>
UI update?

<androidx.core.widget.NestedScrollView: boolean K(android.graphics.Rect,boolean)>
null to <androidx.core.widget.NestedScrollView: boolean K(android.graphics.Rect,boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void M(int,int,int,boolean)>
null to <androidx.core.widget.NestedScrollView: void M(int,int,int,boolean)>
UI update?

<androidx.core.widget.NestedScrollView: boolean c()>
null to <androidx.core.widget.NestedScrollView: boolean c()>
UI update?

<androidx.core.widget.NestedScrollView: int e(int,int,int)>
null to <androidx.core.widget.NestedScrollView: int e(int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()>
null to <androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()>
UI update?

<androidx.core.widget.NestedScrollView: void k(int)>
null to <androidx.core.widget.NestedScrollView: void k(int)>
UI update?

<androidx.core.widget.NestedScrollView: void p()>
null to <androidx.core.widget.NestedScrollView: void p()>
<androidx.core.widget.NestedScrollView: void p()> to <android.widget.EdgeEffect: void <clinit>()>
<androidx.core.widget.NestedScrollView: void p()> to <android.widget.EdgeEffect: void <init>(android.content.Context)>
<androidx.core.widget.NestedScrollView: void p()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.core.widget.NestedScrollView: void p()> to <android.view.ViewGroup: int getOverScrollMode()>
UI update?

<androidx.core.widget.NestedScrollView: android.view.View r(boolean,int,int)>
null to <androidx.core.widget.NestedScrollView: android.view.View r(boolean,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean v(int,int)>
null to <androidx.core.widget.NestedScrollView: boolean v(int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void w()>
null to <androidx.core.widget.NestedScrollView: void w()>
UI update?

<androidx.core.widget.NestedScrollView: void x()>
null to <androidx.core.widget.NestedScrollView: void x()>
UI update?

<androidx.core.widget.NestedScrollView: void y()>
null to <androidx.core.widget.NestedScrollView: void y()>
<androidx.core.widget.NestedScrollView: void y()> to <android.view.VelocityTracker: android.view.VelocityTracker obtain()>
UI update?

<androidx.core.widget.NestedScrollView: boolean z(android.view.View)>
null to <androidx.core.widget.NestedScrollView: boolean z(android.view.View)>
UI update?

<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)>
null to <androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <android.view.ViewGroup: int getOverScrollMode()>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: int getScrollRange()>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: boolean u(int)>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()>
<androidx.core.widget.NestedScrollView: boolean E(int,int,int,int,int,int,int,int,boolean)> to <androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()>
<androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)> to <android.widget.FrameLayout: void scrollTo(int,int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ScrollView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ListView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ImageView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.TextView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.LinearLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: boolean u(int)> to <i0.l: boolean k(int)>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()> to <android.widget.FrameLayout: int computeVerticalScrollExtent()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.View: int getBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getScrollY()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()> to <android.widget.FrameLayout: int computeHorizontalScrollExtent()>
<androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()> to <android.widget.FrameLayout: int computeHorizontalScrollRange()>
<i0.l: boolean k(int)> to <i0.l: android.view.ViewParent h(int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean F(int)>
null to <androidx.core.widget.NestedScrollView: boolean F(int)>
UI update?

<androidx.core.widget.NestedScrollView: void L(int,int)>
null to <androidx.core.widget.NestedScrollView: void L(int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void N(int,int,int,boolean)>
null to <androidx.core.widget.NestedScrollView: void N(int,int,int,boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void O(int,int,boolean)>
null to <androidx.core.widget.NestedScrollView: void O(int,int,boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void addView(android.view.View)>
null to <androidx.core.widget.NestedScrollView: void addView(android.view.View)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View)> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: void addView(android.view.View)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View)> to <android.widget.FrameLayout: void addView(android.view.View)>
UI update?

<androidx.core.widget.NestedScrollView: void addView(android.view.View,int)>
null to <androidx.core.widget.NestedScrollView: void addView(android.view.View,int)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int)> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int)> to <android.widget.FrameLayout: void addView(android.view.View,int)>
UI update?

<androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
null to <androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
null to <androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> to <android.widget.FrameLayout: int getChildCount()>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> to <android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.core.widget.NestedScrollView: boolean b(int)>
null to <androidx.core.widget.NestedScrollView: boolean b(int)>
UI update?

<androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()>
null to <androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()>
<androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()> to <android.widget.FrameLayout: int computeHorizontalScrollExtent()>
UI update?

<androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()>
null to <androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()>
UI update?

<androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()>
null to <androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()>
<androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()> to <android.widget.FrameLayout: int computeHorizontalScrollRange()>
UI update?

<androidx.core.widget.NestedScrollView: void computeScroll()>
null to <androidx.core.widget.NestedScrollView: void computeScroll()>
UI update?

<androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()>
null to <androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()> to <android.widget.FrameLayout: int computeVerticalScrollExtent()>
UI update?

<androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()>
null to <androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()>
UI update?

<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()>
null to <androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.View: int getBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getScrollY()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()> to <android.widget.FrameLayout: int getChildCount()>
UI update?

<androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
null to <androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
UI update?

<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
null to <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)> to <i0.l: boolean b(float,float)>
<i0.l: boolean b(float,float)> to <i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)>
<i0.l: boolean b(float,float)> to <i0.l: android.view.ViewParent h(int)>
<i0.l: boolean b(float,float)> to <i0.l: boolean l()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.constraintlayout.motion.widget.j: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: void <init>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
UI update?

<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>
null to <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>
UI update?

<androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>
null to <androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>
UI update?

<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>
null to <androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void restoreToCount(int)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void rotate(float,float,float)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: void translate(float,float)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.graphics.Canvas: int save()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: void setSize(int,int)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.EdgeEffect: boolean isFinished()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: boolean getClipToPadding()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getPaddingLeft()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getPaddingRight()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <androidx.core.widget.NestedScrollView: int getScrollRange()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getWidth()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: int getScrollY()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <i0.w: void <clinit>()>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <java.lang.Math: int min(int,int)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <i0.w: void f0(android.view.View)>
<androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ScrollView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ListView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ImageView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.TextView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.LinearLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getChildCount()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>
null to <androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>
UI update?

<androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()>
null to <androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()>
UI update?

<androidx.core.widget.NestedScrollView: int getMaxScrollAmount()>
null to <androidx.core.widget.NestedScrollView: int getMaxScrollAmount()>
UI update?

<androidx.core.widget.NestedScrollView: int getNestedScrollAxes()>
null to <androidx.core.widget.NestedScrollView: int getNestedScrollAxes()>
UI update?

<androidx.core.widget.NestedScrollView: int getScrollRange()>
null to <androidx.core.widget.NestedScrollView: int getScrollRange()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <java.lang.Math: int max(int,int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ScrollView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ListView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.ImageView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.TextView: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.LinearLayout: int getHeight()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingBottom()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getPaddingTop()>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: android.view.View getChildAt(int)>
<androidx.core.widget.NestedScrollView: int getScrollRange()> to <android.widget.FrameLayout: int getChildCount()>
UI update?

<androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()>
null to <androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()>
UI update?

<androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()>
null to <androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()>
UI update?

<androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()>
null to <androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()>
UI update?

<androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)>
null to <androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
null to <androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean o(android.view.View,android.view.View,int,int)>
null to <androidx.core.widget.NestedScrollView: boolean o(android.view.View,android.view.View,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void onAttachedToWindow()>
null to <androidx.core.widget.NestedScrollView: void onAttachedToWindow()>
UI update?

<androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
null to <androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
UI update?

<androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)>
null to <androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void onMeasure(int,int)>
null to <androidx.core.widget.NestedScrollView: void onMeasure(int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
null to <androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
<androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)> to <i0.l: boolean b(float,float)>
<i0.l: boolean b(float,float)> to <i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)>
<i0.l: boolean b(float,float)> to <i0.l: android.view.ViewParent h(int)>
<i0.l: boolean b(float,float)> to <i0.l: boolean l()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.os.Build$VERSION: void <clinit>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.constraintlayout.motion.widget.j: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <java.lang.StringBuilder: void <init>()>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>
<i0.z: boolean b(android.view.ViewParent,android.view.View,float,float)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getChildCount()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: androidx.coordinatorlayout.widget.CoordinatorLayout$c f()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$f: boolean j(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ListView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.ImageView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.FrameLayout: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.View: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.TextView: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.widget.CompoundButton: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: int getVisibility()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)> to <androidx.coordinatorlayout.widget.CoordinatorLayout$c: boolean o(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
UI update?

<androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>
null to <androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>
<androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)> to <android.widget.FrameLayout: void scrollTo(int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
null to <androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
UI update?

<androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()>
null to <androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)>
null to <androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)>
null to <androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
null to <androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)> to <androidx.core.widget.NestedScrollView: boolean o(android.view.View,android.view.View,int,int)>
UI update?

<androidx.core.widget.NestedScrollView: boolean q(android.view.KeyEvent)>
null to <androidx.core.widget.NestedScrollView: boolean q(android.view.KeyEvent)>
UI update?

<androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)>
null to <androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)>
UI update?

<androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
null to <androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)>
null to <androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)> to <androidx.core.widget.NestedScrollView: void G()>
<androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>
<androidx.core.widget.NestedScrollView: void G()> to <android.view.VelocityTracker: void recycle()>
UI update?

<androidx.core.widget.NestedScrollView: void requestLayout()>
null to <androidx.core.widget.NestedScrollView: void requestLayout()>
<androidx.core.widget.NestedScrollView: void requestLayout()> to <android.widget.FrameLayout: void requestLayout()>
UI update?

<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>
null to <androidx.core.widget.NestedScrollView: void scrollTo(int,int)>
UI update?

<androidx.core.widget.NestedScrollView: void setFillViewport(boolean)>
null to <androidx.core.widget.NestedScrollView: void setFillViewport(boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>
null to <androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>
UI update?

<androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$b)>
null to <androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$b)>
UI update?

<androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)>
null to <androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)>
UI update?

<androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()>
null to <androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()>
UI update?

<androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)>
null to <androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)>
UI update?

<androidx.core.widget.NestedScrollView: void stopNestedScroll()>
null to <androidx.core.widget.NestedScrollView: void stopNestedScroll()>
UI update?

<androidx.core.widget.NestedScrollView: boolean t(int)>
null to <androidx.core.widget.NestedScrollView: boolean t(int)>
UI update?
------------------------------------------------------
com.google.android.material.tabs.TabLayout

<androidx.core.widget.NestedScrollView: boolean u(int)>
null to <androidx.core.widget.NestedScrollView: boolean u(int)>
<androidx.core.widget.NestedScrollView: boolean u(int)> to <i0.l: boolean k(int)>
<i0.l: boolean k(int)> to <i0.l: android.view.ViewParent h(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void <clinit>()>
null to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.tabs.TabLayout: void D(int)>
null to <com.google.android.material.tabs.TabLayout: void D(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void K(androidx.viewpager.widget.b,boolean,boolean)>
null to <com.google.android.material.tabs.TabLayout: void K(androidx.viewpager.widget.b,boolean,boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void L()>
null to <com.google.android.material.tabs.TabLayout: void L()>
UI update?

<com.google.android.material.tabs.TabLayout: void M(android.widget.LinearLayout$LayoutParams)>
null to <com.google.android.material.tabs.TabLayout: void M(android.widget.LinearLayout$LayoutParams)>
UI update?

<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
null to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
UI update?

<com.google.android.material.tabs.TabLayout: int b(com.google.android.material.tabs.TabLayout)>
null to <com.google.android.material.tabs.TabLayout: int b(com.google.android.material.tabs.TabLayout)>
UI update?

<com.google.android.material.tabs.TabLayout: int getDefaultHeight()>
null to <com.google.android.material.tabs.TabLayout: int getDefaultHeight()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabMinWidth()>
null to <com.google.android.material.tabs.TabLayout: int getTabMinWidth()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabScrollRange()>
null to <com.google.android.material.tabs.TabLayout: int getTabScrollRange()>
UI update?

<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)>
null to <com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)>
<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)> to <android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)> to <com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()>
<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)> to <com.google.android.material.tabs.TabLayout$g: int g()>
<com.google.android.material.tabs.TabLayout: void h(com.google.android.material.tabs.TabLayout$g)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()> to <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()> to <com.google.android.material.tabs.TabLayout: void M(android.widget.LinearLayout$LayoutParams)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void j(int)>
null to <com.google.android.material.tabs.TabLayout: void j(int)>
<com.google.android.material.tabs.TabLayout: void j(int)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.animation.ValueAnimator: void setIntValues(int[])>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.animation.ObjectAnimator: void setIntValues(int[])>
<com.google.android.material.tabs.TabLayout: void j(int)> to <com.google.android.material.tabs.TabLayout$f: void b(int,int)>
<com.google.android.material.tabs.TabLayout: void j(int)> to <com.google.android.material.tabs.TabLayout$f: boolean c()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <com.google.android.material.tabs.TabLayout: void H(int,float,boolean)>
<com.google.android.material.tabs.TabLayout: void j(int)> to <com.google.android.material.tabs.TabLayout: void v()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.widget.FrameLayout: int getScrollX()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <android.view.ViewGroup: android.os.IBinder getWindowToken()>
<com.google.android.material.tabs.TabLayout: void j(int)> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void b(int,int)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: boolean c()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: void H(int,float,boolean)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<com.google.android.material.tabs.TabLayout: void v()> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void v()> to <com.google.android.material.tabs.TabLayout$a: void <init>(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void <init>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.animation.ValueAnimator: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <com.google.android.material.tabs.TabLayout$f: void d()>
<com.google.android.material.tabs.TabLayout$f: void h(boolean,int,int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout$a: void <init>(com.google.android.material.tabs.TabLayout)> to <java.lang.Object: void <init>()>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout$f$b: void <init>(com.google.android.material.tabs.TabLayout$f,int)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<com.google.android.material.tabs.TabLayout$f$a: void <init>(com.google.android.material.tabs.TabLayout$f,android.view.View,android.view.View)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void d()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void d()> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void d(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout: void k(int)>
null to <com.google.android.material.tabs.TabLayout: void k(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void l()>
null to <com.google.android.material.tabs.TabLayout: void l()>
UI update?

<com.google.android.material.tabs.TabLayout: int m(int,float)>
null to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)>
null to <com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)>
<com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)> to <com.google.android.material.tabs.TabLayout$g: void q(int)>
<com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)> to <java.util.ArrayList: java.lang.Object get(int)>
<com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)> to <java.util.ArrayList: int size()>
<com.google.android.material.tabs.TabLayout: void n(com.google.android.material.tabs.TabLayout$g,int)> to <java.util.ArrayList: void add(int,java.lang.Object)>
UI update?

<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList o(int,int)>
null to <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList o(int,int)>
UI update?

<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()>
null to <com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()>
<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()> to <android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams p()> to <com.google.android.material.tabs.TabLayout: void M(android.widget.LinearLayout$LayoutParams)>
UI update?

<com.google.android.material.tabs.TabLayout: void s(com.google.android.material.tabs.TabLayout$g)>
null to <com.google.android.material.tabs.TabLayout: void s(com.google.android.material.tabs.TabLayout$g)>
<com.google.android.material.tabs.TabLayout: void s(com.google.android.material.tabs.TabLayout$g)> to <java.util.ArrayList: int size()>
<com.google.android.material.tabs.TabLayout: void s(com.google.android.material.tabs.TabLayout$g)> to <com.google.android.material.tabs.TabLayout$j: void c(com.google.android.material.tabs.TabLayout$g)>
<com.google.android.material.tabs.TabLayout: void s(com.google.android.material.tabs.TabLayout$g)> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
UI update?

<com.google.android.material.tabs.TabLayout: void u(com.google.android.material.tabs.TabLayout$g)>
null to <com.google.android.material.tabs.TabLayout: void u(com.google.android.material.tabs.TabLayout$g)>
<com.google.android.material.tabs.TabLayout: void u(com.google.android.material.tabs.TabLayout$g)> to <java.util.ArrayList: int size()>
<com.google.android.material.tabs.TabLayout: void u(com.google.android.material.tabs.TabLayout$g)> to <com.google.android.material.tabs.TabLayout$j: void a(com.google.android.material.tabs.TabLayout$g)>
<com.google.android.material.tabs.TabLayout: void u(com.google.android.material.tabs.TabLayout$g)> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void v()>
null to <com.google.android.material.tabs.TabLayout: void v()>
<com.google.android.material.tabs.TabLayout: void v()> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void v()> to <com.google.android.material.tabs.TabLayout$a: void <init>(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.tabs.TabLayout: void v()> to <android.animation.ValueAnimator: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout$a: void <init>(com.google.android.material.tabs.TabLayout)> to <java.lang.Object: void <init>()>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout: boolean A(com.google.android.material.tabs.TabLayout$g)>
null to <com.google.android.material.tabs.TabLayout: boolean A(com.google.android.material.tabs.TabLayout$g)>
UI update?

<com.google.android.material.tabs.TabLayout: void B()>
null to <com.google.android.material.tabs.TabLayout: void B()>
UI update?

<com.google.android.material.tabs.TabLayout: void C(com.google.android.material.tabs.TabLayout$c)>
null to <com.google.android.material.tabs.TabLayout: void C(com.google.android.material.tabs.TabLayout$c)>
UI update?

<com.google.android.material.tabs.TabLayout: void G(androidx.viewpager.widget.a,boolean)>
null to <com.google.android.material.tabs.TabLayout: void G(androidx.viewpager.widget.a,boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void H(int,float,boolean)>
null to <com.google.android.material.tabs.TabLayout: void H(int,float,boolean)>
<com.google.android.material.tabs.TabLayout: void H(int,float,boolean)> to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
null to <com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <java.lang.Math: int round(float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout: int m(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <com.google.android.material.tabs.TabLayout$f: void e(int,float)>
<com.google.android.material.tabs.TabLayout: void I(int,float,boolean,boolean)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setActivated(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: int m(int,float)> to <i0.w: int C(android.view.View)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: boolean isRunning()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.tabs.TabLayout$f: void e(int,float)> to <android.animation.ObjectAnimator: void cancel()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<androidx.appcompat.widget.q0$d: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <androidx.appcompat.widget.q0$d: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.ImageView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.TextView: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.widget.LinearLayout: void setSelected(boolean)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.ViewGroup: void sendAccessibilityEvent(int)>
<com.google.android.material.tabs.TabLayout$i: void setSelected(boolean)> to <android.view.View: boolean isSelected()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int C(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int C(android.view.View)> to <android.widget.HorizontalScrollView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.widget.TextView: int getLayoutDirection()>
<i0.w: int C(android.view.View)> to <android.view.View: int getLayoutDirection()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ListView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.HorizontalScrollView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.FrameLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.Spinner: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.ViewGroup: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.TextView: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.widget.LinearLayout: int getWidth()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void <clinit>()>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.b a(com.google.android.material.tabs.TabLayout)>
<com.google.android.material.tabs.TabLayout$f: void g(android.view.View,android.view.View,float)> to <i0.w: void f0(android.view.View)>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float e(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.a: float f(float)>
<com.google.android.material.tabs.a: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: void <clinit>()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.material.tabs.b: void c(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)> to <m1.a: int c(int,int,float)>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.TabLayout: boolean x()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.tabs.b: android.graphics.RectF a(com.google.android.material.tabs.TabLayout,android.view.View)> to <com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)>
<com.google.android.material.tabs.a: float e(float)> to <java.lang.Math: double cos(double)>
<com.google.android.material.tabs.a: float f(float)> to <java.lang.Math: double sin(double)>
<m1.a: int c(int,int,float)> to <java.lang.Math: int round(float)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.graphics.RectF: void <init>(float,float,float,float)>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getTop()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getRight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <android.widget.LinearLayout: android.content.Context getContext()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentHeight()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.tabs.TabLayout$i: int getContentWidth()>
<com.google.android.material.tabs.b: android.graphics.RectF b(com.google.android.material.tabs.TabLayout$i,int)> to <com.google.android.material.internal.l: float b(android.content.Context,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getBottom()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getTop()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentHeight()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getRight()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getLeft()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.View: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <android.view.ViewGroup: int getVisibility()>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.tabs.TabLayout$i: int getContentWidth()> to <java.lang.Math: int max(int,int)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <h.d: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.app.Application: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.google.android.material.internal.l: float b(android.content.Context,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<com.google.android.material.tabs.TabLayout: void J(androidx.viewpager.widget.b,boolean)>
null to <com.google.android.material.tabs.TabLayout: void J(androidx.viewpager.widget.b,boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void N(boolean)>
null to <com.google.android.material.tabs.TabLayout: void N(boolean)>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <androidx.constraintlayout.motion.widget.j: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <androidx.core.widget.NestedScrollView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <androidx.recyclerview.widget.RecyclerView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.RelativeLayout: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.ScrollView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.ListView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.HorizontalScrollView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.FrameLayout: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.AbsSpinner: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.view.View: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.AbsListView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.TextView: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.view.ViewGroup: void requestLayout()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.FrameLayout: void setMinimumWidth(int)>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <n.a: void setMinimumWidth(int)>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.view.View: void setMinimumWidth(int)>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <com.google.android.material.tabs.TabLayout: void M(android.widget.LinearLayout$LayoutParams)>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <com.google.android.material.tabs.TabLayout: int getTabMinWidth()>
<com.google.android.material.tabs.TabLayout: void N(boolean)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<androidx.constraintlayout.motion.widget.j: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()>
<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()> to <android.widget.HorizontalScrollView: void requestLayout()>
<androidx.core.widget.NestedScrollView: void requestLayout()> to <android.widget.FrameLayout: void requestLayout()>
<androidx.recyclerview.widget.RecyclerView: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <androidx.constraintlayout.widget.ConstraintLayout: void s()>
<androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()> to <android.view.ViewGroup: void requestLayout()>
<n.a: void setMinimumWidth(int)> to <android.widget.FrameLayout: void setMinimumWidth(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void c(com.google.android.material.tabs.TabLayout$c)>
null to <com.google.android.material.tabs.TabLayout: void c(com.google.android.material.tabs.TabLayout$c)>
UI update?

<com.google.android.material.tabs.TabLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <com.google.android.material.tabs.TabLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<com.google.android.material.tabs.TabLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <com.google.android.material.tabs.TabLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()>
null to <com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()>
<com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()> to <com.google.android.material.tabs.TabLayout$g: int g()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabCount()>
null to <com.google.android.material.tabs.TabLayout: int getTabCount()>
<com.google.android.material.tabs.TabLayout: int getTabCount()> to <java.util.ArrayList: int size()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabGravity()>
null to <com.google.android.material.tabs.TabLayout: int getTabGravity()>
UI update?

<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabIconTint()>
null to <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabIconTint()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabIndicatorAnimationMode()>
null to <com.google.android.material.tabs.TabLayout: int getTabIndicatorAnimationMode()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabIndicatorGravity()>
null to <com.google.android.material.tabs.TabLayout: int getTabIndicatorGravity()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabMaxWidth()>
null to <com.google.android.material.tabs.TabLayout: int getTabMaxWidth()>
UI update?

<com.google.android.material.tabs.TabLayout: int getTabMode()>
null to <com.google.android.material.tabs.TabLayout: int getTabMode()>
UI update?

<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabRippleColor()>
null to <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabRippleColor()>
UI update?

<com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable getTabSelectedIndicator()>
null to <com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable getTabSelectedIndicator()>
UI update?

<com.google.android.material.tabs.TabLayout: void onAttachedToWindow()>
null to <com.google.android.material.tabs.TabLayout: void onAttachedToWindow()>
UI update?

<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabTextColors()>
null to <com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabTextColors()>
UI update?

<com.google.android.material.tabs.TabLayout: void onDetachedFromWindow()>
null to <com.google.android.material.tabs.TabLayout: void onDetachedFromWindow()>
UI update?

<com.google.android.material.tabs.TabLayout: void onDraw(android.graphics.Canvas)>
null to <com.google.android.material.tabs.TabLayout: void onDraw(android.graphics.Canvas)>
UI update?

<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void Z(java.lang.Object)>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.tabs.TabLayout: int getTabCount()>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.HorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.tabs.TabLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$b: j0.c$b a(int,int,boolean,int)>
<j0.c: void Z(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void Z(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>
<com.google.android.material.tabs.TabLayout: int getTabCount()> to <java.util.ArrayList: int size()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <j0.c$b: void <init>(java.lang.Object)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$b: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout: void onMeasure(int,int)>
null to <com.google.android.material.tabs.TabLayout: void onMeasure(int,int)>
UI update?

<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()>
null to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()> to <com.google.android.material.tabs.TabLayout$g: void <init>()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()> to <h0.g: java.lang.Object b()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()> to <h0.f: java.lang.Object b()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g q()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <com.google.android.material.tabs.TabLayout: void <clinit>()>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <h0.g: void <init>(int)>
<com.google.android.material.tabs.TabLayout: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.tabs.TabLayout$g: void <init>()> to <java.lang.Object: void <init>()>
<h0.g: java.lang.Object b()> to <h0.f: java.lang.Object b()>
<h0.g: void <init>(int)> to <h0.f: void <init>(int)>
<h0.g: void <init>(int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h0.f: void <init>(int)> to <java.lang.Object: void <init>()>
<h0.f: void <init>(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)>
null to <com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void setInlineLabelResource(int)>
null to <com.google.android.material.tabs.TabLayout: void setInlineLabelResource(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$c)>
null to <com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$c)>
UI update?

<com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$d)>
null to <com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$d)>
UI update?

<com.google.android.material.tabs.TabLayout: void setScrollAnimatorListener(android.animation.Animator$AnimatorListener)>
null to <com.google.android.material.tabs.TabLayout: void setScrollAnimatorListener(android.animation.Animator$AnimatorListener)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(int)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorColor(int)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorColor(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorHeight(int)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorHeight(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)>
null to <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabGravity(int)>
null to <com.google.android.material.tabs.TabLayout: void setTabGravity(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)>
null to <com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabIconTintResource(int)>
null to <com.google.android.material.tabs.TabLayout: void setTabIconTintResource(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabIndicatorAnimationMode(int)>
null to <com.google.android.material.tabs.TabLayout: void setTabIndicatorAnimationMode(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)>
null to <com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabMode(int)>
null to <com.google.android.material.tabs.TabLayout: void setTabMode(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)>
null to <com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabRippleColorResource(int)>
null to <com.google.android.material.tabs.TabLayout: void setTabRippleColorResource(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)>
null to <com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.tabs.TabLayout: void setTabsFromPagerAdapter(androidx.viewpager.widget.a)>
null to <com.google.android.material.tabs.TabLayout: void setTabsFromPagerAdapter(androidx.viewpager.widget.a)>
UI update?

<com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)>
null to <com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)>
UI update?

<com.google.android.material.tabs.TabLayout: void setUnboundedRippleResource(int)>
null to <com.google.android.material.tabs.TabLayout: void setUnboundedRippleResource(int)>
UI update?

<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.b)>
null to <com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.b)>
UI update?

<com.google.android.material.tabs.TabLayout: boolean shouldDelayChildPressedState()>
null to <com.google.android.material.tabs.TabLayout: boolean shouldDelayChildPressedState()>
UI update?

<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g w(int)>
null to <com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g w(int)>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g w(int)> to <com.google.android.material.tabs.TabLayout: int getTabCount()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$g w(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<com.google.android.material.tabs.TabLayout: int getTabCount()> to <java.util.ArrayList: int size()>
UI update?

<com.google.android.material.tabs.TabLayout: boolean x()>
null to <com.google.android.material.tabs.TabLayout: boolean x()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ActivityChooserView$InnerLayout

<com.google.android.material.tabs.TabLayout: void z()>
null to <com.google.android.material.tabs.TabLayout: void z()>
UI update?

<androidx.appcompat.widget.ActivityChooserView$InnerLayout: void <clinit>()>
null to <androidx.appcompat.widget.ActivityChooserView$InnerLayout: void <clinit>()>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyCompatRadioButton

<androidx.appcompat.widget.ActivityChooserView$InnerLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActivityChooserView$InnerLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.MyCompatRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyCompatRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
com.google.android.material.chip.ChipGroup

<com.google.android.material.chip.ChipGroup: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.chip.ChipGroup: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.chip.ChipGroup: void <clinit>()>
null to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.chip.ChipGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.chip.ChipGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$b e(com.google.android.material.chip.ChipGroup)>
null to <com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$b e(com.google.android.material.chip.ChipGroup)>
UI update?

<com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
null to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
UI update?

<com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
null to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
UI update?

<com.google.android.material.chip.ChipGroup: int getChipCount()>
null to <com.google.android.material.chip.ChipGroup: int getChipCount()>
<com.google.android.material.chip.ChipGroup: int getChipCount()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: int getChipCount()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
null to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.a: boolean o1()>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.ArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Stack: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.AbstractCollection: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <z2.t: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Vector: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
null to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
UI update?

<com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
null to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
UI update?

<com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
null to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
UI update?

<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
null to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
UI update?

<com.google.android.material.chip.ChipGroup: void q(int,boolean)>
null to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
UI update?

<com.google.android.material.chip.ChipGroup: void r(int,boolean)>
null to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.a: boolean o1()>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.ArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Stack: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.AbstractCollection: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <z2.t: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Vector: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
null to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
UI update?

<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.chip.ChipGroup: void r(int,boolean)> to <com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.a: boolean o1()>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: void setChecked(boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.ArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Stack: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.AbstractCollection: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <z2.t: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <java.util.Vector: boolean isEmpty()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean f(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean g(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: int j(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: boolean k(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipGroup$b: void onCheckedChanged(android.widget.CompoundButton,boolean)> to <com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <com.google.android.material.chip.ChipGroup: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.material.chip.ChipGroup: void h(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void r(int,boolean)>
<com.google.android.material.chip.ChipGroup: void i(com.google.android.material.chip.ChipGroup,int,boolean)> to <com.google.android.material.chip.ChipGroup: void q(int,boolean)>
<com.google.android.material.chip.ChipGroup: void l(com.google.android.material.chip.ChipGroup,int)> to <com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.ChipGroup: boolean c()>
null to <com.google.android.material.chip.ChipGroup: boolean c()>
<com.google.android.material.chip.ChipGroup: boolean c()> to <com.google.android.material.internal.c: boolean c()>
UI update?

<com.google.android.material.chip.ChipGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.chip.ChipGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.chip.ChipGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.chip.ChipGroup: int getCheckedChipId()>
null to <com.google.android.material.chip.ChipGroup: int getCheckedChipId()>
UI update?

<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
null to <com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.View: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getId()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.widget.CheckBox: boolean isChecked()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()>
null to <com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()>
UI update?

<com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()>
null to <com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()>
UI update?

<com.google.android.material.chip.ChipGroup: void m(int)>
null to <com.google.android.material.chip.ChipGroup: void m(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void n()>
null to <com.google.android.material.chip.ChipGroup: void n()>
UI update?

<com.google.android.material.chip.ChipGroup: int o(android.view.View)>
null to <com.google.android.material.chip.ChipGroup: int o(android.view.View)>
<com.google.android.material.chip.ChipGroup: int o(android.view.View)> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: int o(android.view.View)> to <android.view.ViewGroup: android.view.View getChildAt(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void onFinishInflate()>
null to <com.google.android.material.chip.ChipGroup: void onFinishInflate()>
UI update?

<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void Z(java.lang.Object)>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.ChipGroup: boolean p()>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.internal.c: int getRowCount()>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.ChipGroup: int getChipCount()>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.chip.ChipGroup: boolean c()>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.chip.ChipGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$b: j0.c$b a(int,int,boolean,int)>
<j0.c: void Z(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void Z(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>
<com.google.android.material.chip.ChipGroup: int getChipCount()> to <android.view.ViewGroup: int getChildCount()>
<com.google.android.material.chip.ChipGroup: int getChipCount()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.material.chip.ChipGroup: boolean c()> to <com.google.android.material.internal.c: boolean c()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <j0.c$b: void <init>(java.lang.Object)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$b: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.chip.ChipGroup: boolean p()>
null to <com.google.android.material.chip.ChipGroup: boolean p()>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacing(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacing(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)>
null to <com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>
null to <com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.chip.ChipGroup: void setFlexWrap(int)>
null to <com.google.android.material.chip.ChipGroup: void setFlexWrap(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$d)>
null to <com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$d)>
UI update?

<com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
null to <com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
UI update?

<com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)>
null to <com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)>
UI update?

<com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)>
null to <com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)>
null to <com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setSingleLine(int)>
null to <com.google.android.material.chip.ChipGroup: void setSingleLine(int)>
UI update?

<com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)>
null to <com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)>
UI update?
------------------------------------------------------

<com.google.android.material.chip.ChipGroup: void setSingleSelection(int)>
null to <com.google.android.material.chip.ChipGroup: void setSingleSelection(int)>
UI update?
com.simplemobiletools.commons.views.FingerprintTab

<com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)>
null to <com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.FingerprintTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)>
null to <com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.Intent: void <clinit>()>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.app.Activity: void startActivity(android.content.Intent)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.Intent: void <init>(java.lang.String)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)>
null to <com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.Intent: void <clinit>()>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.app.Activity: void startActivity(android.content.Intent)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.content.Intent: void <init>(java.lang.String)>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <android.widget.RelativeLayout: android.content.Context getContext()>
<com.simplemobiletools.commons.views.FingerprintTab: void c(com.simplemobiletools.commons.views.FingerprintTab,android.view.View)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: android.view.View b(int)>
null to <com.simplemobiletools.commons.views.FingerprintTab: android.view.View b(int)>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: v2.b getHashListener()>
null to <com.simplemobiletools.commons.views.FingerprintTab: v2.b getHashListener()>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: void onDetachedFromWindow()>
null to <com.simplemobiletools.commons.views.FingerprintTab: void onDetachedFromWindow()>
UI update?

<com.simplemobiletools.commons.views.FingerprintTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.FingerprintTab: void onFinishInflate()>
UI update?
------------------------------------------------------
androidx.constraintlayout.widget.Guideline

<com.simplemobiletools.commons.views.FingerprintTab: void setHashListener(v2.b)>
null to <com.simplemobiletools.commons.views.FingerprintTab: void setHashListener(v2.b)>
UI update?

<androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context)>
null to <androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context)> to <android.view.View: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context)> to <android.view.View: void setVisibility(int)>
UI update?

<androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.constraintlayout.widget.Guideline: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.constraintlayout.widget.Guideline: void draw(android.graphics.Canvas)>
null to <androidx.constraintlayout.widget.Guideline: void draw(android.graphics.Canvas)>
UI update?

<androidx.constraintlayout.widget.Guideline: void onMeasure(int,int)>
null to <androidx.constraintlayout.widget.Guideline: void onMeasure(int,int)>
UI update?

<androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)>
null to <androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)>
UI update?

<androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)>
null to <androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)>
UI update?

<androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)>
null to <androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)>
UI update?

<androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)>
null to <androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)>
UI update?
------------------------------------------------------
q1.b

<androidx.constraintlayout.widget.Guideline: void setVisibility(int)>
null to <androidx.constraintlayout.widget.Guideline: void setVisibility(int)>
UI update?

<q1.b: void a()>
null to <q1.b: void a()>
UI update?

<q1.b: void b()>
null to <q1.b: void b()>
UI update?

<q1.b: void draw(android.graphics.Canvas)>
null to <q1.b: void draw(android.graphics.Canvas)>
<q1.b: void draw(android.graphics.Canvas)> to <android.widget.FrameLayout: void draw(android.graphics.Canvas)>
UI update?

<q1.b: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()>
null to <q1.b: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()>
UI update?

<q1.b: int getCircularRevealScrimColor()>
null to <q1.b: int getCircularRevealScrimColor()>
UI update?

<q1.b: q1.d$e getRevealInfo()>
null to <q1.b: q1.d$e getRevealInfo()>
<q1.b: q1.d$e getRevealInfo()> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<q1.b: boolean isOpaque()>
null to <q1.b: boolean isOpaque()>
UI update?

<q1.b: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
null to <q1.b: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
UI update?

<q1.b: void setCircularRevealScrimColor(int)>
null to <q1.b: void setCircularRevealScrimColor(int)>
<q1.b: void setCircularRevealScrimColor(int)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ButtonBarLayout

<q1.b: void setRevealInfo(q1.d$e)>
null to <q1.b: void setRevealInfo(q1.d$e)>
<q1.b: void setRevealInfo(q1.d$e)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ButtonBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: int a(int)>
null to <androidx.appcompat.widget.ButtonBarLayout: int a(int)>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: boolean b()>
null to <androidx.appcompat.widget.ButtonBarLayout: boolean b()>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)>
null to <androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
null to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
UI update?

<androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)>
UI update?
------------------------------------------------------
androidx.appcompat.view.menu.ExpandedMenuView

<androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)>
null to <androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: void <clinit>()>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void <clinit>()>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: void b(androidx.appcompat.view.menu.e)>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void b(androidx.appcompat.view.menu.e)>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()>
null to <androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()>
UI update?

<androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()>
UI update?
------------------------------------------------------
com.google.android.material.snackbar.SnackbarContentLayout

<androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
null to <androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.snackbar.SnackbarContentLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: void a(android.view.View,int,int)>
null to <com.google.android.material.snackbar.SnackbarContentLayout: void a(android.view.View,int,int)>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: boolean b(int,int,int)>
null to <com.google.android.material.snackbar.SnackbarContentLayout: boolean b(int,int,int)>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()>
null to <com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()>
null to <com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: void onFinishInflate()>
null to <com.google.android.material.snackbar.SnackbarContentLayout: void onFinishInflate()>
UI update?

<com.google.android.material.snackbar.SnackbarContentLayout: void onMeasure(int,int)>
null to <com.google.android.material.snackbar.SnackbarContentLayout: void onMeasure(int,int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.SearchView

<com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)>
null to <com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)>
UI update?

<androidx.appcompat.widget.SearchView: void <clinit>()>
null to <androidx.appcompat.widget.SearchView: void <clinit>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <androidx.appcompat.widget.SearchView$n: void <init>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <androidx.appcompat.widget.SearchView: void <clinit>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <androidx.appcompat.widget.SearchView$n: void d()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView$n: void d()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void d()> to <java.lang.UnsupportedClassVersionError: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void <init>(android.content.Context)>
null to <androidx.appcompat.widget.SearchView: void <init>(android.content.Context)>
UI update?

<androidx.appcompat.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>
null to <androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setData(android.net.Uri)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent addFlags(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: android.content.Intent D(android.database.Cursor,int,java.lang.String)>
null to <androidx.appcompat.widget.SearchView: android.content.Intent D(android.database.Cursor,int,java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)>
null to <androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.ComponentName: java.lang.String flattenToShortString()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void <init>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(android.content.Intent)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceMaxResults()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceLanguageId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoicePromptTextId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceLanguageModeId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.PendingIntent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
UI update?

<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)>
null to <androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.ComponentName: java.lang.String flattenToShortString()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(android.content.Intent)>
UI update?

<androidx.appcompat.widget.SearchView: void G()>
null to <androidx.appcompat.widget.SearchView: void G()>
<androidx.appcompat.widget.SearchView: void G()> to <android.widget.AutoCompleteTextView: void dismissDropDown()>
UI update?

<androidx.appcompat.widget.SearchView: void I(android.view.View,android.graphics.Rect)>
null to <androidx.appcompat.widget.SearchView: void I(android.view.View,android.graphics.Rect)>
UI update?

<androidx.appcompat.widget.SearchView: java.lang.CharSequence J(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView: java.lang.CharSequence J(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.SearchView: boolean K()>
null to <androidx.appcompat.widget.SearchView: boolean K()>
UI update?

<androidx.appcompat.widget.SearchView: boolean M(android.content.Context)>
null to <androidx.appcompat.widget.SearchView: boolean M(android.content.Context)>
UI update?

<androidx.appcompat.widget.SearchView: boolean N()>
null to <androidx.appcompat.widget.SearchView: boolean N()>
<androidx.appcompat.widget.SearchView: boolean N()> to <androidx.appcompat.widget.SearchView: boolean L()>
UI update?

<androidx.appcompat.widget.SearchView: void O(android.content.Intent)>
null to <androidx.appcompat.widget.SearchView: void O(android.content.Intent)>
UI update?

<androidx.appcompat.widget.SearchView: boolean Q(int,int,java.lang.String)>
null to <androidx.appcompat.widget.SearchView: boolean Q(int,int,java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void b0()>
null to <androidx.appcompat.widget.SearchView: void b0()>
UI update?

<androidx.appcompat.widget.SearchView: void c0(int)>
null to <androidx.appcompat.widget.SearchView: void c0(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.room.e$c: boolean moveToPosition(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <android.database.AbstractCursor: boolean moveToPosition(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <l0.a: android.database.Cursor c()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.String: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <g0.c: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setSelection(int)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.room.e$c: boolean moveToPosition(int)> to <android.database.AbstractCursor: boolean moveToPosition(int)>
<androidx.room.e$c: boolean moveToPosition(int)> to <androidx.room.e$c: boolean moveToPosition(int)>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <androidx.room.e$c: int getColumnIndex(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <androidx.room.e$c: java.lang.String getString(int)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.database.MatrixCursor: java.lang.String getString(int)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <androidx.room.e$c: int getColumnIndex(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.room.e$c: java.lang.String getString(int)> to <android.database.MatrixCursor: java.lang.String getString(int)>
<androidx.room.e$c: java.lang.String getString(int)> to <android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<androidx.room.e$c: java.lang.String getString(int)> to <androidx.room.e$c: java.lang.String getString(int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void e0()>
null to <androidx.appcompat.widget.SearchView: void e0()>
<androidx.appcompat.widget.SearchView: void e0()> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void e0()> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <f.c: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <a0.e: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <a0.d: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void e0()> to <android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<androidx.appcompat.widget.SearchView: void e0()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
<androidx.appcompat.widget.SearchView: void e0()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void e0()> to <com.google.android.material.internal.m: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void e0()> to <android.widget.ImageView: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void e0()> to <android.widget.ImageButton: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void e0()> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<androidx.appcompat.widget.SearchView: void e0()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.appcompat.widget.g0$a: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<f.c: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean f(int[])>
<a0.d: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <f.c: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <f.c: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<a0.d: boolean f(int[])> to <a0.d: boolean c()>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<a0.d: boolean f(int[])> to <a0.e: boolean c()>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
<a0.e: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
UI update?

<androidx.appcompat.widget.SearchView: void g0()>
null to <androidx.appcompat.widget.SearchView: void g0()>
UI update?

<androidx.appcompat.widget.SearchView: int getPreferredHeight()>
null to <androidx.appcompat.widget.SearchView: int getPreferredHeight()>
UI update?

<androidx.appcompat.widget.SearchView: int getPreferredWidth()>
null to <androidx.appcompat.widget.SearchView: int getPreferredWidth()>
UI update?

<androidx.appcompat.widget.SearchView: void h0()>
null to <androidx.appcompat.widget.SearchView: void h0()>
UI update?

<androidx.appcompat.widget.SearchView: void j0(boolean)>
null to <androidx.appcompat.widget.SearchView: void j0(boolean)>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <androidx.appcompat.widget.SearchView: boolean N()>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <com.google.android.material.internal.m: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <android.widget.ImageView: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <android.widget.ImageButton: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void j0(boolean)> to <android.view.ViewGroup: boolean hasFocus()>
<androidx.appcompat.widget.SearchView: boolean N()> to <androidx.appcompat.widget.SearchView: boolean L()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<androidx.appcompat.widget.SearchView: void l0(boolean)>
null to <androidx.appcompat.widget.SearchView: void l0(boolean)>
<androidx.appcompat.widget.SearchView: void l0(boolean)> to <androidx.appcompat.widget.SearchView: boolean L()>
<androidx.appcompat.widget.SearchView: void l0(boolean)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void l0(boolean)> to <com.google.android.material.internal.m: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void l0(boolean)> to <android.widget.ImageView: void setVisibility(int)>
<androidx.appcompat.widget.SearchView: void l0(boolean)> to <android.widget.ImageButton: void setVisibility(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?

<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.String: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <g0.c: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setSelection(int)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void B()>
null to <androidx.appcompat.widget.SearchView: void B()>
UI update?

<androidx.appcompat.widget.SearchView: void H()>
null to <androidx.appcompat.widget.SearchView: void H()>
<androidx.appcompat.widget.SearchView: void H()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.SearchView: void H()> to <androidx.appcompat.widget.SearchView$n: void a(android.widget.AutoCompleteTextView)>
<androidx.appcompat.widget.SearchView: void H()> to <androidx.appcompat.widget.SearchView$n: void b(android.widget.AutoCompleteTextView)>
<androidx.appcompat.widget.SearchView: void H()> to <android.widget.AutoCompleteTextView: void refreshAutoCompleteResults()>
<androidx.appcompat.widget.SearchView: void H()> to <androidx.appcompat.widget.SearchView: void <clinit>()>
<androidx.appcompat.widget.SearchView: void H()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void a(android.widget.AutoCompleteTextView)> to <androidx.appcompat.widget.SearchView$n: void d()>
<androidx.appcompat.widget.SearchView$n: void a(android.widget.AutoCompleteTextView)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.SearchView$n: void b(android.widget.AutoCompleteTextView)> to <androidx.appcompat.widget.SearchView$n: void d()>
<androidx.appcompat.widget.SearchView$n: void b(android.widget.AutoCompleteTextView)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <androidx.appcompat.widget.SearchView$n: void <init>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <androidx.appcompat.widget.SearchView: void <clinit>()>
<androidx.appcompat.widget.SearchView: void <clinit>()> to <android.view.View: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void d()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void d()> to <java.lang.UnsupportedClassVersionError: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.SearchView$n: void <init>()> to <androidx.appcompat.widget.SearchView$n: void d()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: boolean L()>
null to <androidx.appcompat.widget.SearchView: boolean L()>
UI update?

<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)>
null to <androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.app.Activity: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setData(android.net.Uri)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent addFlags(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: boolean S(int,int,java.lang.String)>
null to <androidx.appcompat.widget.SearchView: boolean S(int,int,java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: boolean T(int)>
null to <androidx.appcompat.widget.SearchView: boolean T(int)>
<androidx.appcompat.widget.SearchView: boolean T(int)> to <androidx.appcompat.widget.SearchView: void c0(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.room.e$c: boolean moveToPosition(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <android.database.AbstractCursor: boolean moveToPosition(int)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)>
<androidx.appcompat.widget.SearchView: void c0(int)> to <l0.a: android.database.Cursor c()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.String: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <g0.c: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setSelection(int)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.room.e$c: boolean moveToPosition(int)> to <android.database.AbstractCursor: boolean moveToPosition(int)>
<androidx.room.e$c: boolean moveToPosition(int)> to <androidx.room.e$c: boolean moveToPosition(int)>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>
<androidx.appcompat.widget.r0: java.lang.CharSequence a(android.database.Cursor)> to <android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <androidx.room.e$c: int getColumnIndex(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String o(android.database.Cursor,java.lang.String)> to <android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <androidx.room.e$c: java.lang.String getString(int)>
<androidx.appcompat.widget.r0: java.lang.String w(android.database.Cursor,int)> to <android.database.MatrixCursor: java.lang.String getString(int)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<androidx.room.e$c: int getColumnIndex(java.lang.String)> to <androidx.room.e$c: int getColumnIndex(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.room.e$c: java.lang.String getString(int)> to <android.database.MatrixCursor: java.lang.String getString(int)>
<androidx.room.e$c: java.lang.String getString(int)> to <android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<androidx.room.e$c: java.lang.String getString(int)> to <androidx.room.e$c: java.lang.String getString(int)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void U(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView: void U(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void U(java.lang.CharSequence)> to <androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.String: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <g0.c: int length()>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setSelection(int)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void W()>
null to <androidx.appcompat.widget.SearchView: void W()>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView: void G()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: void W()> to <java.lang.Object: java.lang.String toString()>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>
<androidx.appcompat.widget.SearchView: void W()> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void G()> to <android.widget.AutoCompleteTextView: void dismissDropDown()>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.app.Activity: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.view.ViewGroup: android.content.Context getContext()>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.os.IBinder getWindowToken()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setData(android.net.Uri)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent addFlags(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: boolean X(android.view.View,int,android.view.KeyEvent)>
null to <androidx.appcompat.widget.SearchView: boolean X(android.view.View,int,android.view.KeyEvent)>
UI update?

<androidx.appcompat.widget.SearchView: void Y(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView: void Y(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.SearchView: void Z()>
null to <androidx.appcompat.widget.SearchView: void Z()>
UI update?

<androidx.appcompat.widget.SearchView: void a0()>
null to <androidx.appcompat.widget.SearchView: void a0()>
<androidx.appcompat.widget.SearchView: void a0()> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: void a0()> to <android.app.Activity: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void a0()> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void a0()> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView: void a0()> to <androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)>
<androidx.appcompat.widget.SearchView: void a0()> to <androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)>
<androidx.appcompat.widget.SearchView: void a0()> to <android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
<androidx.appcompat.widget.SearchView: void a0()> to <android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.ComponentName: java.lang.String flattenToShortString()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void <init>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(android.content.Intent)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceMaxResults()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceLanguageId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoicePromptTextId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: int getVoiceLanguageModeId()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.PendingIntent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.os.Bundle: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent E(android.content.Intent,android.app.SearchableInfo)> to <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.ComponentName: java.lang.String flattenToShortString()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent F(android.content.Intent,android.app.SearchableInfo)> to <android.content.Intent: void <init>(android.content.Intent)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <android.content.res.Resources: java.lang.String getString(int)>
<androidx.appcompat.widget.o0: java.lang.String getString(int)> to <androidx.appcompat.widget.o0: java.lang.String getString(int)>
UI update?

<androidx.appcompat.widget.SearchView: void clearFocus()>
null to <androidx.appcompat.widget.SearchView: void clearFocus()>
<androidx.appcompat.widget.SearchView: void clearFocus()> to <android.view.ViewGroup: void clearFocus()>
<androidx.appcompat.widget.SearchView: void clearFocus()> to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>
<androidx.appcompat.widget.SearchView: void clearFocus()> to <android.widget.AutoCompleteTextView: void clearFocus()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.os.IBinder getWindowToken()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)>
null to <androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <androidx.appcompat.widget.SearchView: void W()>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <android.widget.AutoCompleteTextView: void setSelection(int)>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <android.widget.AutoCompleteTextView: int length()>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void d0(java.lang.CharSequence,boolean)> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView: void G()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: void W()> to <java.lang.Object: java.lang.String toString()>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.SpannableStringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.SearchView: void W()> to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>
<androidx.appcompat.widget.SearchView: void W()> to <android.widget.AutoCompleteTextView: android.text.Editable getText()>
<androidx.appcompat.widget.SearchView: void W()> to <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: void G()> to <android.widget.AutoCompleteTextView: void dismissDropDown()>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.app.Activity: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.content.ContextWrapper: void startActivity(android.content.Intent)>
<androidx.appcompat.widget.SearchView: void P(int,java.lang.String,java.lang.String)> to <android.view.ViewGroup: android.content.Context getContext()>
<java.lang.Object: java.lang.String toString()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.os.IBinder getWindowToken()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <clinit>()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent setData(android.net.Uri)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: android.content.Intent addFlags(int)>
<androidx.appcompat.widget.SearchView: android.content.Intent C(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)> to <android.content.Intent: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView: void f0()>
null to <androidx.appcompat.widget.SearchView: void f0()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.view.View: boolean hasFocus()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.view.ViewGroup: void invalidate()>
<androidx.appcompat.widget.SearchView: void f0()> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <f.c: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <a0.e: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <a0.d: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.RelativeLayout: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.EditText: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.Spinner: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.view.View: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.view.ViewGroup: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.CompoundButton: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.SearchView: void f0()> to <android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>
<androidx.appcompat.widget.g0$a: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<f.c: boolean setState(int[])> to <f.c: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<f.c: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<f.c: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<f.c: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.e: boolean setState(int[])> to <android.graphics.drawable.Drawable: void invalidateSelf()>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean f(int[])>
<a0.d: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <f.c: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<a0.d: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.Drawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.appcompat.widget.g0$a: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <f.c: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.h: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <android.graphics.drawable.StateListDrawable: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.e: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <a0.d: boolean setState(int[])>
<androidx.vectordrawable.graphics.drawable.g: boolean setState(int[])> to <androidx.vectordrawable.graphics.drawable.b: boolean setState(int[])>
<a0.d: boolean f(int[])> to <a0.d: boolean c()>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getColorForState(int[],int)>
<a0.d: boolean f(int[])> to <android.content.res.ColorStateList: int getDefaultColor()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void clearColorFilter()>
<a0.d: boolean f(int[])> to <android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<a0.d: boolean f(int[])> to <a0.e: boolean c()>
<a0.e: boolean c()> to <android.os.Build$VERSION: void <clinit>()>
UI update?

<androidx.appcompat.widget.SearchView: int getImeOptions()>
null to <androidx.appcompat.widget.SearchView: int getImeOptions()>
UI update?

<androidx.appcompat.widget.SearchView: int getInputType()>
null to <androidx.appcompat.widget.SearchView: int getInputType()>
UI update?

<androidx.appcompat.widget.SearchView: int getMaxWidth()>
null to <androidx.appcompat.widget.SearchView: int getMaxWidth()>
UI update?

<androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()>
null to <androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()>
UI update?

<androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()>
null to <androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()>
UI update?

<androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()>
null to <androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()>
UI update?

<androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()>
null to <androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()>
UI update?

<androidx.appcompat.widget.SearchView: l0.a getSuggestionsAdapter()>
null to <androidx.appcompat.widget.SearchView: l0.a getSuggestionsAdapter()>
UI update?

<androidx.appcompat.widget.SearchView: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.SearchView: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.SearchView: void onMeasure(int,int)>
null to <androidx.appcompat.widget.SearchView: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()>
null to <androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)>
null to <androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)>
UI update?

<androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)>
null to <androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)>
UI update?

<androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)>
null to <androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)>
UI update?

<androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)>
null to <androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)>
UI update?

<androidx.appcompat.widget.SearchView: void setImeOptions(int)>
null to <androidx.appcompat.widget.SearchView: void setImeOptions(int)>
UI update?

<androidx.appcompat.widget.SearchView: void setInputType(int)>
null to <androidx.appcompat.widget.SearchView: void setInputType(int)>
UI update?

<androidx.appcompat.widget.SearchView: void setMaxWidth(int)>
null to <androidx.appcompat.widget.SearchView: void setMaxWidth(int)>
UI update?

<androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$k)>
null to <androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$k)>
UI update?

<androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)>
null to <androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)>
UI update?

<androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$l)>
null to <androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$l)>
UI update?

<androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)>
null to <androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)>
UI update?

<androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$m)>
null to <androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$m)>
UI update?

<androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)>
null to <androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)>
UI update?

<androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>
null to <androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>
UI update?

<androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)>
null to <androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.BiometricIdTab

<androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(l0.a)>
null to <androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(l0.a)>
UI update?

<com.simplemobiletools.commons.views.BiometricIdTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.BiometricIdTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View C(int)>
null to <com.simplemobiletools.commons.views.BiometricIdTab: android.view.View C(int)>
UI update?
------------------------------------------------------
com.google.android.material.internal.CheckableImageButton

<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate()>
UI update?

<com.google.android.material.internal.CheckableImageButton: void <clinit>()>
null to <com.google.android.material.internal.CheckableImageButton: void <clinit>()>
UI update?

<com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.internal.CheckableImageButton: boolean a()>
null to <com.google.android.material.internal.CheckableImageButton: boolean a()>
UI update?

<com.google.android.material.internal.CheckableImageButton: boolean isChecked()>
null to <com.google.android.material.internal.CheckableImageButton: boolean isChecked()>
UI update?

<com.google.android.material.internal.CheckableImageButton: int[] onCreateDrawableState(int)>
null to <com.google.android.material.internal.CheckableImageButton: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.internal.CheckableImageButton: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.google.android.material.internal.CheckableImageButton: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.google.android.material.internal.CheckableImageButton: android.os.Parcelable onSaveInstanceState()>
null to <com.google.android.material.internal.CheckableImageButton: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>
null to <com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)> to <android.view.View: void sendAccessibilityEvent(int)>
UI update?

<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)>
null to <com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)> to <android.view.View: void refreshDrawableState()>
<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)> to <android.view.View: void sendAccessibilityEvent(int)>
UI update?

<com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)>
null to <com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)>
UI update?

<com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)>
null to <com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)> to <android.widget.ImageButton: void setPressed(boolean)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyButton

<com.google.android.material.internal.CheckableImageButton: void toggle()>
null to <com.google.android.material.internal.CheckableImageButton: void toggle()>
<com.google.android.material.internal.CheckableImageButton: void toggle()> to <com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)> to <android.view.View: void refreshDrawableState()>
<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)> to <android.view.View: void sendAccessibilityEvent(int)>
UI update?

<com.simplemobiletools.commons.views.MyButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
com.google.android.material.floatingactionbutton.FloatingActionButton

<com.simplemobiletools.commons.views.MyButton: void a(int,int,int)>
null to <com.simplemobiletools.commons.views.MyButton: void a(int,int,int)>
<com.simplemobiletools.commons.views.MyButton: void a(int,int,int)> to <android.widget.Button: void setTextColor(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void <clinit>()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void <clinit>()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int c(com.google.android.material.floatingactionbutton.FloatingActionButton)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int c(com.google.android.material.floatingactionbutton.FloatingActionButton)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void d(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void d(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b getImpl()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b getImpl()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b getImpl()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.view.View: float getRotation()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <m1.a: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f: void <init>()> to <com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)>
<com.google.android.material.internal.f: void <init>()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.view.View: float getRotation()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <m1.a: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f: void <init>()> to <com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)>
<com.google.android.material.internal.f: void <init>()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int k(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int k(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void p(android.graphics.Rect)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void p(android.graphics.Rect)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int r(int,int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int r(int,int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b$j u(com.google.android.material.floatingactionbutton.FloatingActionButton$b)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b$j u(com.google.android.material.floatingactionbutton.FloatingActionButton$b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b$j u(com.google.android.material.floatingactionbutton.FloatingActionButton$b)> to <com.google.android.material.floatingactionbutton.FloatingActionButton$a: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$a: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$b)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean a()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean a()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean a()> to <w1.b: boolean c()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void drawableStateChanged()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void drawableStateChanged()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void e(android.animation.Animator$AnimatorListener)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void e(android.animation.Animator$AnimatorListener)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void f(android.animation.Animator$AnimatorListener)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void f(android.animation.Animator$AnimatorListener)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void g(m1.k)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void g(m1.k)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()> to <w1.b: int b()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: m1.h getHideMotionSpec()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: m1.h getHideMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: c2.k getShapeAppearanceModel()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: c2.k getShapeAppearanceModel()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: m1.h getShowMotionSpec()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: m1.h getShowMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void p(android.graphics.Rect)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.widget.ImageView: int getHeight()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void j(android.graphics.Rect)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void j(android.graphics.Rect)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()> to <android.widget.ImageButton: void jumpDrawablesToCurrentState()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()> to <com.google.android.material.floatingactionbutton.b: void A()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()> to <com.google.android.material.floatingactionbutton.c: void A()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void jumpDrawablesToCurrentState()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b getImpl()>
<com.google.android.material.floatingactionbutton.b: void A()> to <com.google.android.material.internal.f: void c()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b getImpl()> to <com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()>
<com.google.android.material.internal.f: void c()> to <android.animation.ValueAnimator: void end()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <android.os.Build$VERSION: void <clinit>()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.b h()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.view.View: float getRotation()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.internal.f: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Rect: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.RectF: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <android.graphics.Matrix: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)> to <com.google.android.material.floatingactionbutton.b: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,b2.b)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$c: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)> to <java.lang.Object: void <init>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <m1.a: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: void <clinit>()> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$f: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$k: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$g: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.floatingactionbutton.b$h: void <init>(com.google.android.material.floatingactionbutton.b)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void a(int[],android.animation.ValueAnimator)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.internal.f: void <init>()> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f: void <init>()> to <com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)>
<com.google.android.material.internal.f: void <init>()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <com.google.android.material.floatingactionbutton.b: void <clinit>()>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setFloatValues(float[])>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.floatingactionbutton.b: android.animation.ValueAnimator i(com.google.android.material.floatingactionbutton.b$l)> to <android.animation.ValueAnimator: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b,com.google.android.material.floatingactionbutton.b$a)> to <com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)>
<com.google.android.material.internal.f$b: void <init>(int[],android.animation.ValueAnimator)> to <java.lang.Object: void <init>()>
<com.google.android.material.internal.f$a: void <init>(com.google.android.material.internal.f)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.floatingactionbutton.b$l: void <init>(com.google.android.material.floatingactionbutton.b)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void l(com.google.android.material.floatingactionbutton.FloatingActionButton$b)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void l(com.google.android.material.floatingactionbutton.FloatingActionButton$b)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean n()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean n()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean o()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean o()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void onAttachedToWindow()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void onAttachedToWindow()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void onDetachedFromWindow()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void onDetachedFromWindow()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void onMeasure(int,int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void onMeasure(int,int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getAction()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <android.graphics.Rect: boolean contains(int,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getY()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: float getX()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.graphics.Rect: void set(int,int,int,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <com.google.android.material.floatingactionbutton.FloatingActionButton: void p(android.graphics.Rect)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.widget.ImageView: int getHeight()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <android.widget.ImageView: int getWidth()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean i(android.graphics.Rect)> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)> to <android.util.Log: int i(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)> to <android.util.Log: int i(java.lang.String,java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(c2.k)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(c2.k)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
null to <com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)> to <com.google.android.material.internal.m: void setVisibility(int)>
<com.google.android.material.internal.m: void setVisibility(int)> to <com.google.android.material.internal.m: void b(int,boolean)>
<com.google.android.material.internal.m: void b(int,boolean)> to <android.widget.ImageButton: void setVisibility(int)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.Breadcrumbs

<com.simplemobiletools.commons.views.Breadcrumbs: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)>
<com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: android.widget.LinearLayout c(com.simplemobiletools.commons.views.Breadcrumbs)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: android.widget.LinearLayout c(com.simplemobiletools.commons.views.Breadcrumbs)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void d(com.simplemobiletools.commons.views.Breadcrumbs,int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void d(com.simplemobiletools.commons.views.Breadcrumbs,int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void e(w2.b,int,boolean)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void e(w2.b,int,boolean)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)>
<com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <k3.k: void d(java.lang.Object,java.lang.String)>
<com.simplemobiletools.commons.views.Breadcrumbs: void f(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<k3.k: void d(java.lang.Object,java.lang.String)> to <k3.k: void k(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.String f(java.lang.String)>
<k3.k: void k(java.lang.String)> to <java.lang.NullPointerException: void <init>(java.lang.String)>
<k3.k: void k(java.lang.String)> to <k3.k: java.lang.Throwable g(java.lang.Throwable)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.Thread currentThread()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getMethodName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.String f(java.lang.String)> to <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)>
<k3.k: java.lang.Throwable g(java.lang.Throwable)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.StackTraceElement: java.lang.String getClassName()>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<k3.k: java.lang.Throwable h(java.lang.Throwable,java.lang.String)> to <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: android.content.res.ColorStateList getTextColorStateList()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: android.content.res.ColorStateList getTextColorStateList()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void h()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void h()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void i(int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void i(int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void j(int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void j(int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void l(int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void l(int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: int getItemCount()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: int getItemCount()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: w2.b getLastItem()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: w2.b getLastItem()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: com.simplemobiletools.commons.views.Breadcrumbs$b getListener()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: com.simplemobiletools.commons.views.Breadcrumbs$b getListener()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void onLayout(boolean,int,int,int,int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void onLayout(boolean,int,int,int,int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void onMeasure(int,int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void onMeasure(int,int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void onScrollChanged(int,int,int,int)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void onScrollChanged(int,int,int,int)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()>
<com.simplemobiletools.commons.views.Breadcrumbs: void requestLayout()> to <android.widget.HorizontalScrollView: void requestLayout()>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.SearchView$SearchAutoComplete

<com.simplemobiletools.commons.views.Breadcrumbs: void setShownInDialog(boolean)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void setShownInDialog(boolean)>
UI update?

<com.simplemobiletools.commons.views.Breadcrumbs: void setListener(com.simplemobiletools.commons.views.Breadcrumbs$b)>
null to <com.simplemobiletools.commons.views.Breadcrumbs: void setListener(com.simplemobiletools.commons.views.Breadcrumbs$b)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void a()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void a()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void c()> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean b()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean b()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.content.Context getContext()>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)> to <android.widget.AutoCompleteTextView: android.os.IBinder getWindowToken()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <h.d: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<h.d: java.lang.Object getSystemService(java.lang.String)> to <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.ColorPickerSquare

<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)>
null to <androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)>
<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)> to <android.widget.AutoCompleteTextView: void setThreshold(int)>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: float[] getColor()>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: float[] getColor()>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: android.graphics.Shader getLuar()>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: android.graphics.Shader getLuar()>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: android.graphics.Paint getPaint()>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: android.graphics.Paint getPaint()>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: void onDraw(android.graphics.Canvas)>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: void onDraw(android.graphics.Canvas)>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: void setHue(float)>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: void setHue(float)>
<com.simplemobiletools.commons.views.ColorPickerSquare: void setHue(float)> to <android.view.View: void invalidate()>
UI update?

<com.simplemobiletools.commons.views.ColorPickerSquare: void setLuar(android.graphics.Shader)>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: void setLuar(android.graphics.Shader)>
UI update?
------------------------------------------------------
com.google.android.material.button.MaterialButtonToggleGroup

<com.simplemobiletools.commons.views.ColorPickerSquare: void setPaint(android.graphics.Paint)>
null to <com.simplemobiletools.commons.views.ColorPickerSquare: void setPaint(android.graphics.Paint)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()> to <com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()> to <java.lang.Class: java.lang.String getSimpleName()>
<com.google.android.material.button.MaterialButtonToggleGroup: void <clinit>()> to <android.view.View: void <clinit>()>
<java.lang.Class: java.lang.String getSimpleName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int a(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int a(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: boolean b(com.google.android.material.button.MaterialButtonToggleGroup)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: boolean b(com.google.android.material.button.MaterialButtonToggleGroup)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: boolean c(com.google.android.material.button.MaterialButtonToggleGroup)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: boolean c(com.google.android.material.button.MaterialButtonToggleGroup)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int d(com.google.android.material.button.MaterialButtonToggleGroup,int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int d(com.google.android.material.button.MaterialButtonToggleGroup,int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.View: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.ViewGroup: int getVisibility()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void h()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void h()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: android.widget.LinearLayout$LayoutParams i(android.view.View)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: android.widget.LinearLayout$LayoutParams i(android.view.View)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void j(int,boolean)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void j(int,boolean)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton m(int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton m(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton m(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int n(android.view.View)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int n(android.view.View)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$d o(int,int,int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$d o(int,int,int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.View: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.ViewGroup: int getVisibility()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void r(int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void r(int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)>
<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)> to <i0.w: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)> to <android.widget.TextView: void setId(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)> to <android.view.View: int getId()>
<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)> to <i0.w: int k()>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int k()> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int k()> to <java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>
<i0.w: int k()> to <java.util.concurrent.atomic.AtomicInteger: int get()>
<i0.w: int k()> to <android.view.View: void <clinit>()>
<i0.w: int k()> to <i0.w: void <clinit>()>
<i0.w: int k()> to <android.view.View: int generateViewId()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void t(c2.k$b,com.google.android.material.button.MaterialButtonToggleGroup$d)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void t(c2.k$b,com.google.android.material.button.MaterialButtonToggleGroup$d)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void v()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void v()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchDraw(android.graphics.Canvas)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void dispatchDraw(android.graphics.Canvas)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void g(com.google.android.material.button.MaterialButtonToggleGroup$e)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void g(com.google.android.material.button.MaterialButtonToggleGroup$e)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <android.view.View: int getId()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton m(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <java.util.ArrayList: void <init>()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton m(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: int getChildDrawingOrder(int,int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: int getChildDrawingOrder(int,int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void k()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void k()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void onFinishInflate()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void onFinishInflate()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void Z(java.lang.Object)>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.button.MaterialButtonToggleGroup: boolean q()>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.material.button.MaterialButtonToggleGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c$b: j0.c$b a(int,int,boolean,int)>
<j0.c: void Z(java.lang.Object)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c: void Z(java.lang.Object)> to <android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <clinit>()>
<j0.c: j0.c x0(android.view.accessibility.AccessibilityNodeInfo)> to <j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.os.Build$VERSION: void <clinit>()>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <j0.c$b: void <init>(java.lang.Object)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>
<j0.c$b: j0.c$b a(int,int,boolean,int)> to <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ListView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.ImageView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.FrameLayout: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.View: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.TextView: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.widget.CompoundButton: int getVisibility()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean p(int)> to <android.view.ViewGroup: int getVisibility()>
<j0.c: void <init>(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Object: void <init>()>
<j0.c$b: void <init>(java.lang.Object)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void onMeasure(int,int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void onMeasure(int,int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: boolean q()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: boolean q()>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)>
UI update?

<com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ActionBarOverlayLayout

<com.google.android.material.button.MaterialButtonToggleGroup: void w()>
null to <com.google.android.material.button.MaterialButtonToggleGroup: void w()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void <clinit>()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void <clinit>()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean B(float)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean B(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean B(float)> to <android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean B(float)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean B(float)> to <android.widget.OverScroller: int getFinalY()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean q(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean q(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean q(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean q(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean q(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void v(android.content.Context)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void v(android.content.Context)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>
<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()> to <android.widget.FrameLayout: float getTranslationY()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void j(android.view.View,int,int,int[],int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void j(android.view.View,int,int,int[],int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void j(android.view.View,int,int,int[],int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void m(android.view.View,int,int,int,int,int,int[])>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void m(android.view.View,int,int,int,int,int,int[])>
<androidx.appcompat.widget.ActionBarOverlayLayout: void m(android.view.View,int,int,int,int,int,int[])> to <androidx.appcompat.widget.ActionBarOverlayLayout: void n(android.view.View,int,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void n(android.view.View,int,int,int,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int min(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: void setTranslationY(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void n(android.view.View,int,int,int,int,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void n(android.view.View,int,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void n(android.view.View,int,int,int,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int min(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: void setTranslationY(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean o(android.view.View,android.view.View,int,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean o(android.view.View,android.view.View,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean o(android.view.View,android.view.View,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int min(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: void setTranslationY(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)> to <android.widget.FrameLayout: int getVisibility()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$e r()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$e r()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$e s(android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$e s(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int min(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: void setTranslationY(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int min(int,int)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: void setTranslationY(float)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <android.widget.FrameLayout: int getHeight()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)> to <java.lang.Math: int max(int,int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)> to <android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: void u()>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>
<androidx.appcompat.widget.ActionBarOverlayLayout: void u()> to <android.view.ViewPropertyAnimator: void cancel()>
UI update?

<androidx.appcompat.widget.ActionBarOverlayLayout: boolean w()>
null to <androidx.appcompat.widget.ActionBarOverlayLayout: boolean w()>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.RenameSimpleTab

<com.simplemobiletools.commons.views.RenameSimpleTab: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View a(int)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View a(int)>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: q2.o getActivity()>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: q2.o getActivity()>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: boolean getIgnoreClicks()>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: boolean getIgnoreClicks()>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: java.util.ArrayList getPaths()>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: java.util.ArrayList getPaths()>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: boolean getStopLooping()>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: boolean getStopLooping()>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: void onFinishInflate()>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void onFinishInflate()>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: void setActivity(q2.o)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void setActivity(q2.o)>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: void setIgnoreClicks(boolean)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void setIgnoreClicks(boolean)>
UI update?

<com.simplemobiletools.commons.views.RenameSimpleTab: void setPaths(java.util.ArrayList)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void setPaths(java.util.ArrayList)>
UI update?
------------------------------------------------------
x2.h

<com.simplemobiletools.commons.views.RenameSimpleTab: void setStopLooping(boolean)>
null to <com.simplemobiletools.commons.views.RenameSimpleTab: void setStopLooping(boolean)>
UI update?
------------------------------------------------------
x2.g
------------------------------------------------------
androidx.appcompat.widget.a

<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <h.d: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.util.TypedValue: void <init>()>
<androidx.appcompat.widget.a: void <init>(android.content.Context,android.util.AttributeSet,int)> to <androidx.appcompat.widget.a$a: void <init>(androidx.appcompat.widget.a)>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.a$a: void <init>(androidx.appcompat.widget.a)> to <java.lang.Object: void <init>()>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.appcompat.widget.a: void a(androidx.appcompat.widget.a,int)>
null to <androidx.appcompat.widget.a: void a(androidx.appcompat.widget.a,int)>
UI update?

<androidx.appcompat.widget.a: void b(androidx.appcompat.widget.a,int)>
null to <androidx.appcompat.widget.a: void b(androidx.appcompat.widget.a,int)>
<androidx.appcompat.widget.a: void b(androidx.appcompat.widget.a,int)> to <android.view.ViewGroup: void setVisibility(int)>
UI update?

<androidx.appcompat.widget.a: int d(int,int,boolean)>
null to <androidx.appcompat.widget.a: int d(int,int,boolean)>
UI update?

<androidx.appcompat.widget.a: int c(android.view.View,int,int,int)>
null to <androidx.appcompat.widget.a: int c(android.view.View,int,int,int)>
UI update?

<androidx.appcompat.widget.a: int e(android.view.View,int,int,int,boolean)>
null to <androidx.appcompat.widget.a: int e(android.view.View,int,int,int,boolean)>
UI update?

<androidx.appcompat.widget.a: i0.a0 f(int,long)>
null to <androidx.appcompat.widget.a: i0.a0 f(int,long)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.w: void <clinit>()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <androidx.appcompat.widget.a$a: androidx.appcompat.widget.a$a d(i0.a0,int)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <android.view.ViewGroup: void setAlpha(float)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <android.view.ViewGroup: int getVisibility()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 f(i0.b0)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 d(long)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: i0.a0 a(float)>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.a0: void b()>
<androidx.appcompat.widget.a: i0.a0 f(int,long)> to <i0.w: i0.a0 d(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.a0: i0.a0 f(i0.b0)> to <android.os.Build$VERSION: void <clinit>()>
<i0.a0: i0.a0 f(i0.b0)> to <i0.a0$c: void <init>(i0.a0)>
<i0.a0: i0.a0 f(i0.b0)> to <com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <android.view.View: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <android.view.ViewGroup: void setTag(int,java.lang.Object)>
<i0.a0: i0.a0 f(i0.b0)> to <i0.a0: void g(android.view.View,i0.b0)>
<i0.a0: i0.a0 f(i0.b0)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 d(long)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 d(long)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>
<i0.a0: i0.a0 d(long)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: i0.a0 a(float)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: i0.a0 a(float)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>
<i0.a0: i0.a0 a(float)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: void b()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: void b()> to <android.view.ViewPropertyAnimator: void cancel()>
<i0.a0: void b()> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.w: i0.a0 d(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: i0.a0 d(android.view.View)> to <i0.a0: void <init>(android.view.View)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<i0.w: i0.a0 d(android.view.View)> to <java.util.WeakHashMap: void <init>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.a0$c: void <init>(i0.a0)> to <java.lang.Object: void <init>()>
<com.google.android.material.timepicker.ChipTextInputComboView: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <android.view.View: void setTag(int,java.lang.Object)>
<androidx.constraintlayout.widget.b: void setTag(int,java.lang.Object)> to <androidx.constraintlayout.widget.b: void e(int)>
<i0.a0: void g(android.view.View,i0.b0)> to <android.view.View: android.view.ViewPropertyAnimator animate()>
<i0.a0: void g(android.view.View,i0.b0)> to <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<i0.a0: void g(android.view.View,i0.b0)> to <i0.a0$a: void <init>(i0.a0,i0.b0,android.view.View)>
<i0.a0: void <init>(android.view.View)> to <java.lang.Object: void <init>()>
<i0.a0: void <init>(android.view.View)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.constraintlayout.widget.b: void e(int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.constraintlayout.widget.b: void e(int)> to <android.view.View: int getId()>
<i0.a0$a: void <init>(i0.a0,i0.b0,android.view.View)> to <android.animation.AnimatorListenerAdapter: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.a: int getAnimatedVisibility()>
null to <androidx.appcompat.widget.a: int getAnimatedVisibility()>
UI update?

<androidx.appcompat.widget.a: int getContentHeight()>
null to <androidx.appcompat.widget.a: int getContentHeight()>
UI update?

<androidx.appcompat.widget.a: void onConfigurationChanged(android.content.res.Configuration)>
null to <androidx.appcompat.widget.a: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<androidx.appcompat.widget.a: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.a: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionMasked()>
<androidx.appcompat.widget.a: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.a: void setContentHeight(int)>
null to <androidx.appcompat.widget.a: void setContentHeight(int)>
UI update?
------------------------------------------------------
x2.f

<androidx.appcompat.widget.a: void setVisibility(int)>
null to <androidx.appcompat.widget.a: void setVisibility(int)>
<androidx.appcompat.widget.a: void setVisibility(int)> to <android.view.ViewGroup: int getVisibility()>
<androidx.appcompat.widget.a: void setVisibility(int)> to <i0.a0: void b()>
<androidx.appcompat.widget.a: void setVisibility(int)> to <android.view.ViewGroup: void setVisibility(int)>
<i0.a0: void b()> to <java.lang.ref.WeakReference: java.lang.Object get()>
<i0.a0: void b()> to <android.view.ViewPropertyAnimator: void cancel()>
<i0.a0: void b()> to <android.view.View: android.view.ViewPropertyAnimator animate()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.d

<androidx.appcompat.widget.d: void <clinit>()>
null to <androidx.appcompat.widget.d: void <clinit>()>
UI update?

<androidx.appcompat.widget.d: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.d: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.d: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.d: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.d: void drawableStateChanged()>
null to <androidx.appcompat.widget.d: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.d: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.d: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.d: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.d: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.d: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.d: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.d: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.d: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.d: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.d: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?

<androidx.appcompat.widget.d: void setDropDownBackgroundResource(int)>
null to <androidx.appcompat.widget.d: void setDropDownBackgroundResource(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.h

<androidx.appcompat.widget.h: void <clinit>()>
null to <androidx.appcompat.widget.h: void <clinit>()>
UI update?

<androidx.appcompat.widget.h: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.h: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.h: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.h: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.h: void drawableStateChanged()>
null to <androidx.appcompat.widget.h: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.h: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.h: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.h: void setCheckMarkDrawable(int)>
null to <androidx.appcompat.widget.h: void setCheckMarkDrawable(int)>
UI update?

<androidx.appcompat.widget.h: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.h: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.f

<androidx.appcompat.widget.f: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.f: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.f: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.f: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.f: void drawableStateChanged()>
null to <androidx.appcompat.widget.f: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.f: int getAutoSizeMaxTextSize()>
null to <androidx.appcompat.widget.f: int getAutoSizeMaxTextSize()>
UI update?

<androidx.appcompat.widget.f: int getAutoSizeMinTextSize()>
null to <androidx.appcompat.widget.f: int getAutoSizeMinTextSize()>
UI update?

<androidx.appcompat.widget.f: int getAutoSizeStepGranularity()>
null to <androidx.appcompat.widget.f: int getAutoSizeStepGranularity()>
<androidx.appcompat.widget.f: int getAutoSizeStepGranularity()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.f: int getAutoSizeStepGranularity()> to <androidx.appcompat.widget.z: int g()>
<androidx.appcompat.widget.f: int getAutoSizeStepGranularity()> to <android.widget.Button: int getAutoSizeStepGranularity()>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: int g()> to <androidx.appcompat.widget.b0: int l()>
<androidx.appcompat.widget.b0: int l()> to <java.lang.Math: int round(float)>
UI update?

<androidx.appcompat.widget.f: int[] getAutoSizeTextAvailableSizes()>
null to <androidx.appcompat.widget.f: int[] getAutoSizeTextAvailableSizes()>
UI update?

<androidx.appcompat.widget.f: int getAutoSizeTextType()>
null to <androidx.appcompat.widget.f: int getAutoSizeTextType()>
UI update?

<androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>
null to <androidx.appcompat.widget.f: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()>
UI update?

<androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>
null to <androidx.appcompat.widget.f: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()>
UI update?

<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
null to <androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
null to <androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<androidx.appcompat.widget.f: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <java.lang.Class: java.lang.String getName()>
<java.lang.Class: java.lang.String getName()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.f: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.f: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.f: void onTextChanged(java.lang.CharSequence,int,int,int)>
null to <androidx.appcompat.widget.f: void onTextChanged(java.lang.CharSequence,int,int,int)>
UI update?

<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
null to <androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <androidx.appcompat.widget.z: void t(int,int,int,int)>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <android.widget.Button: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void t(int,int,int,int)> to <androidx.appcompat.widget.b0: void u(int,int,int,int)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: void b()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: boolean z()>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: void E(float,float,float)>
<androidx.appcompat.widget.b0: void u(int,int,int,int)> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void b()> to <android.graphics.RectF: void setEmpty()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: float getTextSize()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingTop()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingBottom()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getHeight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingRight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingLeft()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredWidth()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredHeight()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: int i(android.graphics.RectF)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: double floor(double)>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: void E(float,float,float)> to <java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)> to <android.widget.TextView: boolean isHorizontallyScrollable()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: int intValue()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: int size()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: void <init>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Arrays: void sort(int[])>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getHeight()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getLineEnd(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.StaticLayout: int getLineCount()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void q(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: int getMaxLines()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.EditText: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.k: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout$Alignment: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.Math: int round(float)>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void <init>()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void set(android.text.TextPaint)>
<androidx.appcompat.widget.b0: void q(int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void q(int)> to <android.graphics.Paint: void reset()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.k: java.lang.CharSequence getText()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: float floatValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: java.lang.Float valueOf(float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$c: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout build()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
<java.lang.Float: float floatValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
null to <androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <androidx.appcompat.widget.z: void u(int[],int)>
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <android.widget.Button: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void u(int[],int)> to <androidx.appcompat.widget.b0: void v(int[],int)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.util.Arrays: int[] copyOf(int[],int)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: void b()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean z()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean B()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: void v(int[],int)> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: void v(int[],int)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: void v(int[],int)> to <java.util.Arrays: java.lang.String toString(int[])>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void b()> to <android.graphics.RectF: void setEmpty()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: float getTextSize()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingTop()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getCompoundPaddingBottom()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getHeight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingRight()>
<androidx.appcompat.widget.b0: void b()> to <android.widget.TextView: int getTotalPaddingLeft()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredWidth()>
<androidx.appcompat.widget.b0: void b()> to <android.view.View: int getMeasuredHeight()>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: int i(android.graphics.RectF)>
<androidx.appcompat.widget.b0: void b()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: double floor(double)>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: int[] c(int[])>
<androidx.appcompat.widget.b0: boolean z()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: boolean z()> to <java.lang.Math: int round(float)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: int intValue()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: int size()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.ArrayList: void <init>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: void <clinit>()>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Arrays: void sort(int[])>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.lang.Integer: java.lang.Integer valueOf(int)>
<androidx.appcompat.widget.b0: int[] c(int[])> to <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$b: boolean b(android.widget.TextView)> to <android.widget.TextView: boolean isHorizontallyScrollable()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$c: boolean b(android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)>
<androidx.appcompat.widget.b0: int i(android.graphics.RectF)> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.Boolean: void <clinit>()> to <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: boolean booleanValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getHeight()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout: int getLineEnd(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.StaticLayout: int getLineCount()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void q(int)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: int getMaxLines()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.EditText: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.k: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <android.text.Layout$Alignment: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: boolean C(int,android.graphics.RectF)> to <java.lang.Math: int round(float)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.String: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: int length()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c: int length()> to <android.text.SpannableStringBuilder: int length()>
<g0.c: int length()> to <g0.c: int length()>
<g0.c: int length()> to <android.text.SpannableString: int length()>
<g0.c: int length()> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout e(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void <init>()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void set(android.text.TextPaint)>
<androidx.appcompat.widget.b0: void q(int)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void q(int)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void q(int)> to <android.graphics.Paint: void reset()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.k: java.lang.CharSequence getText()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: boolean booleanValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: float floatValue()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Boolean: void <clinit>()>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <java.lang.Float: java.lang.Float valueOf(float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout g(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout h(java.lang.CharSequence,android.text.Layout$Alignment,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$c: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: boolean getIncludeFontPadding()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingMultiplier()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.widget.TextView: float getLineSpacingExtra()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout build()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.String: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.PrecomputedText: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableString: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <java.lang.StringBuffer: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.text.SpannableStringBuilder: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <g0.c: int length()>
<androidx.appcompat.widget.b0: android.text.StaticLayout f(java.lang.CharSequence,android.text.Layout$Alignment,int,int)> to <android.util.Log: int w(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: void <clinit>()> to <java.lang.Float: void <clinit>()>
<java.lang.Float: float floatValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<androidx.appcompat.widget.b0$b: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0$a: void a(android.text.StaticLayout$Builder,android.widget.TextView)> to <androidx.appcompat.widget.b0: java.lang.Object r(java.lang.Object,java.lang.String,java.lang.Object)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Field o(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.widget.f: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.widget.f: void setAutoSizeTextTypeWithDefaults(int)>
null to <androidx.appcompat.widget.f: void setAutoSizeTextTypeWithDefaults(int)>
UI update?

<androidx.appcompat.widget.f: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.f: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?

<androidx.appcompat.widget.f: void setSupportAllCaps(boolean)>
null to <androidx.appcompat.widget.f: void setSupportAllCaps(boolean)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.g

<androidx.appcompat.widget.f: void setTextSize(int,float)>
null to <androidx.appcompat.widget.f: void setTextSize(int,float)>
<androidx.appcompat.widget.f: void setTextSize(int,float)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.f: void setTextSize(int,float)> to <androidx.appcompat.widget.z: void A(int,float)>
<androidx.appcompat.widget.f: void setTextSize(int,float)> to <android.widget.Button: void setTextSize(int,float)>
<androidx.core.widget.b: void <clinit>()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.b: void <clinit>()> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.core.widget.b: void <clinit>()>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.appcompat.widget.z: void B(int,float)>
<androidx.appcompat.widget.z: void A(int,float)> to <androidx.appcompat.widget.z: boolean l()>
<androidx.appcompat.widget.z: void B(int,float)> to <androidx.appcompat.widget.b0: void y(int,float)>
<androidx.appcompat.widget.z: boolean l()> to <androidx.appcompat.widget.b0: boolean s()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.content.res.Resources getSystem()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.b0: void x(float)>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.b0: void y(int,float)> to <h.d: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.app.Application: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.widget.b0: void y(int,float)> to <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<androidx.appcompat.widget.b0: boolean s()> to <androidx.appcompat.widget.b0: boolean D()>
<androidx.appcompat.widget.b0: void x(float)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: void setTextSize(float)>
<androidx.appcompat.widget.b0: void x(float)> to <android.text.TextPaint: float getTextSize()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void invalidate()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void forceLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: void requestLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.Layout getLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: boolean isInLayout()>
<androidx.appcompat.widget.b0: void x(float)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: void x(float)> to <androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)>
<androidx.appcompat.widget.b0: void x(float)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <clinit>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <java.util.concurrent.ConcurrentHashMap: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <android.graphics.RectF: void <init>()>
<androidx.appcompat.widget.b0: void <clinit>()> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <androidx.appcompat.widget.b0: void <clinit>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.String toString()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.StringBuilder: void <init>()>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.reflect.Method: void setAccessible(boolean)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<androidx.appcompat.widget.b0: java.lang.reflect.Method p(java.lang.String)> to <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.g: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.g: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.g: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.g: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.g: void drawableStateChanged()>
null to <androidx.appcompat.widget.g: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.g: int getCompoundPaddingLeft()>
null to <androidx.appcompat.widget.g: int getCompoundPaddingLeft()>
UI update?

<androidx.appcompat.widget.g: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.g: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.g: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?
------------------------------------------------------
androidx.appcompat.widget.m
------------------------------------------------------
androidx.appcompat.widget.k

<androidx.appcompat.widget.k: boolean onDragEvent(android.view.DragEvent)>
null to <androidx.appcompat.widget.k: boolean onDragEvent(android.view.DragEvent)>
UI update?

<androidx.appcompat.widget.k: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.k: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.k: android.view.textclassifier.TextClassifier getTextClassifier()>
null to <androidx.appcompat.widget.k: android.view.textclassifier.TextClassifier getTextClassifier()>
UI update?

<androidx.appcompat.widget.k: java.lang.CharSequence getText()>
null to <androidx.appcompat.widget.k: java.lang.CharSequence getText()>
<androidx.appcompat.widget.k: java.lang.CharSequence getText()> to <androidx.appcompat.widget.k: android.text.Editable getText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
UI update?

<androidx.appcompat.widget.k: android.text.Editable getText()>
null to <androidx.appcompat.widget.k: android.text.Editable getText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getEditableText()>
<androidx.appcompat.widget.k: android.text.Editable getText()> to <android.widget.EditText: android.text.Editable getText()>
UI update?

<androidx.appcompat.widget.k: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.k: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.k: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.k: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.k: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.k: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.k: void drawableStateChanged()>
null to <androidx.appcompat.widget.k: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.k: i0.c a(i0.c)>
null to <androidx.appcompat.widget.k: i0.c a(i0.c)>
UI update?

<androidx.appcompat.widget.k: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.k: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.k: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.k: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.m: void setImageURI(android.net.Uri)>
null to <androidx.appcompat.widget.m: void setImageURI(android.net.Uri)>
UI update?

<androidx.appcompat.widget.m: void setBackgroundResource(int)>
null to <androidx.appcompat.widget.m: void setBackgroundResource(int)>
UI update?

<androidx.appcompat.widget.m: boolean hasOverlappingRendering()>
null to <androidx.appcompat.widget.m: boolean hasOverlappingRendering()>
UI update?

<androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportImageTintList()>
null to <androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportImageTintList()>
<androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportImageTintList()> to <androidx.appcompat.widget.n: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
null to <androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
<androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportImageTintMode()> to <androidx.appcompat.widget.n: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.m: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.m: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.m: void drawableStateChanged()>
null to <androidx.appcompat.widget.m: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.m: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.m: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.g: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)>
null to <androidx.appcompat.widget.g: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<androidx.appcompat.widget.g: void setButtonDrawable(int)>
null to <androidx.appcompat.widget.g: void setButtonDrawable(int)>
UI update?

<androidx.appcompat.widget.g: android.graphics.PorterDuff$Mode getSupportButtonTintMode()>
null to <androidx.appcompat.widget.g: android.graphics.PorterDuff$Mode getSupportButtonTintMode()>
UI update?

<androidx.appcompat.widget.g: android.content.res.ColorStateList getSupportButtonTintList()>
null to <androidx.appcompat.widget.g: android.content.res.ColorStateList getSupportButtonTintList()>
UI update?

<androidx.appcompat.widget.g: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.g: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.g: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.k: boolean onTextContextMenuItem(int)>
null to <androidx.appcompat.widget.k: boolean onTextContextMenuItem(int)>
UI update?

<androidx.appcompat.widget.k: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.k: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.p

<androidx.appcompat.widget.k: void setTextClassifier(android.view.textclassifier.TextClassifier)>
null to <androidx.appcompat.widget.k: void setTextClassifier(android.view.textclassifier.TextClassifier)>
UI update?

<androidx.appcompat.widget.p: void <clinit>()>
null to <androidx.appcompat.widget.p: void <clinit>()>
UI update?

<androidx.appcompat.widget.p: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.p: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.p: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.p: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.p: void drawableStateChanged()>
null to <androidx.appcompat.widget.p: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.p: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.p: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.p: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.p: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.p: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.p: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.p: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
null to <androidx.appcompat.widget.p: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
UI update?

<androidx.appcompat.widget.p: void setDropDownBackgroundResource(int)>
null to <androidx.appcompat.widget.p: void setDropDownBackgroundResource(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.o

<androidx.appcompat.widget.o: void drawableStateChanged()>
null to <androidx.appcompat.widget.o: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportImageTintList()>
null to <androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportImageTintList()>
<androidx.appcompat.widget.o: android.content.res.ColorStateList getSupportImageTintList()> to <androidx.appcompat.widget.n: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
null to <androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportImageTintMode()>
<androidx.appcompat.widget.o: android.graphics.PorterDuff$Mode getSupportImageTintMode()> to <androidx.appcompat.widget.n: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.o: boolean hasOverlappingRendering()>
null to <androidx.appcompat.widget.o: boolean hasOverlappingRendering()>
UI update?

<androidx.appcompat.widget.o: void setBackgroundResource(int)>
null to <androidx.appcompat.widget.o: void setBackgroundResource(int)>
UI update?

<androidx.appcompat.widget.o: void setImageURI(android.net.Uri)>
null to <androidx.appcompat.widget.o: void setImageURI(android.net.Uri)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.t

<androidx.appcompat.widget.t: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.t: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.t: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.t: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.s

<androidx.appcompat.widget.t: void onMeasure(int,int)>
null to <androidx.appcompat.widget.t: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.s: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.s: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.s: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.s: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.s: void drawableStateChanged()>
null to <androidx.appcompat.widget.s: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.s: int getCompoundPaddingLeft()>
null to <androidx.appcompat.widget.s: int getCompoundPaddingLeft()>
UI update?

<androidx.appcompat.widget.s: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.s: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.s: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.s: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.s: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.s: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.s: android.content.res.ColorStateList getSupportButtonTintList()>
null to <androidx.appcompat.widget.s: android.content.res.ColorStateList getSupportButtonTintList()>
UI update?

<androidx.appcompat.widget.s: android.graphics.PorterDuff$Mode getSupportButtonTintMode()>
null to <androidx.appcompat.widget.s: android.graphics.PorterDuff$Mode getSupportButtonTintMode()>
UI update?

<androidx.appcompat.widget.s: void setButtonDrawable(int)>
null to <androidx.appcompat.widget.s: void setButtonDrawable(int)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.x

<androidx.appcompat.widget.s: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)>
null to <androidx.appcompat.widget.s: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)>
UI update?

<androidx.appcompat.widget.x: void <clinit>()>
null to <androidx.appcompat.widget.x: void <clinit>()>
<androidx.appcompat.widget.x: void <clinit>()> to <androidx.appcompat.widget.x: void <clinit>()>
<androidx.appcompat.widget.x: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<androidx.appcompat.widget.x: void drawableStateChanged()>
null to <androidx.appcompat.widget.x: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.x: int getDropDownHorizontalOffset()>
null to <androidx.appcompat.widget.x: int getDropDownHorizontalOffset()>
UI update?

<androidx.appcompat.widget.x: int getDropDownVerticalOffset()>
null to <androidx.appcompat.widget.x: int getDropDownVerticalOffset()>
UI update?

<androidx.appcompat.widget.x: int getDropDownWidth()>
null to <androidx.appcompat.widget.x: int getDropDownWidth()>
UI update?

<androidx.appcompat.widget.x: androidx.appcompat.widget.x$g getInternalPopup()>
null to <androidx.appcompat.widget.x: androidx.appcompat.widget.x$g getInternalPopup()>
UI update?

<androidx.appcompat.widget.x: android.graphics.drawable.Drawable getPopupBackground()>
null to <androidx.appcompat.widget.x: android.graphics.drawable.Drawable getPopupBackground()>
UI update?

<androidx.appcompat.widget.x: android.content.Context getPopupContext()>
null to <androidx.appcompat.widget.x: android.content.Context getPopupContext()>
UI update?

<androidx.appcompat.widget.x: java.lang.CharSequence getPrompt()>
null to <androidx.appcompat.widget.x: java.lang.CharSequence getPrompt()>
UI update?

<androidx.appcompat.widget.x: android.content.res.ColorStateList getSupportBackgroundTintList()>
null to <androidx.appcompat.widget.x: android.content.res.ColorStateList getSupportBackgroundTintList()>
<androidx.appcompat.widget.x: android.content.res.ColorStateList getSupportBackgroundTintList()> to <androidx.appcompat.widget.e: android.content.res.ColorStateList c()>
UI update?

<androidx.appcompat.widget.x: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
null to <androidx.appcompat.widget.x: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<androidx.appcompat.widget.x: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()> to <androidx.appcompat.widget.e: android.graphics.PorterDuff$Mode d()>
UI update?

<androidx.appcompat.widget.x: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.x: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.x: void onMeasure(int,int)>
null to <androidx.appcompat.widget.x: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.x: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.appcompat.widget.x: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.appcompat.widget.x: android.os.Parcelable onSaveInstanceState()>
null to <androidx.appcompat.widget.x: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.appcompat.widget.x: boolean performClick()>
null to <androidx.appcompat.widget.x: boolean performClick()>
UI update?

<androidx.appcompat.widget.x: void setAdapter(android.widget.Adapter)>
null to <androidx.appcompat.widget.x: void setAdapter(android.widget.Adapter)>
UI update?

<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)>
null to <androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <androidx.appcompat.widget.x$c: void o(android.widget.ListAdapter)>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <androidx.appcompat.widget.x$e: void o(android.widget.ListAdapter)>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <h.d: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.x: void setAdapter(android.widget.SpinnerAdapter)> to <android.widget.Spinner: android.content.Context getContext()>
<androidx.appcompat.widget.x$e: void o(android.widget.ListAdapter)> to <androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.widget.ResourceCursorAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.widget.CursorAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.widget.ArrayAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.widget.CursorAdapter: android.content.res.Resources$Theme getDropDownViewTheme()>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <android.widget.ArrayAdapter: android.content.res.Resources$Theme getDropDownViewTheme()>
<androidx.appcompat.widget.x$d: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)> to <java.lang.Object: void <init>()>
<h.d: android.content.res.Resources$Theme getTheme()> to <h.d: void d()>
<androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <androidx.appcompat.widget.k0$d: void <init>(androidx.appcompat.widget.k0)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <androidx.appcompat.widget.x$d: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.ListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <androidx.appcompat.widget.x$d: void unregisterDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.k0: void o(android.widget.ListAdapter)> to <android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: void d()> to <h.d: android.content.res.Resources getResources()>
<h.d: void d()> to <android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
<h.d: void d()> to <h.d: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <androidx.appcompat.widget.v0: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
<h.d: void d()> to <android.content.res.Resources: android.content.res.Resources$Theme newTheme()>
<h.d: void d()> to <h.d: void e(android.content.res.Resources$Theme,int,boolean)>
<h.d: void d()> to <android.content.ContextWrapper: android.content.Context getBaseContext()>
<androidx.appcompat.widget.k0$d: void <init>(androidx.appcompat.widget.k0)> to <android.database.DataSetObserver: void <init>()>
<androidx.appcompat.widget.x$d: void registerDataSetObserver(android.database.DataSetObserver)> to <android.widget.SpinnerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.x$d: void registerDataSetObserver(android.database.DataSetObserver)> to <androidx.appcompat.widget.x$d: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.x$d: void registerDataSetObserver(android.database.DataSetObserver)> to <android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.x$d: void unregisterDataSetObserver(android.database.DataSetObserver)> to <android.widget.SpinnerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.x$d: void unregisterDataSetObserver(android.database.DataSetObserver)> to <androidx.appcompat.widget.x$d: void unregisterDataSetObserver(android.database.DataSetObserver)>
<androidx.appcompat.widget.x$d: void unregisterDataSetObserver(android.database.DataSetObserver)> to <android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources getResources()> to <h.d: android.content.res.Resources b()>
<h.d: void e(android.content.res.Resources$Theme,int,boolean)> to <android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<h.d: android.content.res.Resources b()> to <android.os.Build$VERSION: void <clinit>()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<h.d: android.content.res.Resources b()> to <h.d: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.widget.v0: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.app.Application: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <androidx.appcompat.app.c: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.res.Resources getResources()>
<h.d: android.content.res.Resources b()> to <android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<h.d: android.content.res.Resources b()> to <android.content.res.Configuration: void <clinit>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<androidx.appcompat.app.c: android.content.res.Resources getResources()> to <androidx.appcompat.widget.d1: boolean b()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.AssetManager getAssets()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <androidx.appcompat.widget.o0: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: void <init>(android.content.Context,android.content.res.Resources)> to <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.d1: boolean b()> to <androidx.appcompat.widget.d1: boolean a()>
<androidx.appcompat.widget.d1: boolean a()> to <androidx.appcompat.widget.d1: void <clinit>()>
UI update?

<androidx.appcompat.widget.x: void setDropDownHorizontalOffset(int)>
null to <androidx.appcompat.widget.x: void setDropDownHorizontalOffset(int)>
UI update?

<androidx.appcompat.widget.x: void setDropDownVerticalOffset(int)>
null to <androidx.appcompat.widget.x: void setDropDownVerticalOffset(int)>
UI update?

<androidx.appcompat.widget.x: void setDropDownWidth(int)>
null to <androidx.appcompat.widget.x: void setDropDownWidth(int)>
UI update?

<androidx.appcompat.widget.x: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.x: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.x: void setPopupBackgroundResource(int)>
null to <androidx.appcompat.widget.x: void setPopupBackgroundResource(int)>
UI update?

<androidx.appcompat.widget.x: void setPrompt(java.lang.CharSequence)>
null to <androidx.appcompat.widget.x: void setPrompt(java.lang.CharSequence)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.v

<androidx.appcompat.widget.v: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.v: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.v: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.widget.v: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.widget.v: void drawableStateChanged()>
null to <androidx.appcompat.widget.v: void drawableStateChanged()>
UI update?
------------------------------------------------------
b1.z$a

<androidx.appcompat.widget.v: void onDraw(android.graphics.Canvas)>
null to <androidx.appcompat.widget.v: void onDraw(android.graphics.Canvas)>
UI update?

<b1.z$a: void <clinit>()>
null to <b1.z$a: void <clinit>()>
<b1.z$a: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<b1.z$a: void <clinit>()> to <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<b1.z$a: void <clinit>()> to <b1.z$a: void <clinit>()>
<b1.z$a: void <clinit>()> to <android.view.View: void <clinit>()>
<java.lang.Integer: void <clinit>()> to <java.lang.Integer: void <clinit>()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<b1.z$a: void c()>
null to <b1.z$a: void c()>
<b1.z$a: void c()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
UI update?

<b1.z$a: void d()>
null to <b1.z$a: void d()>
<b1.z$a: void d()> to <android.view.ViewGroup: int getChildCount()>
<b1.z$a: void d()> to <androidx.fragment.app.h: void removeView(android.view.View)>
<b1.z$a: void d()> to <androidx.viewpager.widget.b: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.view.ViewGroup: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.AdapterView: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.LinearLayout: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.FrameLayout: void removeView(android.view.View)>
<b1.z$a: void d()> to <java.util.ArrayList: int size()>
<androidx.fragment.app.h: void removeView(android.view.View)> to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void removeView(android.view.View)> to <android.widget.FrameLayout: void removeView(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeView(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<b1.z$a: void e(int[])>
null to <b1.z$a: void e(int[])>
UI update?

<b1.z$a: void a(android.graphics.drawable.Drawable)>
null to <b1.z$a: void a(android.graphics.drawable.Drawable)>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <b1.z$a: void c()>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <java.util.ArrayList: void <init>()>
<b1.z$a: void a(android.graphics.drawable.Drawable)> to <android.view.ViewGroup: void invalidate(android.graphics.Rect)>
<b1.z$a: void c()> to <java.lang.IllegalStateException: void <init>(java.lang.String)>
UI update?

<b1.z$a: void dispatchDraw(android.graphics.Canvas)>
null to <b1.z$a: void dispatchDraw(android.graphics.Canvas)>
UI update?

<b1.z$a: boolean dispatchTouchEvent(android.view.MotionEvent)>
null to <b1.z$a: boolean dispatchTouchEvent(android.view.MotionEvent)>
UI update?

<b1.z$a: void f(android.graphics.drawable.Drawable)>
null to <b1.z$a: void f(android.graphics.drawable.Drawable)>
UI update?

<b1.z$a: void g(android.view.View)>
null to <b1.z$a: void g(android.view.View)>
<b1.z$a: void g(android.view.View)> to <android.view.ViewGroup: void removeView(android.view.View)>
<b1.z$a: void g(android.view.View)> to <b1.z$a: void d()>
<b1.z$a: void d()> to <android.view.ViewGroup: int getChildCount()>
<b1.z$a: void d()> to <androidx.fragment.app.h: void removeView(android.view.View)>
<b1.z$a: void d()> to <androidx.viewpager.widget.b: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.view.ViewGroup: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.AdapterView: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.LinearLayout: void removeView(android.view.View)>
<b1.z$a: void d()> to <android.widget.FrameLayout: void removeView(android.view.View)>
<b1.z$a: void d()> to <java.util.ArrayList: int size()>
<androidx.fragment.app.h: void removeView(android.view.View)> to <androidx.fragment.app.h: void a(android.view.View)>
<androidx.fragment.app.h: void removeView(android.view.View)> to <android.widget.FrameLayout: void removeView(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<androidx.viewpager.widget.b: void removeView(android.view.View)> to <android.view.ViewGroup: void removeView(android.view.View)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.fragment.app.h: void a(android.view.View)> to <java.util.ArrayList: void <init>()>
UI update?

<b1.z$a: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
null to <b1.z$a: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
UI update?

<b1.z$a: void invalidateDrawable(android.graphics.drawable.Drawable)>
null to <b1.z$a: void invalidateDrawable(android.graphics.drawable.Drawable)>
<b1.z$a: void invalidateDrawable(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<b1.z$a: void invalidateDrawable(android.graphics.drawable.Drawable)> to <android.view.ViewGroup: void invalidate(android.graphics.Rect)>
UI update?

<b1.z$a: void onLayout(boolean,int,int,int,int)>
null to <b1.z$a: void onLayout(boolean,int,int,int,int)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyEditText

<b1.z$a: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <b1.z$a: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.simplemobiletools.commons.views.MyEditText: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyEditText: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.Toolbar

<androidx.appcompat.widget.Toolbar: int B(android.view.View,int,int[],int)>
null to <androidx.appcompat.widget.Toolbar: int B(android.view.View,int,int[],int)>
UI update?

<androidx.appcompat.widget.Toolbar: int C(android.view.View,int,int[],int)>
null to <androidx.appcompat.widget.Toolbar: int C(android.view.View,int,int[],int)>
UI update?

<androidx.appcompat.widget.Toolbar: int D(android.view.View,int,int,int,int,int[])>
null to <androidx.appcompat.widget.Toolbar: int D(android.view.View,int,int,int,int,int[])>
UI update?

<androidx.appcompat.widget.Toolbar: void E(android.view.View,int,int,int,int,int)>
null to <androidx.appcompat.widget.Toolbar: void E(android.view.View,int,int,int,int,int)>
UI update?

<androidx.appcompat.widget.Toolbar: void F()>
null to <androidx.appcompat.widget.Toolbar: void F()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean L()>
null to <androidx.appcompat.widget.Toolbar: boolean L()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean M(android.view.View)>
null to <androidx.appcompat.widget.Toolbar: boolean M(android.view.View)>
UI update?

<androidx.appcompat.widget.Toolbar: void b(java.util.List,int)>
null to <androidx.appcompat.widget.Toolbar: void b(java.util.List,int)>
UI update?

<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)>
null to <androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e m()>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: void c(android.view.View,boolean)> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.widget.Toolbar$e)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e m()> to <androidx.appcompat.widget.Toolbar$e: void <init>(int,int)>
<androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.widget.Toolbar$e)> to <androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void a(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.app.a$a)> to <androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.widget.Toolbar$e: void <init>(int,int)> to <androidx.appcompat.app.a$a: void <init>(int,int)>
<androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.app.a$a: void <init>(int,int)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
UI update?

<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()>
null to <androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()>
<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()> to <h.g: void <clinit>()>
<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()> to <h.g: void <init>(android.content.Context)>
<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()> to <android.view.ViewGroup: android.content.Context getContext()>
<h.g: void <clinit>()> to <h.g: void <clinit>()>
<h.g: void <init>(android.content.Context)> to <android.view.MenuInflater: void <init>(android.content.Context)>
UI update?

<androidx.appcompat.widget.Toolbar: void h()>
null to <androidx.appcompat.widget.Toolbar: void h()>
<androidx.appcompat.widget.Toolbar: void h()> to <androidx.appcompat.widget.p0: void <init>()>
<androidx.appcompat.widget.p0: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.Toolbar: int p(int)>
null to <androidx.appcompat.widget.Toolbar: int p(int)>
UI update?

<androidx.appcompat.widget.Toolbar: int q(android.view.View,int)>
null to <androidx.appcompat.widget.Toolbar: int q(android.view.View,int)>
UI update?

<androidx.appcompat.widget.Toolbar: int r(int)>
null to <androidx.appcompat.widget.Toolbar: int r(int)>
UI update?

<androidx.appcompat.widget.Toolbar: int s(android.view.View)>
null to <androidx.appcompat.widget.Toolbar: int s(android.view.View)>
UI update?

<androidx.appcompat.widget.Toolbar: int t(android.view.View)>
null to <androidx.appcompat.widget.Toolbar: int t(android.view.View)>
UI update?

<androidx.appcompat.widget.Toolbar: int u(java.util.List,int[])>
null to <androidx.appcompat.widget.Toolbar: int u(java.util.List,int[])>
UI update?

<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)>
null to <androidx.appcompat.widget.Toolbar: boolean y(android.view.View)>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <java.util.ArrayList: boolean contains(java.lang.Object)>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <android.widget.ImageButton: android.view.ViewParent getParent()>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <android.widget.ImageView: android.view.ViewParent getParent()>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
<androidx.appcompat.widget.Toolbar: boolean y(android.view.View)> to <android.view.View: android.view.ViewParent getParent()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean A()>
null to <androidx.appcompat.widget.Toolbar: boolean A()>
<androidx.appcompat.widget.Toolbar: boolean A()> to <androidx.appcompat.widget.ActionMenuView: boolean J()>
<androidx.appcompat.widget.ActionMenuView: boolean J()> to <androidx.appcompat.widget.c: boolean E()>
<androidx.appcompat.widget.c: boolean E()> to <androidx.appcompat.view.menu.i: boolean d()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.l: boolean b()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.b: boolean b()>
<androidx.appcompat.view.menu.l: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: int size()>
<androidx.appcompat.widget.k0: boolean b()> to <android.widget.PopupWindow: boolean isShowing()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.Toolbar: void G()>
null to <androidx.appcompat.widget.Toolbar: void G()>
<androidx.appcompat.widget.Toolbar: void G()> to <android.view.ViewGroup: int getChildCount()>
<androidx.appcompat.widget.Toolbar: void G()> to <java.util.ArrayList: boolean add(java.lang.Object)>
<androidx.appcompat.widget.Toolbar: void G()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: void G()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: void G()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.Toolbar: void G()> to <android.view.ViewGroup: void removeViewAt(int)>
<androidx.appcompat.widget.Toolbar: void G()> to <android.view.ViewGroup: android.view.View getChildAt(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void H(int,int)>
null to <androidx.appcompat.widget.Toolbar: void H(int,int)>
<androidx.appcompat.widget.Toolbar: void H(int,int)> to <androidx.appcompat.widget.Toolbar: void h()>
<androidx.appcompat.widget.Toolbar: void H(int,int)> to <androidx.appcompat.widget.p0: void g(int,int)>
<androidx.appcompat.widget.Toolbar: void h()> to <androidx.appcompat.widget.p0: void <init>()>
<androidx.appcompat.widget.p0: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.widget.Toolbar: void a()>
null to <androidx.appcompat.widget.Toolbar: void a()>
<androidx.appcompat.widget.Toolbar: void a()> to <java.util.ArrayList: int size()>
<androidx.appcompat.widget.Toolbar: void a()> to <android.view.ViewGroup: void addView(android.view.View)>
<androidx.appcompat.widget.Toolbar: void a()> to <java.util.ArrayList: void clear()>
<androidx.appcompat.widget.Toolbar: void a()> to <java.util.ArrayList: java.lang.Object get(int)>
UI update?

<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.Toolbar: boolean d()>
null to <androidx.appcompat.widget.Toolbar: boolean d()>
<androidx.appcompat.widget.Toolbar: boolean d()> to <android.view.ViewGroup: int getVisibility()>
<androidx.appcompat.widget.Toolbar: boolean d()> to <androidx.appcompat.widget.ActionMenuView: boolean K()>
UI update?

<androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()>
null to <androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()>
UI update?

<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()>
null to <androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetLeft()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetLeft()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetRight()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetRight()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetStart()>
UI update?

<androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()>
null to <androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()>
UI update?

<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>
null to <androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>
UI update?

<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()>
null to <androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()>
UI update?

<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()>
null to <androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()>
UI update?

<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>
null to <androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>
UI update?

<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>
null to <androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>
UI update?

<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()>
null to <androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()>
UI update?

<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>
null to <androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>
<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()> to <android.widget.ImageButton: java.lang.CharSequence getContentDescription()>
UI update?

<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
null to <androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()> to <android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
UI update?

<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.c getOuterActionMenuPresenter()>
null to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.c getOuterActionMenuPresenter()>
UI update?

<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()>
null to <androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()>
UI update?

<androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()>
null to <androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()>
UI update?

<androidx.appcompat.widget.Toolbar: int getPopupTheme()>
null to <androidx.appcompat.widget.Toolbar: int getPopupTheme()>
UI update?

<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()>
null to <androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()>
UI update?

<androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()>
null to <androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()>
UI update?

<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()>
null to <androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()>
UI update?

<androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()>
null to <androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()>
UI update?

<androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()>
null to <androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()>
UI update?

<androidx.appcompat.widget.Toolbar: int getTitleMarginStart()>
null to <androidx.appcompat.widget.Toolbar: int getTitleMarginStart()>
UI update?

<androidx.appcompat.widget.Toolbar: int getTitleMarginTop()>
null to <androidx.appcompat.widget.Toolbar: int getTitleMarginTop()>
UI update?

<androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()>
null to <androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()>
UI update?

<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e m()>
null to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e m()>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e m()> to <androidx.appcompat.widget.Toolbar$e: void <init>(int,int)>
<androidx.appcompat.widget.Toolbar$e: void <init>(int,int)> to <androidx.appcompat.app.a$a: void <init>(int,int)>
<androidx.appcompat.app.a$a: void <init>(int,int)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
UI update?

<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e n(android.util.AttributeSet)>
null to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e n(android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)>
null to <androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.widget.Toolbar$e)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$e o(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.widget.Toolbar$e)> to <androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$LayoutParams)> to <androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(android.view.ViewGroup$MarginLayoutParams)> to <androidx.appcompat.widget.Toolbar$e: void a(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.widget.Toolbar$e: void <init>(androidx.appcompat.app.a$a)> to <androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)>
<androidx.appcompat.app.a$a: void <init>(androidx.appcompat.app.a$a)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<androidx.appcompat.app.a$a: void <init>(android.view.ViewGroup$LayoutParams)> to <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
UI update?

<androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()>
null to <androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.Toolbar: void onMeasure(int,int)>
null to <androidx.appcompat.widget.Toolbar: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)>
null to <androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)>
UI update?

<androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
null to <androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.MotionEvent: int getActionMasked()>
<androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)> to <android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)>
null to <androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)>
null to <androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)>
UI update?

<androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)>
null to <androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)>
null to <androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)>
<androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)> to <android.view.ViewGroup: void requestLayout()>
UI update?

<androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)>
null to <androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)>
null to <androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setLogo(int)>
null to <androidx.appcompat.widget.Toolbar: void setLogo(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setLogoDescription(int)>
null to <androidx.appcompat.widget.Toolbar: void setLogoDescription(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)>
null to <androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$f)>
null to <androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$f)>
UI update?

<androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)>
null to <androidx.appcompat.widget.Toolbar: void setPopupTheme(int)>
<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)> to <android.view.ViewGroup: android.content.Context getContext()>
<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)> to <android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setSubtitle(int)>
null to <androidx.appcompat.widget.Toolbar: void setSubtitle(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)>
null to <androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>
null to <androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)> to <android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)> to <android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()> to <android.widget.TextView: android.content.res.ColorStateList getTextColors()>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitle(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitle(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)>
null to <androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)>
UI update?

<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>
null to <androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)> to <android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)>
<androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)> to <android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()> to <android.widget.TextView: android.content.res.ColorStateList getTextColors()>
UI update?

<androidx.appcompat.widget.Toolbar: boolean v()>
null to <androidx.appcompat.widget.Toolbar: boolean v()>
UI update?
------------------------------------------------------
androidx.appcompat.app.e$s

<androidx.appcompat.widget.Toolbar: boolean z()>
null to <androidx.appcompat.widget.Toolbar: boolean z()>
<androidx.appcompat.widget.Toolbar: boolean z()> to <androidx.appcompat.widget.ActionMenuView: boolean I()>
<androidx.appcompat.widget.ActionMenuView: boolean I()> to <androidx.appcompat.widget.c: boolean D()>
<androidx.appcompat.widget.c: boolean D()> to <androidx.appcompat.widget.c: boolean E()>
<androidx.appcompat.widget.c: boolean E()> to <androidx.appcompat.view.menu.i: boolean d()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.l: boolean b()>
<androidx.appcompat.view.menu.i: boolean d()> to <androidx.appcompat.view.menu.b: boolean b()>
<androidx.appcompat.view.menu.l: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <androidx.appcompat.widget.k0: boolean b()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.Vector: java.lang.Object get(int)>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.ArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <java.util.LinkedList: int size()>
<androidx.appcompat.view.menu.b: boolean b()> to <z2.t: int size()>
<androidx.appcompat.widget.k0: boolean b()> to <android.widget.PopupWindow: boolean isShowing()>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<androidx.appcompat.app.e$s: void <init>(androidx.appcompat.app.e,android.content.Context)>
null to <androidx.appcompat.app.e$s: void <init>(androidx.appcompat.app.e,android.content.Context)>
<androidx.appcompat.app.e$s: void <init>(androidx.appcompat.app.e,android.content.Context)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)> to <androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <clinit>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.graphics.Rect: void <init>()>
<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.app.e$s: boolean c(int,int)>
null to <androidx.appcompat.app.e$s: boolean c(int,int)>
UI update?

<androidx.appcompat.app.e$s: boolean dispatchKeyEvent(android.view.KeyEvent)>
null to <androidx.appcompat.app.e$s: boolean dispatchKeyEvent(android.view.KeyEvent)>
UI update?

<androidx.appcompat.app.e$s: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.app.e$s: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?
------------------------------------------------------
y1.a

<y1.a: void <clinit>()>
null to <y1.a: void <clinit>()>
UI update?

<y1.a: void <init>(android.content.Context,android.util.AttributeSet)>
null to <y1.a: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<y1.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <y1.a: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<y1.a: void onAttachedToWindow()>
null to <y1.a: void onAttachedToWindow()>
UI update?

<y1.a: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
null to <y1.a: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
UI update?
------------------------------------------------------
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton

<y1.a: void setUseMaterialThemeColors(boolean)>
null to <y1.a: void setUseMaterialThemeColors(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$e: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$d: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$c: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$b: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <com.google.android.material.button.MaterialButton: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void <clinit>()> to <android.view.View: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$e: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$d: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$c: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$b: void <init>(java.lang.Class,java.lang.String)> to <android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.button.MaterialButton: void <clinit>()> to <com.google.android.material.button.MaterialButton: void <clinit>()>
<com.google.android.material.button.MaterialButton: void <clinit>()> to <android.view.View: void <clinit>()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d l(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d l(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d m(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d m(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d o(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d o(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean q()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean q()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean q()> to <android.widget.TextView: int getVisibility()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d p(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.d p(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()> to <android.widget.TextView: android.content.res.ColorStateList getTextColors()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()> to <android.view.View: boolean isInEditMode()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean q()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean t()> to <i0.w: boolean T(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean q()> to <android.widget.TextView: int getVisibility()>
<i0.w: boolean T(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean T(android.view.View)> to <android.widget.ScrollView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getHeight()>
<i0.w: boolean T(android.view.View)> to <android.widget.ListView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.HorizontalScrollView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.ImageView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.FrameLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.Spinner: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.ViewGroup: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.TextView: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.widget.LinearLayout: int getWidth()>
<i0.w: boolean T(android.view.View)> to <android.view.View: boolean isLaidOut()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getExtendMotionSpec()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getExtendMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getHideMotionSpec()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getHideMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getShowMotionSpec()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getShowMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getShrinkMotionSpec()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: m1.h getShrinkMotionSpec()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void onAttachedToWindow()>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void onAttachedToWindow()>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: void <clinit>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int I(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPadding(int,int,int,int)> to <i0.w: int H(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int I(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int I(android.view.View)> to <android.widget.FrameLayout: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.Spinner: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.widget.TextView: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.ViewGroup: int getPaddingLeft()>
<i0.w: int I(android.view.View)> to <android.view.View: int getPaddingStart()>
<i0.w: int I(android.view.View)> to <android.widget.LinearLayout: int getPaddingStart()>
<i0.w: int H(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int H(android.view.View)> to <android.widget.FrameLayout: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.Spinner: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.widget.TextView: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.ViewGroup: int getPaddingRight()>
<i0.w: int H(android.view.View)> to <android.view.View: int getPaddingEnd()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setPaddingRelative(int,int,int,int)> to <android.widget.Button: void setPaddingRelative(int,int,int,int)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(m1.h)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(m1.h)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)>
UI update?

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)> to <android.widget.Button: void setTextColor(int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()> to <android.widget.TextView: android.content.res.ColorStateList getTextColors()>
UI update?
------------------------------------------------------
f2.a
------------------------------------------------------
com.google.android.material.appbar.AppBarLayout

<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)>
null to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)> to <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void s()> to <android.widget.TextView: android.content.res.ColorStateList getTextColors()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void <clinit>()>
null to <com.google.android.material.appbar.AppBarLayout: void <clinit>()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void a()>
null to <com.google.android.material.appbar.AppBarLayout: void a()>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)>
null to <com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.RadioGroup: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.RelativeLayout: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.FrameLayout: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.View: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.TextView: android.view.View findViewById(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean g()>
null to <com.google.android.material.appbar.AppBarLayout: boolean g()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void i()>
null to <com.google.android.material.appbar.AppBarLayout: void i()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void n(boolean,boolean,boolean)>
null to <com.google.android.material.appbar.AppBarLayout: void n(boolean,boolean,boolean)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean o(boolean)>
null to <com.google.android.material.appbar.AppBarLayout: boolean o(boolean)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean q()>
null to <com.google.android.material.appbar.AppBarLayout: boolean q()>
<com.google.android.material.appbar.AppBarLayout: boolean q()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean s()>
null to <com.google.android.material.appbar.AppBarLayout: boolean s()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)>
null to <com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <m1.a: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <com.google.android.material.appbar.AppBarLayout$a: void <init>(com.google.android.material.appbar.AppBarLayout,c2.g)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <androidx.appcompat.widget.o0: int getInteger(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.content.res.Resources: int getInteger(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <androidx.appcompat.widget.o0: float getDimension(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.content.res.Resources: float getDimension(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout$a: void <init>(com.google.android.material.appbar.AppBarLayout,c2.g)> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.o0: int getInteger(int)> to <android.content.res.Resources: int getInteger(int)>
<androidx.appcompat.widget.o0: int getInteger(int)> to <androidx.appcompat.widget.o0: int getInteger(int)>
<androidx.appcompat.widget.o0: float getDimension(int)> to <android.content.res.Resources: float getDimension(int)>
<androidx.appcompat.widget.o0: float getDimension(int)> to <androidx.appcompat.widget.o0: float getDimension(int)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void u()>
null to <com.google.android.material.appbar.AppBarLayout: void u()>
UI update?

<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c c()>
null to <com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c c()>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.appbar.AppBarLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c d(android.util.AttributeSet)>
null to <com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c d(android.util.AttributeSet)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void drawableStateChanged()>
null to <com.google.android.material.appbar.AppBarLayout: void drawableStateChanged()>
UI update?

<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c e(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$c e(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean f()>
null to <com.google.android.material.appbar.AppBarLayout: boolean f()>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
null to <com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
null to <com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.appbar.AppBarLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
null to <com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
null to <com.google.android.material.appbar.AppBarLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
UI update?

<com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
null to <com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$c getBehavior()>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>
null to <com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <java.lang.Math: int min(int,int)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>
null to <com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()>
null to <com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()>
null to <com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <android.widget.LinearLayout: int getHeight()>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()> to <i0.w: int D(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getPendingAction()>
null to <com.google.android.material.appbar.AppBarLayout: int getPendingAction()>
UI update?

<com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()>
null to <com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()>
UI update?

<com.google.android.material.appbar.AppBarLayout: float getTargetElevation()>
null to <com.google.android.material.appbar.AppBarLayout: float getTargetElevation()>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getTopInset()>
null to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
null to <com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>
null to <com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean h()>
null to <com.google.android.material.appbar.AppBarLayout: boolean h()>
<com.google.android.material.appbar.AppBarLayout: boolean h()> to <com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.Spinner: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: int getMeasuredHeight()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: android.view.View getChildAt(int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: boolean z(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <i0.w: int D(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()> to <java.lang.Math: int max(int,int)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()> to <i0.e0: int l()>
<i0.w: boolean z(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: boolean z(android.view.View)> to <android.view.View: boolean getFitsSystemWindows()>
<i0.w: int D(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: int D(android.view.View)> to <java.lang.Integer: int intValue()>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<i0.w: int D(android.view.View)> to <java.lang.reflect.Field: void setAccessible(boolean)>
<i0.w: int D(android.view.View)> to <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<i0.w: int D(android.view.View)> to <androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.view.View: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <android.widget.LinearLayout: int getMinimumHeight()>
<i0.w: int D(android.view.View)> to <i0.w: void <clinit>()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<i0.e0: int l()> to <i0.e0$g: z.b k()>
<i0.e0: int l()> to <i0.e0$l: z.b k()>
<java.lang.Integer: int intValue()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <java.lang.Math: int max(int,int)>
<androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()> to <android.widget.LinearLayout: int getMinimumHeight()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<i0.e0$g: z.b k()> to <z.b: void <clinit>()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>
<i0.e0$g: z.b k()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>
<i0.e0$g: z.b k()> to <z.b: z.b b(int,int,int,int)>
<i0.e0$l: z.b k()> to <z.b: void <clinit>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <clinit>()> to <z.b: void <clinit>()>
<z.b: void <clinit>()> to <z.b: void <init>(int,int,int,int)>
<z.b: z.b b(int,int,int,int)> to <z.b: void <clinit>()>
<z.b: z.b b(int,int,int,int)> to <z.b: void <init>(int,int,int,int)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<z.b: void <init>(int,int,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean j()>
null to <com.google.android.material.appbar.AppBarLayout: boolean j()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void k(int)>
null to <com.google.android.material.appbar.AppBarLayout: void k(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <i0.w: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.ArrayList: java.lang.Object get(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.LinkedList: java.lang.Object get(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <z2.t: java.lang.Object get(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.Vector: java.lang.Object get(int)>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.ArrayList: int size()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.LinkedList: int size()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <z2.t: int size()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <java.util.Vector: int size()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <android.view.View: boolean willNotDraw()>
<com.google.android.material.appbar.AppBarLayout: void k(int)> to <i0.w: void f0(android.view.View)>
<i0.w: void <clinit>()> to <i0.w: void <clinit>()>
<i0.w: void <clinit>()> to <i0.w$f: void <init>()>
<i0.w: void <clinit>()> to <i0.w$a: void <init>()>
<i0.w: void <clinit>()> to <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<z2.t: java.lang.Object get(int)> to <z2.t: java.lang.Void b(int)>
<z2.t: int size()> to <z2.t: int c()>
<i0.w: void f0(android.view.View)> to <android.os.Build$VERSION: void <clinit>()>
<i0.w: void f0(android.view.View)> to <android.widget.ProgressBar: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidate()>
<i0.w: void f0(android.view.View)> to <android.view.View: void postInvalidateOnAnimation()>
<i0.w$f: void <init>()> to <java.lang.Object: void <init>()>
<i0.w$f: void <init>()> to <java.util.WeakHashMap: void <init>()>
<i0.w$a: void <init>()> to <java.lang.Object: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: void <init>()>
<z2.t: java.lang.Void b(int)> to <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.String toString()>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<z2.t: java.lang.Void b(int)> to <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void l()>
null to <com.google.android.material.appbar.AppBarLayout: void l()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void m(boolean,boolean)>
null to <com.google.android.material.appbar.AppBarLayout: void m(boolean,boolean)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void onAttachedToWindow()>
null to <com.google.android.material.appbar.AppBarLayout: void onAttachedToWindow()>
UI update?

<com.google.android.material.appbar.AppBarLayout: int[] onCreateDrawableState(int)>
null to <com.google.android.material.appbar.AppBarLayout: int[] onCreateDrawableState(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void onDetachedFromWindow()>
null to <com.google.android.material.appbar.AppBarLayout: void onDetachedFromWindow()>
UI update?

<com.google.android.material.appbar.AppBarLayout: void onLayout(boolean,int,int,int,int)>
null to <com.google.android.material.appbar.AppBarLayout: void onLayout(boolean,int,int,int,int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void onMeasure(int,int)>
null to <com.google.android.material.appbar.AppBarLayout: void onMeasure(int,int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean p(boolean)>
null to <com.google.android.material.appbar.AppBarLayout: boolean p(boolean)>
<com.google.android.material.appbar.AppBarLayout: boolean p(boolean)> to <android.view.View: void refreshDrawableState()>
<com.google.android.material.appbar.AppBarLayout: boolean p(boolean)> to <com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)>
<com.google.android.material.appbar.AppBarLayout: boolean p(boolean)> to <android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <m1.a: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <com.google.android.material.appbar.AppBarLayout$a: void <init>(com.google.android.material.appbar.AppBarLayout,c2.g)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void start()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void start()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ObjectAnimator: void cancel()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <androidx.appcompat.widget.o0: int getInteger(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.content.res.Resources: int getInteger(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <androidx.appcompat.widget.o0: float getDimension(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.content.res.Resources: float getDimension(int)>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.view.ViewGroup: android.content.res.Resources getResources()>
<com.google.android.material.appbar.AppBarLayout: void t(c2.g,boolean)> to <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<m1.a: void <clinit>()> to <m1.a: void <clinit>()>
<m1.a: void <clinit>()> to <android.view.animation.DecelerateInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.c: void <init>()>
<m1.a: void <clinit>()> to <q0.a: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <init>()>
<m1.a: void <clinit>()> to <android.view.animation.LinearInterpolator: void <init>()>
<m1.a: void <clinit>()> to <q0.b: void <clinit>()>
<m1.a: void <clinit>()> to <q0.a: void <clinit>()>
<m1.a: void <clinit>()> to <q0.c: void <clinit>()>
<com.google.android.material.appbar.AppBarLayout$a: void <init>(com.google.android.material.appbar.AppBarLayout,c2.g)> to <java.lang.Object: void <init>()>
<androidx.appcompat.widget.o0: int getInteger(int)> to <android.content.res.Resources: int getInteger(int)>
<androidx.appcompat.widget.o0: int getInteger(int)> to <androidx.appcompat.widget.o0: int getInteger(int)>
<androidx.appcompat.widget.o0: float getDimension(int)> to <android.content.res.Resources: float getDimension(int)>
<androidx.appcompat.widget.o0: float getDimension(int)> to <androidx.appcompat.widget.o0: float getDimension(int)>
<q0.c: void <init>()> to <q0.c: void <clinit>()>
<q0.c: void <init>()> to <q0.d: void <init>(float[])>
<q0.a: void <init>()> to <q0.a: void <clinit>()>
<q0.a: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <init>()> to <q0.b: void <clinit>()>
<q0.b: void <init>()> to <q0.d: void <init>(float[])>
<q0.b: void <clinit>()> to <q0.b: void <clinit>()>
<q0.a: void <clinit>()> to <q0.a: void <clinit>()>
<q0.c: void <clinit>()> to <q0.c: void <clinit>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<q0.d: void <init>(float[])> to <java.lang.Object: void <init>()>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)>
null to <com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)> to <com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)> to <android.widget.FrameLayout: int getScrollY()>
<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)> to <android.view.View: int getScrollY()>
<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)> to <android.view.ViewGroup: int getScrollY()>
<com.google.android.material.appbar.AppBarLayout: boolean r(android.view.View)> to <android.view.View: boolean canScrollVertically(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.ViewGroup: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <java.lang.ref.WeakReference: java.lang.Object get()>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.RadioGroup: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.RelativeLayout: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.FrameLayout: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.view.View: android.view.View findViewById(int)>
<com.google.android.material.appbar.AppBarLayout: android.view.View b(android.view.View)> to <android.widget.TextView: android.view.View findViewById(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)>
null to <com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)>
null to <com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)>
null to <com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setOrientation(int)>
null to <com.google.android.material.appbar.AppBarLayout: void setOrientation(int)>
<com.google.android.material.appbar.AppBarLayout: void setOrientation(int)> to <android.widget.LinearLayout: void setOrientation(int)>
<com.google.android.material.appbar.AppBarLayout: void setOrientation(int)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>
null to <com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)>
null to <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)>
null to <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)>
UI update?

<com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>
null to <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>
UI update?
------------------------------------------------------
androidx.appcompat.widget.ActionBarContainer

<com.google.android.material.appbar.AppBarLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <com.google.android.material.appbar.AppBarLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: int a(android.view.View)>
null to <androidx.appcompat.widget.ActionBarContainer: int a(android.view.View)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: boolean b(android.view.View)>
null to <androidx.appcompat.widget.ActionBarContainer: boolean b(android.view.View)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()>
null to <androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()>
UI update?

<androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()>
null to <androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()>
null to <androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()>
UI update?

<androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)>
null to <androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)>
null to <androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)>
null to <androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)>
<androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.widget.FrameLayout: int getBottom()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.view.View: int getBottom()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.view.View: int getRight()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.view.View: int getTop()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.view.View: int getLeft()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.widget.FrameLayout: void invalidateOutline()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.widget.FrameLayout: void invalidate()>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.widget.FrameLayout: void setWillNotDraw(boolean)>
<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)> to <android.widget.FrameLayout: void unscheduleDrawable(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)>
null to <androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)>
<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)> to <android.widget.FrameLayout: void removeView(android.view.View)>
<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)> to <androidx.appcompat.widget.q0: void setAllowCollapse(boolean)>
<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)> to <android.widget.HorizontalScrollView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.q0)> to <android.widget.FrameLayout: void addView(android.view.View)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)>
null to <androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)>
<androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)> to <android.widget.FrameLayout: void setDescendantFocusability(int)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>
null to <androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>
UI update?

<androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)>
null to <androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)>
UI update?
------------------------------------------------------
com.simplemobiletools.commons.views.MyViewPager

<androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)>
null to <androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)>
UI update?

<com.simplemobiletools.commons.views.MyViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.simplemobiletools.commons.views.MyViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.simplemobiletools.commons.views.MyViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
null to <com.simplemobiletools.commons.views.MyViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
UI update?
------------------------------------------------------
f2.b
------------------------------------------------------
com.google.android.material.textfield.g

<com.google.android.material.textfield.g: void <init>(android.content.Context,android.util.AttributeSet)>
null to <com.google.android.material.textfield.g: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<com.google.android.material.textfield.g: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <com.google.android.material.textfield.g: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<com.google.android.material.textfield.g: androidx.appcompat.widget.k0 a(com.google.android.material.textfield.g)>
null to <com.google.android.material.textfield.g: androidx.appcompat.widget.k0 a(com.google.android.material.textfield.g)>
UI update?

<com.google.android.material.textfield.g: void b(com.google.android.material.textfield.g,java.lang.Object)>
null to <com.google.android.material.textfield.g: void b(com.google.android.material.textfield.g,java.lang.Object)>
UI update?

<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()>
null to <com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
UI update?

<com.google.android.material.textfield.g: int d()>
null to <com.google.android.material.textfield.g: int d()>
UI update?

<com.google.android.material.textfield.g: void e(java.lang.Object)>
null to <com.google.android.material.textfield.g: void e(java.lang.Object)>
UI update?

<com.google.android.material.textfield.g: java.lang.CharSequence getHint()>
null to <com.google.android.material.textfield.g: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.g: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()>
<com.google.android.material.textfield.g: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.g: java.lang.CharSequence getHint()> to <com.google.android.material.textfield.TextInputLayout: boolean O()>
<com.google.android.material.textfield.g: java.lang.CharSequence getHint()> to <android.widget.AutoCompleteTextView: java.lang.CharSequence getHint()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.view.View: android.view.ViewParent getParent()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.view.ViewGroup: android.view.ViewParent getParent()>
<com.google.android.material.textfield.g: com.google.android.material.textfield.TextInputLayout c()> to <android.widget.FrameLayout: android.view.ViewParent getParent()>
UI update?

<com.google.android.material.textfield.g: void onAttachedToWindow()>
null to <com.google.android.material.textfield.g: void onAttachedToWindow()>
UI update?

<com.google.android.material.textfield.g: void onMeasure(int,int)>
null to <com.google.android.material.textfield.g: void onMeasure(int,int)>
UI update?

<com.google.android.material.textfield.g: void setAdapter(android.widget.ListAdapter)>
null to <com.google.android.material.textfield.g: void setAdapter(android.widget.ListAdapter)>
UI update?
------------------------------------------------------
androidx.appcompat.view.menu.ActionMenuItemView

<androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: boolean g()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: boolean g()>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: boolean a()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: boolean a()>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: boolean b()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: boolean b()>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: boolean d()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: boolean d()>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: boolean f()>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <android.text.TextUtils: void <clinit>()>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <androidx.appcompat.widget.a0: java.lang.CharSequence getText()>
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <androidx.appcompat.widget.a0: void c()>
<androidx.appcompat.widget.a0: java.lang.CharSequence getText()> to <android.widget.TextView: java.lang.CharSequence getText()>
<androidx.appcompat.widget.a0: void c()> to <androidx.core.widget.i: void p(android.widget.TextView,g0.c)>
<androidx.appcompat.widget.a0: void c()> to <java.util.concurrent.FutureTask: java.lang.Object get()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c$a: boolean a(g0.c$a)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.RadioButton: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.EditText: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <android.widget.Button: void setText(java.lang.CharSequence)>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: g0.c$a a()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <g0.c: android.text.PrecomputedText b()>
<androidx.core.widget.i: void p(android.widget.TextView,g0.c)> to <androidx.core.widget.i: g0.c$a g(android.widget.TextView)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.graphics.Typeface: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <java.util.Locale: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.os.LocaleList: boolean equals(java.lang.Object)>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.graphics.Typeface getTypeface()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.util.Locale getTextLocale()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: android.os.LocaleList getTextLocales()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: int getFlags()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: java.lang.String getFontFeatureSettings()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getLetterSpacing()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSkewX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextScaleX()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextPaint: float getTextSize()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: android.text.TextPaint e()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int c()>
<g0.c$a: boolean a(g0.c$a)> to <g0.c$a: int b()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: void <clinit>()>
<g0.c$a: boolean a(g0.c$a)> to <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a a()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a d(android.text.TextDirectionHeuristic)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a c(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: g0.c$a$a b(int)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a$a: void <init>(android.text.TextPaint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.text.TextPaint: void <init>(android.graphics.Paint)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <g0.c$a: void <init>(android.text.PrecomputedText$Params)>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getHyphenationFrequency()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: int getBreakStrategy()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.TextPaint getPaint()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>
<androidx.core.widget.i: g0.c$a g(android.widget.TextView)> to <androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)>
<g0.c$a$a: g0.c$a a()> to <g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <java.lang.Object: void <init>()>
<g0.c$a$a: void <init>(android.text.TextPaint)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getHyphenationFrequency()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: int getBreakStrategy()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>
<g0.c$a: void <init>(android.text.PrecomputedText$Params)> to <java.lang.Object: void <init>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.text.TextDirectionHeuristics: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.String: int codePointAt(int)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getTextDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getLayoutDirection()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: java.util.Locale getTextLocale()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: int getInputType()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.os.Build$VERSION: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: void <clinit>()>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<androidx.core.widget.i: android.text.TextDirectionHeuristic f(android.widget.TextView)> to <java.lang.Character: byte getDirectionality(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.os.Build$VERSION: void <clinit>()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params build()>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: android.text.PrecomputedText$Params$Builder setBreakStrategy(int)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <android.text.PrecomputedText$Params$Builder: void <init>(android.text.TextPaint)>
<g0.c$a: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)> to <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> to <java.lang.Object: void finalize()>
<java.lang.Object: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int codePointAt(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: void <clinit>()> to <java.lang.Character: void <clinit>()>
<java.lang.Character: byte getDirectionality(int)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()> to <java.lang.Throwable: void <init>()>
<java.lang.Exception: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()> to <java.lang.Object: void <init>()>
<java.lang.Throwable: void <init>()> to <java.lang.RuntimeException: void <init>(java.lang.String)>
UI update?
<androidx.appcompat.view.menu.ActionMenuItemView: boolean f()> to <android.widget.TextView: void setText(java.lang.CharSequence)>true

<androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.g getItemData()>
null to <androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.g getItemData()>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.e$b)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.e$b)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)> to <android.widget.TextView: void setPadding(int,int,int,int)>
UI update?

<androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$b)>
null to <androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$b)>
UI update?
------------------------------------------------------
StaticAnalysis Complete!!
