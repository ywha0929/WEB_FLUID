<com.theartofdev.edmodo.cropper.CropImageView: void a(com.theartofdev.edmodo.cropper.CropImageView,boolean,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void d(float,float,boolean,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void l(boolean,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyRecyclerView: void onScrollStateChanged(int)> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void g()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void h()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void p(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyRecyclerView: boolean dispatchTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenamePatternTab,java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyAppCompatCheckbox: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyRecyclerView: int getItemPosition(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String getNewPath(java.lang.String,boolean)> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void r(android.graphics.Bitmap,int,android.net.Uri,int,int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: void renameAllFiles(java.util.List,boolean,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenamePatternTab: java.lang.String access$getNewPath(com.simplemobiletools.commons.views.RenamePatternTab,java.lang.String,boolean)> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.ImageView: void setImageResource(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.TextView: void setTextColor(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void f()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void access$receivedHash(com.simplemobiletools.commons.views.PatternTab,java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void b(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.ImageView: void setImageResource(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.TextView: void setTextColor(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void c(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash(java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-2(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.ImageView: void setImageResource(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.TextView: void setTextColor(int)>
<com.theartofdev.edmodo.cropper.CropImageView: void setImageUriAsync(android.net.Uri)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PatternTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PatternTab: void receivedHash$lambda-1(com.simplemobiletools.commons.views.PatternTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.LineColorPicker: void updateColors(java.util.ArrayList,int)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getCurrentPosition()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: long getDuration()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyFloatingActionButton: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseRendering()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: void pauseVideo()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: void loadVideo(android.net.Uri,com.google.vr.sdk.widgets.video.VrVideoView$Options)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: void playVideo()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyCompatRadioButton: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.video.VrVideoView: void seekTo(long)> to <android.widget.TextView: void setText(int)>
<h5.w: void setViewerName(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void a(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView: void drawOverflowItem$lambda-13$lambda-11(com.simplemobiletools.commons.views.bottomactionmenu.BottomActionMenuView,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: void addOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: void removeOnPageChangeListener(androidx.viewpager.widget.b$j)> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int)> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: int getCurrentItem()> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: void setAdapter(androidx.viewpager.widget.a)> to <android.widget.TextView: void setText(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.duolingo.open.rtlviewpager.b: void setCurrentItem(int,boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyEditText: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<h5.w: void j(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<h5.w: void j(int)> to <android.widget.ImageView: void setImageResource(int)>
<h5.w: void j(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<h5.w: void j(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<h5.w: void j(int)> to <android.widget.TextView: void setTextColor(int)>
<h5.w: void j(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<h5.w: void j(int)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateStereoMode()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateControlsLayout()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void updateViewerName()> to <android.widget.TextView: void setText(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: void requestDisallowInterceptTouchEvent(boolean)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void resumeRendering()> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void shutdown()> to <android.widget.TextView: void setText(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.alexvasilkov.gestures.GestureFrameLayout: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void pauseRendering()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void a(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.TextView: void setTextColor(int)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.google.vr.sdk.widgets.common.VrWidgetView: void setDisplayMode(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb(com.simplemobiletools.commons.models.FileDirItem,int,boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-2$lambda-1(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void b(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void addBreadcrumb$lambda-4$lambda-3(com.simplemobiletools.commons.views.Breadcrumbs,int,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void reset(boolean)> to <android.widget.TextView: void setText(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void refreshRequiredTiles(boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.Breadcrumbs: void updateFontSize(float,boolean)> to <android.widget.TextView: void setText(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEventInternal(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.Breadcrumbs: void setBreadcrumb(java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void recycle()> to <android.widget.TextView: void setText(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setImage(java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-2(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void b(com.simplemobiletools.commons.views.MySearchMenu)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu$lambda-0(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void c(com.simplemobiletools.commons.views.MySearchMenu,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.TextView: void setTextColor(int)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView: void setMinimumTileDpi(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: java.lang.String getCurrentQuery()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void focusView()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void closeSearch()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: com.google.android.material.appbar.MaterialToolbar getToolbar()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void setupMenu()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleHideOnScroll(boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void toggleForceArrowBackIcon(boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateHintText(java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySearchMenu: void updateColors()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void B()> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void C()> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void F()> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void D()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void A(java.util.List)> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropOverlayView: void c(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropOverlayView: void p(float,float)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropOverlayView: void q()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void E()> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropOverlayView: void setInitialCropWindowRect(android.graphics.Rect)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyTextView: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void u(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void v(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: com.andrognito.patternlockview.PatternLockView$f n(float,float)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void g(com.andrognito.patternlockview.PatternLockView$f)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void z(java.util.List)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void w(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.andrognito.patternlockview.PatternLockView: void y()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MySeekBar: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.andrognito.patternlockview.PatternLockView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void e(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean)> to <android.widget.TextView: void setText(int)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.theartofdev.edmodo.cropper.CropOverlayView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void s(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void d(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void G(float)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void u(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,android.view.View,boolean,int,java.lang.Object)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: void a(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void Q(int)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void t(android.view.View,boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.gallery.pro.views.EditorDrawCanvas: void undo()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.gallery.pro.views.InstantItemSwitch: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.ImageView: void setImageResource(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.TextView: void setTextColor(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.TextView: void setText(int)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller: void k(com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller,float)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void visibilityChanged(boolean)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.BiometricIdTab: void b(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.FingerprintTab: void checkRegisteredFingerprints$lambda-1(com.simplemobiletools.commons.views.FingerprintTab)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.BiometricIdTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.BiometricIdTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.BiometricIdTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void access$renameAllFiles(com.simplemobiletools.commons.views.RenameSimpleTab,java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void renameAllFiles(java.util.List,boolean,java.lang.String,com.simplemobiletools.commons.models.Android30RenameFormat,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenameSimpleTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void a(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void clear()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void confirmPIN()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void c(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.RenameSimpleTab: void dialogConfirmed(boolean,c7.l)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void b(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void addNumber(java.lang.String)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void e(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void g(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void f(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void d(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void i(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void k(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void l(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void j(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void h(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-0(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-10(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-11(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-4(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-1(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: void brightnessPercentChanged(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: void showValue(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: void percentChanged(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: void volumePercentChanged(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-3(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-6(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-2(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureImageView: void a(com.alexvasilkov.gestures.GestureImageView,v0.i)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureImageView: void b(v0.i)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-5(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-8(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-7(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: void resetPin()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.PinTab: android.view.View _$_findCachedViewById(int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void onFinishInflate$lambda-9(com.simplemobiletools.commons.views.PinTab,android.view.View)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.ImageView: void setImageResource(int)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.TextView: void setTextColor(int)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.h)> to <android.widget.TextView: void setText(int)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.alexvasilkov.gestures.GestureImageView: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.PinTab: void updatePinCode()> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.ImageView: void setImageResource(int)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.TextView: void setTextColor(int)>
<com.alexvasilkov.gestures.GestureImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.TextView: void setText(int)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.ImageView: void setImageResource(int)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.TextView: void setTextColor(int)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<pl.droidsonroids.gif.GifTextureView: void h(pl.droidsonroids.gif.h,pl.droidsonroids.gif.GifTextureView$b)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyAutoCompleteTextView: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyDialogViewPager: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.gallery.pro.views.MediaSideScroll: boolean onTouchEvent(android.view.MotionEvent)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyTextInputLayout: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.ImageView: void setImageResource(int)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.TextView: void setTextColor(int)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<com.simplemobiletools.commons.views.MyAppCompatSpinner: void setColors(int,int,int)> to <android.widget.TextView: void setText(int)>
<android.widget.TextView: void setTextColor(int)> to <android.widget.TextView: void setTextColor(int)>
<android.widget.TextView: void setText(java.lang.CharSequence)> to <android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> to <android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<android.widget.TextView: void setText(char[],int,int)> to <android.widget.TextView: void setText(char[],int,int)>
<android.widget.TextView: void setText(int)> to <android.widget.TextView: void setText(int)>
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)> to <android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>
<android.widget.ImageView: void setImageResource(int)> to <android.widget.ImageView: void setImageResource(int)>
<android.widget.ImageView: void setImageURI(android.net.Uri)> to <android.widget.ImageView: void setImageURI(android.net.Uri)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)> to <android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)> to <android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)> to <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)> to <android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
